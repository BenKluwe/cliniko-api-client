// Package cliniko provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.

package cliniko

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BasicAuthScopes = "basicAuth.Scopes"
)

// Defines values for AppointmentTypeOnlineBookingsLeadTimeHours.
const (
	AppointmentTypeOnlineBookingsLeadTimeHoursN0   AppointmentTypeOnlineBookingsLeadTimeHours = 0
	AppointmentTypeOnlineBookingsLeadTimeHoursN1   AppointmentTypeOnlineBookingsLeadTimeHours = 1
	AppointmentTypeOnlineBookingsLeadTimeHoursN12  AppointmentTypeOnlineBookingsLeadTimeHours = 12
	AppointmentTypeOnlineBookingsLeadTimeHoursN168 AppointmentTypeOnlineBookingsLeadTimeHours = 168
	AppointmentTypeOnlineBookingsLeadTimeHoursN18  AppointmentTypeOnlineBookingsLeadTimeHours = 18
	AppointmentTypeOnlineBookingsLeadTimeHoursN2   AppointmentTypeOnlineBookingsLeadTimeHours = 2
	AppointmentTypeOnlineBookingsLeadTimeHoursN24  AppointmentTypeOnlineBookingsLeadTimeHours = 24
	AppointmentTypeOnlineBookingsLeadTimeHoursN336 AppointmentTypeOnlineBookingsLeadTimeHours = 336
	AppointmentTypeOnlineBookingsLeadTimeHoursN4   AppointmentTypeOnlineBookingsLeadTimeHours = 4
	AppointmentTypeOnlineBookingsLeadTimeHoursN48  AppointmentTypeOnlineBookingsLeadTimeHours = 48
	AppointmentTypeOnlineBookingsLeadTimeHoursN504 AppointmentTypeOnlineBookingsLeadTimeHours = 504
	AppointmentTypeOnlineBookingsLeadTimeHoursN672 AppointmentTypeOnlineBookingsLeadTimeHours = 672
	AppointmentTypeOnlineBookingsLeadTimeHoursN72  AppointmentTypeOnlineBookingsLeadTimeHours = 72
)

// Defines values for AppointmentTypeOnlinePaymentsMode.
const (
	AppointmentTypeOnlinePaymentsModeDepositRequired AppointmentTypeOnlinePaymentsMode = "deposit_required"
	AppointmentTypeOnlinePaymentsModeOptional        AppointmentTypeOnlinePaymentsMode = "optional"
	AppointmentTypeOnlinePaymentsModeRequired        AppointmentTypeOnlinePaymentsMode = "required"
)

// Defines values for AttachmentPresignedPostFieldsAcl.
const (
	Private AttachmentPresignedPostFieldsAcl = "private"
)

// Defines values for AttachmentPresignedPostFieldsSuccessActionStatus.
const (
	N201 AttachmentPresignedPostFieldsSuccessActionStatus = "201"
)

// Defines values for AttendeeCancellationReasonDescription.
const (
	AttendeeCancellationReasonDescriptionAway           AttendeeCancellationReasonDescription = "Away"
	AttendeeCancellationReasonDescriptionCOVID19Related AttendeeCancellationReasonDescription = "COVID-19 related"
	AttendeeCancellationReasonDescriptionConditionWorse AttendeeCancellationReasonDescription = "Condition Worse"
	AttendeeCancellationReasonDescriptionEmpty          AttendeeCancellationReasonDescription = ""
	AttendeeCancellationReasonDescriptionFeelingBetter  AttendeeCancellationReasonDescription = "Feeling Better"
	AttendeeCancellationReasonDescriptionOther          AttendeeCancellationReasonDescription = "Other"
	AttendeeCancellationReasonDescriptionSick           AttendeeCancellationReasonDescription = "Sick"
	AttendeeCancellationReasonDescriptionWork           AttendeeCancellationReasonDescription = "Work"
)

// Defines values for AttendeeInvoiceStatus.
const (
	AttendeeInvoiceStatusN10 AttendeeInvoiceStatus = 10
	AttendeeInvoiceStatusN20 AttendeeInvoiceStatus = 20
	AttendeeInvoiceStatusN30 AttendeeInvoiceStatus = 30
	AttendeeInvoiceStatusN40 AttendeeInvoiceStatus = 40
)

// Defines values for AttendeeTreatmentNoteStatus.
const (
	AttendeeTreatmentNoteStatusN10 AttendeeTreatmentNoteStatus = 10
	AttendeeTreatmentNoteStatusN90 AttendeeTreatmentNoteStatus = 90
)

// Defines values for AvailabilityBlockRepeatRuleRepeatType.
const (
	AvailabilityBlockRepeatRuleRepeatTypeDaily   AvailabilityBlockRepeatRuleRepeatType = "Daily"
	AvailabilityBlockRepeatRuleRepeatTypeMonthly AvailabilityBlockRepeatRuleRepeatType = "Monthly"
	AvailabilityBlockRepeatRuleRepeatTypeWeekly  AvailabilityBlockRepeatRuleRepeatType = "Weekly"
)

// Defines values for BillableItemItemType.
const (
	BillableItemItemTypeOther   BillableItemItemType = "Other"
	BillableItemItemTypeProduct BillableItemItemType = "Product"
	BillableItemItemTypeService BillableItemItemType = "Service"
)

// Defines values for ContactDoctorType.
const (
	ContactDoctorTypeGeneralPractitioner ContactDoctorType = "general_practitioner"
	ContactDoctorTypeSpecialist          ContactDoctorType = "specialist"
)

// Defines values for ContactType.
const (
	Doctor         ContactType = "Doctor"
	N3rdPartyPayer ContactType = "3rd Party Payer"
	Standard       ContactType = "Standard"
)

// Defines values for ContactTypeCode.
const (
	ContactTypeCodeN0 ContactTypeCode = 0
	ContactTypeCodeN1 ContactTypeCode = 1
	ContactTypeCodeN2 ContactTypeCode = 2
)

// Defines values for DailyAvailabilityDayOfWeek.
const (
	DailyAvailabilityDayOfWeekN0 DailyAvailabilityDayOfWeek = 0
	DailyAvailabilityDayOfWeekN1 DailyAvailabilityDayOfWeek = 1
	DailyAvailabilityDayOfWeekN2 DailyAvailabilityDayOfWeek = 2
	DailyAvailabilityDayOfWeekN3 DailyAvailabilityDayOfWeek = 3
	DailyAvailabilityDayOfWeekN4 DailyAvailabilityDayOfWeek = 4
	DailyAvailabilityDayOfWeekN5 DailyAvailabilityDayOfWeek = 5
	DailyAvailabilityDayOfWeekN6 DailyAvailabilityDayOfWeek = 6
)

// Defines values for EmailCommunicationCategory.
const (
	EmailCommunicationCategoryAccountStatement                      EmailCommunicationCategory = "Account Statement"
	EmailCommunicationCategoryAppointmentCancellation               EmailCommunicationCategory = "Appointment Cancellation"
	EmailCommunicationCategoryAppointmentConfirmation               EmailCommunicationCategory = "Appointment Confirmation"
	EmailCommunicationCategoryAppointmentReminder                   EmailCommunicationCategory = "Appointment Reminder"
	EmailCommunicationCategoryAuthCode                              EmailCommunicationCategory = "Auth Code"
	EmailCommunicationCategoryBulkEmail                             EmailCommunicationCategory = "Bulk Email"
	EmailCommunicationCategoryCancelledAppointmentNotification      EmailCommunicationCategory = "Cancelled appointment notification"
	EmailCommunicationCategoryCardAutomaticallyUpdatedNotification  EmailCommunicationCategory = "Card automatically updated notification"
	EmailCommunicationCategoryCardExpiringNotification              EmailCommunicationCategory = "Card expiring notification"
	EmailCommunicationCategoryCompletedPatientForm                  EmailCommunicationCategory = "Completed Patient Form"
	EmailCommunicationCategoryDataExportCompleteNotification        EmailCommunicationCategory = "Data export complete notification"
	EmailCommunicationCategoryInvoice                               EmailCommunicationCategory = "Invoice"
	EmailCommunicationCategoryLetter                                EmailCommunicationCategory = "Letter"
	EmailCommunicationCategoryMailchimpIntegrationDisconnected      EmailCommunicationCategory = "Mailchimp integration disconnected"
	EmailCommunicationCategoryMemo                                  EmailCommunicationCategory = "Memo"
	EmailCommunicationCategoryNewUser                               EmailCommunicationCategory = "New user"
	EmailCommunicationCategoryOnlinePaymentRequest                  EmailCommunicationCategory = "Online payment request"
	EmailCommunicationCategoryPasswordChanged                       EmailCommunicationCategory = "Password changed"
	EmailCommunicationCategoryPatientForm                           EmailCommunicationCategory = "Patient Form"
	EmailCommunicationCategoryPatientReplyForwarded                 EmailCommunicationCategory = "Patient Reply Forwarded"
	EmailCommunicationCategoryPaymentReceipt                        EmailCommunicationCategory = "Payment Receipt"
	EmailCommunicationCategoryPractitionerAppointmentNotification   EmailCommunicationCategory = "Practitioner Appointment Notification"
	EmailCommunicationCategoryReferredUserBonusNotification         EmailCommunicationCategory = "Referred user bonus notification"
	EmailCommunicationCategoryReferredUserSignedUp                  EmailCommunicationCategory = "Referred user signed up"
	EmailCommunicationCategoryReferringUserBonusNotification        EmailCommunicationCategory = "Referring user bonus notification"
	EmailCommunicationCategoryReplyFromPatient                      EmailCommunicationCategory = "Reply from Patient"
	EmailCommunicationCategoryReplyFromPractitioner                 EmailCommunicationCategory = "Reply from Practitioner"
	EmailCommunicationCategoryResetPasswordInstructions             EmailCommunicationCategory = "Reset password instructions"
	EmailCommunicationCategorySMSCreditPurchaseFailed               EmailCommunicationCategory = "SMS credit purchase failed"
	EmailCommunicationCategorySMSCreditPurchaseReceipt              EmailCommunicationCategory = "SMS credit purchase receipt"
	EmailCommunicationCategorySMSCreditPurchaseReminder             EmailCommunicationCategory = "SMS credit purchase reminder"
	EmailCommunicationCategorySMSCreditPurchaseRequiresConfirmation EmailCommunicationCategory = "SMS credit purchase requires confirmation"
	EmailCommunicationCategorySMSMessage                            EmailCommunicationCategory = "SMS Message"
	EmailCommunicationCategoryStripeReceipt                         EmailCommunicationCategory = "Stripe receipt"
	EmailCommunicationCategorySubscriptionPaymentFailure            EmailCommunicationCategory = "Subscription payment failure"
	EmailCommunicationCategoryTodaysAppointmentsForPractitioner     EmailCommunicationCategory = "Today's appointments for practitioner"
	EmailCommunicationCategoryTrialEndingReminder                   EmailCommunicationCategory = "Trial ending reminder"
	EmailCommunicationCategoryTrialPaymentFailure                   EmailCommunicationCategory = "Trial payment failure"
	EmailCommunicationCategoryUnlockInstructions                    EmailCommunicationCategory = "Unlock instructions"
	EmailCommunicationCategoryUpcomingAppointments                  EmailCommunicationCategory = "Upcoming appointments"
	EmailCommunicationCategoryUpcomingYearlyPaymentAlert            EmailCommunicationCategory = "Upcoming yearly payment alert"
	EmailCommunicationCategoryUserEmailChanged                      EmailCommunicationCategory = "User email changed"
	EmailCommunicationCategoryUserEmailConfirmationInstructions     EmailCommunicationCategory = "User email confirmation instructions"
	EmailCommunicationCategoryXeroOAuthError                        EmailCommunicationCategory = "Xero OAuth error"
	EmailCommunicationCategoryXeroSyncErrorNotification             EmailCommunicationCategory = "Xero sync error notification"
)

// Defines values for EmailCommunicationCategoryCode.
const (
	EmailCommunicationCategoryCodeN1  EmailCommunicationCategoryCode = 1
	EmailCommunicationCategoryCodeN10 EmailCommunicationCategoryCode = 10
	EmailCommunicationCategoryCodeN11 EmailCommunicationCategoryCode = 11
	EmailCommunicationCategoryCodeN12 EmailCommunicationCategoryCode = 12
	EmailCommunicationCategoryCodeN13 EmailCommunicationCategoryCode = 13
	EmailCommunicationCategoryCodeN14 EmailCommunicationCategoryCode = 14
	EmailCommunicationCategoryCodeN15 EmailCommunicationCategoryCode = 15
	EmailCommunicationCategoryCodeN16 EmailCommunicationCategoryCode = 16
	EmailCommunicationCategoryCodeN17 EmailCommunicationCategoryCode = 17
	EmailCommunicationCategoryCodeN18 EmailCommunicationCategoryCode = 18
	EmailCommunicationCategoryCodeN19 EmailCommunicationCategoryCode = 19
	EmailCommunicationCategoryCodeN2  EmailCommunicationCategoryCode = 2
	EmailCommunicationCategoryCodeN20 EmailCommunicationCategoryCode = 20
	EmailCommunicationCategoryCodeN21 EmailCommunicationCategoryCode = 21
	EmailCommunicationCategoryCodeN22 EmailCommunicationCategoryCode = 22
	EmailCommunicationCategoryCodeN23 EmailCommunicationCategoryCode = 23
	EmailCommunicationCategoryCodeN24 EmailCommunicationCategoryCode = 24
	EmailCommunicationCategoryCodeN25 EmailCommunicationCategoryCode = 25
	EmailCommunicationCategoryCodeN26 EmailCommunicationCategoryCode = 26
	EmailCommunicationCategoryCodeN27 EmailCommunicationCategoryCode = 27
	EmailCommunicationCategoryCodeN28 EmailCommunicationCategoryCode = 28
	EmailCommunicationCategoryCodeN29 EmailCommunicationCategoryCode = 29
	EmailCommunicationCategoryCodeN3  EmailCommunicationCategoryCode = 3
	EmailCommunicationCategoryCodeN30 EmailCommunicationCategoryCode = 30
	EmailCommunicationCategoryCodeN31 EmailCommunicationCategoryCode = 31
	EmailCommunicationCategoryCodeN32 EmailCommunicationCategoryCode = 32
	EmailCommunicationCategoryCodeN33 EmailCommunicationCategoryCode = 33
	EmailCommunicationCategoryCodeN34 EmailCommunicationCategoryCode = 34
	EmailCommunicationCategoryCodeN35 EmailCommunicationCategoryCode = 35
	EmailCommunicationCategoryCodeN36 EmailCommunicationCategoryCode = 36
	EmailCommunicationCategoryCodeN37 EmailCommunicationCategoryCode = 37
	EmailCommunicationCategoryCodeN38 EmailCommunicationCategoryCode = 38
	EmailCommunicationCategoryCodeN39 EmailCommunicationCategoryCode = 39
	EmailCommunicationCategoryCodeN4  EmailCommunicationCategoryCode = 4
	EmailCommunicationCategoryCodeN40 EmailCommunicationCategoryCode = 40
	EmailCommunicationCategoryCodeN41 EmailCommunicationCategoryCode = 41
	EmailCommunicationCategoryCodeN42 EmailCommunicationCategoryCode = 42
	EmailCommunicationCategoryCodeN43 EmailCommunicationCategoryCode = 43
	EmailCommunicationCategoryCodeN44 EmailCommunicationCategoryCode = 44
	EmailCommunicationCategoryCodeN45 EmailCommunicationCategoryCode = 45
	EmailCommunicationCategoryCodeN5  EmailCommunicationCategoryCode = 5
	EmailCommunicationCategoryCodeN6  EmailCommunicationCategoryCode = 6
	EmailCommunicationCategoryCodeN7  EmailCommunicationCategoryCode = 7
	EmailCommunicationCategoryCodeN8  EmailCommunicationCategoryCode = 8
	EmailCommunicationCategoryCodeN9  EmailCommunicationCategoryCode = 9
)

// Defines values for EmailCommunicationDirectionCode.
const (
	EmailCommunicationDirectionCodeN1 EmailCommunicationDirectionCode = 1
	EmailCommunicationDirectionCodeN2 EmailCommunicationDirectionCode = 2
)

// Defines values for EmailCommunicationDirectionDescription.
const (
	EmailCommunicationDirectionDescriptionReceived EmailCommunicationDirectionDescription = "Received"
	EmailCommunicationDirectionDescriptionSent     EmailCommunicationDirectionDescription = "Sent"
)

// Defines values for EmailCommunicationType.
const (
	EmailCommunicationTypeEmail     EmailCommunicationType = "Email"
	EmailCommunicationTypeOther     EmailCommunicationType = "Other"
	EmailCommunicationTypePhoneCall EmailCommunicationType = "Phone call"
	EmailCommunicationTypeSMS       EmailCommunicationType = "SMS"
)

// Defines values for EmailCommunicationTypeCode.
const (
	EmailCommunicationTypeCodeN1 EmailCommunicationTypeCode = 1
	EmailCommunicationTypeCodeN2 EmailCommunicationTypeCode = 2
	EmailCommunicationTypeCodeN3 EmailCommunicationTypeCode = 3
	EmailCommunicationTypeCodeN4 EmailCommunicationTypeCode = 4
)

// Defines values for GroupAppointmentRepeatRuleRepeatType.
const (
	GroupAppointmentRepeatRuleRepeatTypeDaily   GroupAppointmentRepeatRuleRepeatType = "Daily"
	GroupAppointmentRepeatRuleRepeatTypeMonthly GroupAppointmentRepeatRuleRepeatType = "Monthly"
	GroupAppointmentRepeatRuleRepeatTypeWeekly  GroupAppointmentRepeatRuleRepeatType = "Weekly"
)

// Defines values for IndividualAppointmentCancellationReasonDescription.
const (
	IndividualAppointmentCancellationReasonDescriptionAway           IndividualAppointmentCancellationReasonDescription = "Away"
	IndividualAppointmentCancellationReasonDescriptionCOVID19Related IndividualAppointmentCancellationReasonDescription = "COVID-19 related"
	IndividualAppointmentCancellationReasonDescriptionConditionWorse IndividualAppointmentCancellationReasonDescription = "Condition Worse"
	IndividualAppointmentCancellationReasonDescriptionFeelingBetter  IndividualAppointmentCancellationReasonDescription = "Feeling Better"
	IndividualAppointmentCancellationReasonDescriptionOther          IndividualAppointmentCancellationReasonDescription = "Other"
	IndividualAppointmentCancellationReasonDescriptionSick           IndividualAppointmentCancellationReasonDescription = "Sick"
	IndividualAppointmentCancellationReasonDescriptionWork           IndividualAppointmentCancellationReasonDescription = "Work"
)

// Defines values for IndividualAppointmentRepeatRuleRepeatType.
const (
	IndividualAppointmentRepeatRuleRepeatTypeDaily   IndividualAppointmentRepeatRuleRepeatType = "Daily"
	IndividualAppointmentRepeatRuleRepeatTypeMonthly IndividualAppointmentRepeatRuleRepeatType = "Monthly"
	IndividualAppointmentRepeatRuleRepeatTypeWeekly  IndividualAppointmentRepeatRuleRepeatType = "Weekly"
)

// Defines values for InvoiceStatus.
const (
	InvoiceStatusN10 InvoiceStatus = 10
	InvoiceStatusN20 InvoiceStatus = 20
	InvoiceStatusN30 InvoiceStatus = 30
	InvoiceStatusN40 InvoiceStatus = 40
)

// Defines values for InvoiceStatusDescription.
const (
	Closed     InvoiceStatusDescription = "Closed"
	Open       InvoiceStatusDescription = "Open"
	OpenCredit InvoiceStatusDescription = "Open credit"
	Paid       InvoiceStatusDescription = "Paid"
)

// Defines values for MemoCommunicationCategory.
const (
	MemoCommunicationCategoryMemo MemoCommunicationCategory = "Memo"
)

// Defines values for MemoCommunicationCategoryCode.
const (
	MemoCommunicationCategoryCodeN12 MemoCommunicationCategoryCode = 12
)

// Defines values for MemoCommunicationDirectionCode.
const (
	MemoCommunicationDirectionCodeN1 MemoCommunicationDirectionCode = 1
	MemoCommunicationDirectionCodeN2 MemoCommunicationDirectionCode = 2
)

// Defines values for MemoCommunicationDirectionDescription.
const (
	MemoCommunicationDirectionDescriptionReceived MemoCommunicationDirectionDescription = "Received"
	MemoCommunicationDirectionDescriptionSent     MemoCommunicationDirectionDescription = "Sent"
)

// Defines values for MemoCommunicationType.
const (
	MemoCommunicationTypeEmail     MemoCommunicationType = "Email"
	MemoCommunicationTypeOther     MemoCommunicationType = "Other"
	MemoCommunicationTypePhoneCall MemoCommunicationType = "Phone call"
	MemoCommunicationTypeSMS       MemoCommunicationType = "SMS"
)

// Defines values for MemoCommunicationTypeCode.
const (
	MemoCommunicationTypeCodeN1 MemoCommunicationTypeCode = 1
	MemoCommunicationTypeCodeN2 MemoCommunicationTypeCode = 2
	MemoCommunicationTypeCodeN3 MemoCommunicationTypeCode = 3
	MemoCommunicationTypeCodeN4 MemoCommunicationTypeCode = 4
)

// Defines values for MemoCommunicationBodyCategoryCode.
const (
	MemoCommunicationBodyCategoryCodeN12 MemoCommunicationBodyCategoryCode = 12
)

// Defines values for MemoCommunicationBodyDirectionCode.
const (
	MemoCommunicationBodyDirectionCodeN1 MemoCommunicationBodyDirectionCode = 1
	MemoCommunicationBodyDirectionCodeN2 MemoCommunicationBodyDirectionCode = 2
)

// Defines values for MemoCommunicationBodyTypeCode.
const (
	MemoCommunicationBodyTypeCodeN1 MemoCommunicationBodyTypeCode = 1
	MemoCommunicationBodyTypeCodeN2 MemoCommunicationBodyTypeCode = 2
	MemoCommunicationBodyTypeCodeN3 MemoCommunicationBodyTypeCode = 3
	MemoCommunicationBodyTypeCodeN4 MemoCommunicationBodyTypeCode = 4
)

// Defines values for PatientReminderType.
const (
	PatientReminderTypeEmail    PatientReminderType = "Email"
	PatientReminderTypeNone     PatientReminderType = "None"
	PatientReminderTypeSMS      PatientReminderType = "SMS"
	PatientReminderTypeSMSEmail PatientReminderType = "SMS & Email"
)

// Defines values for PatientCaseReferralType.
const (
	PatientCaseReferralTypeDva      PatientCaseReferralType = "dva"
	PatientCaseReferralTypeMedicare PatientCaseReferralType = "medicare"
)

// Defines values for PatientFormContentSectionsQuestionsType.
const (
	PatientFormContentSectionsQuestionsTypeCheckboxes   PatientFormContentSectionsQuestionsType = "checkboxes"
	PatientFormContentSectionsQuestionsTypeDate         PatientFormContentSectionsQuestionsType = "date"
	PatientFormContentSectionsQuestionsTypeParagraph    PatientFormContentSectionsQuestionsType = "paragraph"
	PatientFormContentSectionsQuestionsTypeRadiobuttons PatientFormContentSectionsQuestionsType = "radiobuttons"
	PatientFormContentSectionsQuestionsTypeSignature    PatientFormContentSectionsQuestionsType = "signature"
	PatientFormContentSectionsQuestionsTypeText         PatientFormContentSectionsQuestionsType = "text"
)

// Defines values for PatientFormTemplateContentSectionsQuestionsType.
const (
	PatientFormTemplateContentSectionsQuestionsTypeCheckboxes   PatientFormTemplateContentSectionsQuestionsType = "checkboxes"
	PatientFormTemplateContentSectionsQuestionsTypeDate         PatientFormTemplateContentSectionsQuestionsType = "date"
	PatientFormTemplateContentSectionsQuestionsTypeParagraph    PatientFormTemplateContentSectionsQuestionsType = "paragraph"
	PatientFormTemplateContentSectionsQuestionsTypeRadiobuttons PatientFormTemplateContentSectionsQuestionsType = "radiobuttons"
	PatientFormTemplateContentSectionsQuestionsTypeSignature    PatientFormTemplateContentSectionsQuestionsType = "signature"
	PatientFormTemplateContentSectionsQuestionsTypeText         PatientFormTemplateContentSectionsQuestionsType = "text"
)

// Defines values for PhoneNumberPhoneType.
const (
	PhoneNumberPhoneTypeFax    PhoneNumberPhoneType = "Fax"
	PhoneNumberPhoneTypeHome   PhoneNumberPhoneType = "Home"
	PhoneNumberPhoneTypeMobile PhoneNumberPhoneType = "Mobile"
	PhoneNumberPhoneTypeOther  PhoneNumberPhoneType = "Other"
	PhoneNumberPhoneTypeWork   PhoneNumberPhoneType = "Work"
)

// Defines values for PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType.
const (
	PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsTypeCheckboxes   PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType = "checkboxes"
	PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsTypeDate         PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType = "date"
	PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsTypeParagraph    PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType = "paragraph"
	PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsTypeRadiobuttons PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType = "radiobuttons"
	PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsTypeText         PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType = "text"
)

// Defines values for PublicSettingsPatientPrivacyBrowserTitleNameFormat.
const (
	PublicSettingsPatientPrivacyBrowserTitleNameFormatAnonymous     PublicSettingsPatientPrivacyBrowserTitleNameFormat = "anonymous"
	PublicSettingsPatientPrivacyBrowserTitleNameFormatFirstName     PublicSettingsPatientPrivacyBrowserTitleNameFormat = "first_name"
	PublicSettingsPatientPrivacyBrowserTitleNameFormatFullName      PublicSettingsPatientPrivacyBrowserTitleNameFormat = "full_name"
	PublicSettingsPatientPrivacyBrowserTitleNameFormatInitials      PublicSettingsPatientPrivacyBrowserTitleNameFormat = "initials"
	PublicSettingsPatientPrivacyBrowserTitleNameFormatSemiAnonymous PublicSettingsPatientPrivacyBrowserTitleNameFormat = "semi_anonymous"
)

// Defines values for PublicSettingsPatientPrivacyIcalPatientNameOption.
const (
	PublicSettingsPatientPrivacyIcalPatientNameOptionAnonymous     PublicSettingsPatientPrivacyIcalPatientNameOption = "anonymous"
	PublicSettingsPatientPrivacyIcalPatientNameOptionFirstName     PublicSettingsPatientPrivacyIcalPatientNameOption = "first_name"
	PublicSettingsPatientPrivacyIcalPatientNameOptionFullName      PublicSettingsPatientPrivacyIcalPatientNameOption = "full_name"
	PublicSettingsPatientPrivacyIcalPatientNameOptionInitials      PublicSettingsPatientPrivacyIcalPatientNameOption = "initials"
	PublicSettingsPatientPrivacyIcalPatientNameOptionSemiAnonymous PublicSettingsPatientPrivacyIcalPatientNameOption = "semi_anonymous"
)

// Defines values for PublicSettingsRemindersDefaultReminderType.
const (
	PublicSettingsRemindersDefaultReminderTypeEmail    PublicSettingsRemindersDefaultReminderType = "Email"
	PublicSettingsRemindersDefaultReminderTypeNone     PublicSettingsRemindersDefaultReminderType = "None"
	PublicSettingsRemindersDefaultReminderTypeSMS      PublicSettingsRemindersDefaultReminderType = "SMS"
	PublicSettingsRemindersDefaultReminderTypeSMSEmail PublicSettingsRemindersDefaultReminderType = "SMS & Email"
)

// Defines values for PublicSettingsTerminologyPatient.
const (
	PublicSettingsTerminologyPatientClient  PublicSettingsTerminologyPatient = "client"
	PublicSettingsTerminologyPatientPatient PublicSettingsTerminologyPatient = "patient"
)

// Defines values for ReferralSourceReferrerType.
const (
	ReferralSourceReferrerTypeContact ReferralSourceReferrerType = "Contact"
	ReferralSourceReferrerTypePatient ReferralSourceReferrerType = "Patient"
)

// Defines values for ReferralSourceTypeReferrerType.
const (
	ReferralSourceTypeReferrerTypeContact ReferralSourceTypeReferrerType = "Contact"
	ReferralSourceTypeReferrerTypePatient ReferralSourceTypeReferrerType = "Patient"
)

// Defines values for SettingsPatientCustomFieldsDefinitionSectionsFieldsType.
const (
	SettingsPatientCustomFieldsDefinitionSectionsFieldsTypeCheckboxes   SettingsPatientCustomFieldsDefinitionSectionsFieldsType = "checkboxes"
	SettingsPatientCustomFieldsDefinitionSectionsFieldsTypeDate         SettingsPatientCustomFieldsDefinitionSectionsFieldsType = "date"
	SettingsPatientCustomFieldsDefinitionSectionsFieldsTypeParagraph    SettingsPatientCustomFieldsDefinitionSectionsFieldsType = "paragraph"
	SettingsPatientCustomFieldsDefinitionSectionsFieldsTypeRadiobuttons SettingsPatientCustomFieldsDefinitionSectionsFieldsType = "radiobuttons"
	SettingsPatientCustomFieldsDefinitionSectionsFieldsTypeText         SettingsPatientCustomFieldsDefinitionSectionsFieldsType = "text"
)

// Defines values for SettingsPatientPrivacyBrowserTitleNameFormat.
const (
	SettingsPatientPrivacyBrowserTitleNameFormatAnonymous     SettingsPatientPrivacyBrowserTitleNameFormat = "anonymous"
	SettingsPatientPrivacyBrowserTitleNameFormatFirstName     SettingsPatientPrivacyBrowserTitleNameFormat = "first_name"
	SettingsPatientPrivacyBrowserTitleNameFormatFullName      SettingsPatientPrivacyBrowserTitleNameFormat = "full_name"
	SettingsPatientPrivacyBrowserTitleNameFormatInitials      SettingsPatientPrivacyBrowserTitleNameFormat = "initials"
	SettingsPatientPrivacyBrowserTitleNameFormatSemiAnonymous SettingsPatientPrivacyBrowserTitleNameFormat = "semi_anonymous"
)

// Defines values for SettingsPatientPrivacyIcalPatientNameOption.
const (
	SettingsPatientPrivacyIcalPatientNameOptionAnonymous     SettingsPatientPrivacyIcalPatientNameOption = "anonymous"
	SettingsPatientPrivacyIcalPatientNameOptionFirstName     SettingsPatientPrivacyIcalPatientNameOption = "first_name"
	SettingsPatientPrivacyIcalPatientNameOptionFullName      SettingsPatientPrivacyIcalPatientNameOption = "full_name"
	SettingsPatientPrivacyIcalPatientNameOptionInitials      SettingsPatientPrivacyIcalPatientNameOption = "initials"
	SettingsPatientPrivacyIcalPatientNameOptionSemiAnonymous SettingsPatientPrivacyIcalPatientNameOption = "semi_anonymous"
)

// Defines values for SettingsRemindersDefaultReminderType.
const (
	SettingsRemindersDefaultReminderTypeEmail    SettingsRemindersDefaultReminderType = "Email"
	SettingsRemindersDefaultReminderTypeNone     SettingsRemindersDefaultReminderType = "None"
	SettingsRemindersDefaultReminderTypeSMS      SettingsRemindersDefaultReminderType = "SMS"
	SettingsRemindersDefaultReminderTypeSMSEmail SettingsRemindersDefaultReminderType = "SMS & Email"
)

// Defines values for SettingsTerminologyPatient.
const (
	SettingsTerminologyPatientClient  SettingsTerminologyPatient = "client"
	SettingsTerminologyPatientPatient SettingsTerminologyPatient = "patient"
)

// Defines values for SmsCommunicationCategory.
const (
	SmsCommunicationCategoryAccountStatement                      SmsCommunicationCategory = "Account Statement"
	SmsCommunicationCategoryAppointmentCancellation               SmsCommunicationCategory = "Appointment Cancellation"
	SmsCommunicationCategoryAppointmentConfirmation               SmsCommunicationCategory = "Appointment Confirmation"
	SmsCommunicationCategoryAppointmentReminder                   SmsCommunicationCategory = "Appointment Reminder"
	SmsCommunicationCategoryAuthCode                              SmsCommunicationCategory = "Auth Code"
	SmsCommunicationCategoryBulkEmail                             SmsCommunicationCategory = "Bulk Email"
	SmsCommunicationCategoryCancelledAppointmentNotification      SmsCommunicationCategory = "Cancelled appointment notification"
	SmsCommunicationCategoryCardAutomaticallyUpdatedNotification  SmsCommunicationCategory = "Card automatically updated notification"
	SmsCommunicationCategoryCardExpiringNotification              SmsCommunicationCategory = "Card expiring notification"
	SmsCommunicationCategoryCompletedPatientForm                  SmsCommunicationCategory = "Completed Patient Form"
	SmsCommunicationCategoryDataExportCompleteNotification        SmsCommunicationCategory = "Data export complete notification"
	SmsCommunicationCategoryInvoice                               SmsCommunicationCategory = "Invoice"
	SmsCommunicationCategoryLetter                                SmsCommunicationCategory = "Letter"
	SmsCommunicationCategoryMailchimpIntegrationDisconnected      SmsCommunicationCategory = "Mailchimp integration disconnected"
	SmsCommunicationCategoryMemo                                  SmsCommunicationCategory = "Memo"
	SmsCommunicationCategoryNewUser                               SmsCommunicationCategory = "New user"
	SmsCommunicationCategoryOnlinePaymentRequest                  SmsCommunicationCategory = "Online payment request"
	SmsCommunicationCategoryPasswordChanged                       SmsCommunicationCategory = "Password changed"
	SmsCommunicationCategoryPatientForm                           SmsCommunicationCategory = "Patient Form"
	SmsCommunicationCategoryPatientReplyForwarded                 SmsCommunicationCategory = "Patient Reply Forwarded"
	SmsCommunicationCategoryPaymentReceipt                        SmsCommunicationCategory = "Payment Receipt"
	SmsCommunicationCategoryPractitionerAppointmentNotification   SmsCommunicationCategory = "Practitioner Appointment Notification"
	SmsCommunicationCategoryReferredUserBonusNotification         SmsCommunicationCategory = "Referred user bonus notification"
	SmsCommunicationCategoryReferredUserSignedUp                  SmsCommunicationCategory = "Referred user signed up"
	SmsCommunicationCategoryReferringUserBonusNotification        SmsCommunicationCategory = "Referring user bonus notification"
	SmsCommunicationCategoryReplyFromPatient                      SmsCommunicationCategory = "Reply from Patient"
	SmsCommunicationCategoryReplyFromPractitioner                 SmsCommunicationCategory = "Reply from Practitioner"
	SmsCommunicationCategoryResetPasswordInstructions             SmsCommunicationCategory = "Reset password instructions"
	SmsCommunicationCategorySMSCreditPurchaseFailed               SmsCommunicationCategory = "SMS credit purchase failed"
	SmsCommunicationCategorySMSCreditPurchaseReceipt              SmsCommunicationCategory = "SMS credit purchase receipt"
	SmsCommunicationCategorySMSCreditPurchaseReminder             SmsCommunicationCategory = "SMS credit purchase reminder"
	SmsCommunicationCategorySMSCreditPurchaseRequiresConfirmation SmsCommunicationCategory = "SMS credit purchase requires confirmation"
	SmsCommunicationCategorySMSMessage                            SmsCommunicationCategory = "SMS Message"
	SmsCommunicationCategoryStripeReceipt                         SmsCommunicationCategory = "Stripe receipt"
	SmsCommunicationCategorySubscriptionPaymentFailure            SmsCommunicationCategory = "Subscription payment failure"
	SmsCommunicationCategoryTodaysAppointmentsForPractitioner     SmsCommunicationCategory = "Today's appointments for practitioner"
	SmsCommunicationCategoryTrialEndingReminder                   SmsCommunicationCategory = "Trial ending reminder"
	SmsCommunicationCategoryTrialPaymentFailure                   SmsCommunicationCategory = "Trial payment failure"
	SmsCommunicationCategoryUnlockInstructions                    SmsCommunicationCategory = "Unlock instructions"
	SmsCommunicationCategoryUpcomingAppointments                  SmsCommunicationCategory = "Upcoming appointments"
	SmsCommunicationCategoryUpcomingYearlyPaymentAlert            SmsCommunicationCategory = "Upcoming yearly payment alert"
	SmsCommunicationCategoryUserEmailChanged                      SmsCommunicationCategory = "User email changed"
	SmsCommunicationCategoryUserEmailConfirmationInstructions     SmsCommunicationCategory = "User email confirmation instructions"
	SmsCommunicationCategoryXeroOAuthError                        SmsCommunicationCategory = "Xero OAuth error"
	SmsCommunicationCategoryXeroSyncErrorNotification             SmsCommunicationCategory = "Xero sync error notification"
)

// Defines values for SmsCommunicationCategoryCode.
const (
	SmsCommunicationCategoryCodeN1  SmsCommunicationCategoryCode = 1
	SmsCommunicationCategoryCodeN10 SmsCommunicationCategoryCode = 10
	SmsCommunicationCategoryCodeN11 SmsCommunicationCategoryCode = 11
	SmsCommunicationCategoryCodeN12 SmsCommunicationCategoryCode = 12
	SmsCommunicationCategoryCodeN13 SmsCommunicationCategoryCode = 13
	SmsCommunicationCategoryCodeN14 SmsCommunicationCategoryCode = 14
	SmsCommunicationCategoryCodeN15 SmsCommunicationCategoryCode = 15
	SmsCommunicationCategoryCodeN16 SmsCommunicationCategoryCode = 16
	SmsCommunicationCategoryCodeN17 SmsCommunicationCategoryCode = 17
	SmsCommunicationCategoryCodeN18 SmsCommunicationCategoryCode = 18
	SmsCommunicationCategoryCodeN19 SmsCommunicationCategoryCode = 19
	SmsCommunicationCategoryCodeN2  SmsCommunicationCategoryCode = 2
	SmsCommunicationCategoryCodeN20 SmsCommunicationCategoryCode = 20
	SmsCommunicationCategoryCodeN21 SmsCommunicationCategoryCode = 21
	SmsCommunicationCategoryCodeN22 SmsCommunicationCategoryCode = 22
	SmsCommunicationCategoryCodeN23 SmsCommunicationCategoryCode = 23
	SmsCommunicationCategoryCodeN24 SmsCommunicationCategoryCode = 24
	SmsCommunicationCategoryCodeN25 SmsCommunicationCategoryCode = 25
	SmsCommunicationCategoryCodeN26 SmsCommunicationCategoryCode = 26
	SmsCommunicationCategoryCodeN27 SmsCommunicationCategoryCode = 27
	SmsCommunicationCategoryCodeN28 SmsCommunicationCategoryCode = 28
	SmsCommunicationCategoryCodeN29 SmsCommunicationCategoryCode = 29
	SmsCommunicationCategoryCodeN3  SmsCommunicationCategoryCode = 3
	SmsCommunicationCategoryCodeN30 SmsCommunicationCategoryCode = 30
	SmsCommunicationCategoryCodeN31 SmsCommunicationCategoryCode = 31
	SmsCommunicationCategoryCodeN32 SmsCommunicationCategoryCode = 32
	SmsCommunicationCategoryCodeN33 SmsCommunicationCategoryCode = 33
	SmsCommunicationCategoryCodeN34 SmsCommunicationCategoryCode = 34
	SmsCommunicationCategoryCodeN35 SmsCommunicationCategoryCode = 35
	SmsCommunicationCategoryCodeN36 SmsCommunicationCategoryCode = 36
	SmsCommunicationCategoryCodeN37 SmsCommunicationCategoryCode = 37
	SmsCommunicationCategoryCodeN38 SmsCommunicationCategoryCode = 38
	SmsCommunicationCategoryCodeN39 SmsCommunicationCategoryCode = 39
	SmsCommunicationCategoryCodeN4  SmsCommunicationCategoryCode = 4
	SmsCommunicationCategoryCodeN40 SmsCommunicationCategoryCode = 40
	SmsCommunicationCategoryCodeN41 SmsCommunicationCategoryCode = 41
	SmsCommunicationCategoryCodeN42 SmsCommunicationCategoryCode = 42
	SmsCommunicationCategoryCodeN43 SmsCommunicationCategoryCode = 43
	SmsCommunicationCategoryCodeN44 SmsCommunicationCategoryCode = 44
	SmsCommunicationCategoryCodeN45 SmsCommunicationCategoryCode = 45
	SmsCommunicationCategoryCodeN5  SmsCommunicationCategoryCode = 5
	SmsCommunicationCategoryCodeN6  SmsCommunicationCategoryCode = 6
	SmsCommunicationCategoryCodeN7  SmsCommunicationCategoryCode = 7
	SmsCommunicationCategoryCodeN8  SmsCommunicationCategoryCode = 8
	SmsCommunicationCategoryCodeN9  SmsCommunicationCategoryCode = 9
)

// Defines values for SmsCommunicationDirectionCode.
const (
	SmsCommunicationDirectionCodeN1 SmsCommunicationDirectionCode = 1
	SmsCommunicationDirectionCodeN2 SmsCommunicationDirectionCode = 2
)

// Defines values for SmsCommunicationDirectionDescription.
const (
	Received SmsCommunicationDirectionDescription = "Received"
	Sent     SmsCommunicationDirectionDescription = "Sent"
)

// Defines values for SmsCommunicationType.
const (
	SmsCommunicationTypeEmail     SmsCommunicationType = "Email"
	SmsCommunicationTypeOther     SmsCommunicationType = "Other"
	SmsCommunicationTypePhoneCall SmsCommunicationType = "Phone call"
	SmsCommunicationTypeSMS       SmsCommunicationType = "SMS"
)

// Defines values for SmsCommunicationTypeCode.
const (
	SmsCommunicationTypeCodeN1 SmsCommunicationTypeCode = 1
	SmsCommunicationTypeCodeN2 SmsCommunicationTypeCode = 2
	SmsCommunicationTypeCodeN3 SmsCommunicationTypeCode = 3
	SmsCommunicationTypeCodeN4 SmsCommunicationTypeCode = 4
)

// Defines values for TreatmentNoteContentSectionsQuestionsType.
const (
	TreatmentNoteContentSectionsQuestionsTypeBodycharts   TreatmentNoteContentSectionsQuestionsType = "bodycharts"
	TreatmentNoteContentSectionsQuestionsTypeCheckboxes   TreatmentNoteContentSectionsQuestionsType = "checkboxes"
	TreatmentNoteContentSectionsQuestionsTypeDate         TreatmentNoteContentSectionsQuestionsType = "date"
	TreatmentNoteContentSectionsQuestionsTypeParagraph    TreatmentNoteContentSectionsQuestionsType = "paragraph"
	TreatmentNoteContentSectionsQuestionsTypeRadiobuttons TreatmentNoteContentSectionsQuestionsType = "radiobuttons"
	TreatmentNoteContentSectionsQuestionsTypeText         TreatmentNoteContentSectionsQuestionsType = "text"
)

// Defines values for TreatmentNoteTemplateContentSectionsQuestionsType.
const (
	TreatmentNoteTemplateContentSectionsQuestionsTypeBodycharts   TreatmentNoteTemplateContentSectionsQuestionsType = "bodycharts"
	TreatmentNoteTemplateContentSectionsQuestionsTypeCheckboxes   TreatmentNoteTemplateContentSectionsQuestionsType = "checkboxes"
	TreatmentNoteTemplateContentSectionsQuestionsTypeDate         TreatmentNoteTemplateContentSectionsQuestionsType = "date"
	TreatmentNoteTemplateContentSectionsQuestionsTypeParagraph    TreatmentNoteTemplateContentSectionsQuestionsType = "paragraph"
	TreatmentNoteTemplateContentSectionsQuestionsTypeRadiobuttons TreatmentNoteTemplateContentSectionsQuestionsType = "radiobuttons"
	TreatmentNoteTemplateContentSectionsQuestionsTypeText         TreatmentNoteTemplateContentSectionsQuestionsType = "text"
)

// Defines values for UnavailableBlockRepeatRuleRepeatType.
const (
	UnavailableBlockRepeatRuleRepeatTypeDaily   UnavailableBlockRepeatRuleRepeatType = "Daily"
	UnavailableBlockRepeatRuleRepeatTypeMonthly UnavailableBlockRepeatRuleRepeatType = "Monthly"
	UnavailableBlockRepeatRuleRepeatTypeWeekly  UnavailableBlockRepeatRuleRepeatType = "Weekly"
)

// Defines values for UserRole.
const (
	UserRoleAdministrator     UserRole = "administrator"
	UserRoleBookkeeper        UserRole = "bookkeeper"
	UserRolePowerReceptionist UserRole = "power receptionist"
	UserRolePractitioner      UserRole = "practitioner"
	UserRoleReceptionist      UserRole = "receptionist"
	UserRoleScheduler         UserRole = "scheduler"
)

// Defines values for UserTimeZone.
const (
	AbuDhabi                  UserTimeZone = "Abu Dhabi"
	Adelaide                  UserTimeZone = "Adelaide"
	Alaska                    UserTimeZone = "Alaska"
	Almaty                    UserTimeZone = "Almaty"
	AmericanSamoa             UserTimeZone = "American Samoa"
	Amman                     UserTimeZone = "Amman"
	Amsterdam                 UserTimeZone = "Amsterdam"
	Arizona                   UserTimeZone = "Arizona"
	Ashgabat                  UserTimeZone = "Ashgabat"
	Astana                    UserTimeZone = "Astana"
	Asuncion                  UserTimeZone = "Asuncion"
	Athens                    UserTimeZone = "Athens"
	AtlanticTimeCanada        UserTimeZone = "Atlantic Time (Canada)"
	Auckland                  UserTimeZone = "Auckland"
	Azores                    UserTimeZone = "Azores"
	Baghdad                   UserTimeZone = "Baghdad"
	Baku                      UserTimeZone = "Baku"
	Bangkok                   UserTimeZone = "Bangkok"
	Beijing                   UserTimeZone = "Beijing"
	Beirut                    UserTimeZone = "Beirut"
	Belgrade                  UserTimeZone = "Belgrade"
	Berlin                    UserTimeZone = "Berlin"
	Bern                      UserTimeZone = "Bern"
	Bogota                    UserTimeZone = "Bogota"
	Brasilia                  UserTimeZone = "Brasilia"
	Bratislava                UserTimeZone = "Bratislava"
	Brisbane                  UserTimeZone = "Brisbane"
	Brussels                  UserTimeZone = "Brussels"
	Bucharest                 UserTimeZone = "Bucharest"
	Budapest                  UserTimeZone = "Budapest"
	BuenosAires               UserTimeZone = "Buenos Aires"
	Cairo                     UserTimeZone = "Cairo"
	Canberra                  UserTimeZone = "Canberra"
	CapeVerdeIs               UserTimeZone = "Cape Verde Is."
	Caracas                   UserTimeZone = "Caracas"
	Casablanca                UserTimeZone = "Casablanca"
	Cayenne                   UserTimeZone = "Cayenne"
	CentralAmerica            UserTimeZone = "Central America"
	CentralTimeUSCanada       UserTimeZone = "Central Time (US & Canada)"
	ChathamIs                 UserTimeZone = "Chatham Is."
	Chennai                   UserTimeZone = "Chennai"
	Chihuahua                 UserTimeZone = "Chihuahua"
	Chongqing                 UserTimeZone = "Chongqing"
	Copenhagen                UserTimeZone = "Copenhagen"
	Damascus                  UserTimeZone = "Damascus"
	Darwin                    UserTimeZone = "Darwin"
	Dhaka                     UserTimeZone = "Dhaka"
	Dublin                    UserTimeZone = "Dublin"
	EasternTimeUSCanada       UserTimeZone = "Eastern Time (US & Canada)"
	Edinburgh                 UserTimeZone = "Edinburgh"
	Ekaterinburg              UserTimeZone = "Ekaterinburg"
	Fiji                      UserTimeZone = "Fiji"
	Georgetown                UserTimeZone = "Georgetown"
	Greenland                 UserTimeZone = "Greenland"
	Guadalajara               UserTimeZone = "Guadalajara"
	Guam                      UserTimeZone = "Guam"
	Hanoi                     UserTimeZone = "Hanoi"
	Harare                    UserTimeZone = "Harare"
	Hawaii                    UserTimeZone = "Hawaii"
	Helsinki                  UserTimeZone = "Helsinki"
	Hobart                    UserTimeZone = "Hobart"
	HongKong                  UserTimeZone = "Hong Kong"
	IndianaEast               UserTimeZone = "Indiana (East)"
	InternationalDateLineWest UserTimeZone = "International Date Line West"
	Irkutsk                   UserTimeZone = "Irkutsk"
	Islamabad                 UserTimeZone = "Islamabad"
	Istanbul                  UserTimeZone = "Istanbul"
	Jakarta                   UserTimeZone = "Jakarta"
	Jerusalem                 UserTimeZone = "Jerusalem"
	Kabul                     UserTimeZone = "Kabul"
	Kaliningrad               UserTimeZone = "Kaliningrad"
	Kamchatka                 UserTimeZone = "Kamchatka"
	Karachi                   UserTimeZone = "Karachi"
	Kathmandu                 UserTimeZone = "Kathmandu"
	Kolkata                   UserTimeZone = "Kolkata"
	Krasnoyarsk               UserTimeZone = "Krasnoyarsk"
	KualaLumpur               UserTimeZone = "Kuala Lumpur"
	Kuwait                    UserTimeZone = "Kuwait"
	Kyiv                      UserTimeZone = "Kyiv"
	LaPaz                     UserTimeZone = "La Paz"
	Lima                      UserTimeZone = "Lima"
	Lisbon                    UserTimeZone = "Lisbon"
	Ljubljana                 UserTimeZone = "Ljubljana"
	London                    UserTimeZone = "London"
	LordHowe                  UserTimeZone = "Lord Howe"
	Madrid                    UserTimeZone = "Madrid"
	Magadan                   UserTimeZone = "Magadan"
	MarshallIs                UserTimeZone = "Marshall Is."
	Mazatlan                  UserTimeZone = "Mazatlan"
	Melbourne                 UserTimeZone = "Melbourne"
	MexicoCity                UserTimeZone = "Mexico City"
	MidAtlantic               UserTimeZone = "Mid-Atlantic"
	MidwayIsland              UserTimeZone = "Midway Island"
	Minsk                     UserTimeZone = "Minsk"
	Monrovia                  UserTimeZone = "Monrovia"
	Monterrey                 UserTimeZone = "Monterrey"
	Montevideo                UserTimeZone = "Montevideo"
	Moscow                    UserTimeZone = "Moscow"
	MountainTimeUSCanada      UserTimeZone = "Mountain Time (US & Canada)"
	Mumbai                    UserTimeZone = "Mumbai"
	Muscat                    UserTimeZone = "Muscat"
	Nairobi                   UserTimeZone = "Nairobi"
	NewCaledonia              UserTimeZone = "New Caledonia"
	NewDelhi                  UserTimeZone = "New Delhi"
	Newfoundland              UserTimeZone = "Newfoundland"
	Novosibirsk               UserTimeZone = "Novosibirsk"
	Nukualofa                 UserTimeZone = "Nuku'alofa"
	Osaka                     UserTimeZone = "Osaka"
	Oslo                      UserTimeZone = "Oslo"
	PacificTimeUSCanada       UserTimeZone = "Pacific Time (US & Canada)"
	Paris                     UserTimeZone = "Paris"
	Perth                     UserTimeZone = "Perth"
	PortLouis                 UserTimeZone = "Port Louis"
	PortMoresby               UserTimeZone = "Port Moresby"
	Prague                    UserTimeZone = "Prague"
	Pretoria                  UserTimeZone = "Pretoria"
	PuertoRico                UserTimeZone = "Puerto Rico"
	Quito                     UserTimeZone = "Quito"
	Rangoon                   UserTimeZone = "Rangoon"
	Riga                      UserTimeZone = "Riga"
	Riyadh                    UserTimeZone = "Riyadh"
	Rome                      UserTimeZone = "Rome"
	Samara                    UserTimeZone = "Samara"
	Samoa                     UserTimeZone = "Samoa"
	Santiago                  UserTimeZone = "Santiago"
	Sapporo                   UserTimeZone = "Sapporo"
	Sarajevo                  UserTimeZone = "Sarajevo"
	Saskatchewan              UserTimeZone = "Saskatchewan"
	Seoul                     UserTimeZone = "Seoul"
	Singapore                 UserTimeZone = "Singapore"
	Skopje                    UserTimeZone = "Skopje"
	Sofia                     UserTimeZone = "Sofia"
	SolomonIs                 UserTimeZone = "Solomon Is."
	Srednekolymsk             UserTimeZone = "Srednekolymsk"
	SriJayawardenepura        UserTimeZone = "Sri Jayawardenepura"
	StPetersburg              UserTimeZone = "St. Petersburg"
	Stockholm                 UserTimeZone = "Stockholm"
	Sydney                    UserTimeZone = "Sydney"
	Taipei                    UserTimeZone = "Taipei"
	Tallinn                   UserTimeZone = "Tallinn"
	Tashkent                  UserTimeZone = "Tashkent"
	Tbilisi                   UserTimeZone = "Tbilisi"
	Tehran                    UserTimeZone = "Tehran"
	Tijuana                   UserTimeZone = "Tijuana"
	TokelauIs                 UserTimeZone = "Tokelau Is."
	Tokyo                     UserTimeZone = "Tokyo"
	Tripoli                   UserTimeZone = "Tripoli"
	UTC                       UserTimeZone = "UTC"
	Ulaanbaatar               UserTimeZone = "Ulaanbaatar"
	Urumqi                    UserTimeZone = "Urumqi"
	Vienna                    UserTimeZone = "Vienna"
	Vilnius                   UserTimeZone = "Vilnius"
	Vladivostok               UserTimeZone = "Vladivostok"
	Volgograd                 UserTimeZone = "Volgograd"
	Warsaw                    UserTimeZone = "Warsaw"
	Wellington                UserTimeZone = "Wellington"
	WestCentralAfrica         UserTimeZone = "West Central Africa"
	Windhoek                  UserTimeZone = "Windhoek"
	Yakutsk                   UserTimeZone = "Yakutsk"
	Yerevan                   UserTimeZone = "Yerevan"
	Zagreb                    UserTimeZone = "Zagreb"
	Zurich                    UserTimeZone = "Zurich"
)

// Defines values for Order.
const (
	OrderAsc  Order = "asc"
	OrderDesc Order = "desc"
)

// Defines values for ListAppointmentTypesGetParamsOrder.
const (
	ListAppointmentTypesGetParamsOrderAsc  ListAppointmentTypesGetParamsOrder = "asc"
	ListAppointmentTypesGetParamsOrderDesc ListAppointmentTypesGetParamsOrder = "desc"
)

// Defines values for CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours.
const (
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN0   CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 0
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN1   CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 1
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN12  CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 12
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN168 CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 168
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN18  CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 18
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN2   CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 2
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN24  CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 24
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN336 CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 336
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN4   CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 4
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN48  CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 48
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN504 CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 504
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN672 CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 672
	CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHoursN72  CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours = 72
)

// Defines values for CreateAppointmentTypePostJSONBodyOnlinePaymentsMode.
const (
	CreateAppointmentTypePostJSONBodyOnlinePaymentsModeDepositRequired CreateAppointmentTypePostJSONBodyOnlinePaymentsMode = "deposit_required"
	CreateAppointmentTypePostJSONBodyOnlinePaymentsModeOptional        CreateAppointmentTypePostJSONBodyOnlinePaymentsMode = "optional"
	CreateAppointmentTypePostJSONBodyOnlinePaymentsModeRequired        CreateAppointmentTypePostJSONBodyOnlinePaymentsMode = "required"
)

// Defines values for ListPractitionersForAppointmentTypeGetParamsOrder.
const (
	ListPractitionersForAppointmentTypeGetParamsOrderAsc  ListPractitionersForAppointmentTypeGetParamsOrder = "asc"
	ListPractitionersForAppointmentTypeGetParamsOrderDesc ListPractitionersForAppointmentTypeGetParamsOrder = "desc"
)

// Defines values for ListInactivePractitionersForAppointmentTypeGetParamsOrder.
const (
	ListInactivePractitionersForAppointmentTypeGetParamsOrderAsc  ListInactivePractitionersForAppointmentTypeGetParamsOrder = "asc"
	ListInactivePractitionersForAppointmentTypeGetParamsOrderDesc ListInactivePractitionersForAppointmentTypeGetParamsOrder = "desc"
)

// Defines values for UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours.
const (
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN0   UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 0
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN1   UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 1
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN12  UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 12
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN168 UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 168
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN18  UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 18
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN2   UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 2
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN24  UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 24
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN336 UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 336
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN4   UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 4
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN48  UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 48
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN504 UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 504
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN672 UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 672
	UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHoursN72  UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours = 72
)

// Defines values for UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode.
const (
	DepositRequired UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode = "deposit_required"
	Optional        UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode = "optional"
	Required        UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode = "required"
)

// Defines values for ListInvoicesForAppointmentGetParamsOrder.
const (
	ListInvoicesForAppointmentGetParamsOrderAsc  ListInvoicesForAppointmentGetParamsOrder = "asc"
	ListInvoicesForAppointmentGetParamsOrderDesc ListInvoicesForAppointmentGetParamsOrder = "desc"
)

// Defines values for ListAttendeesGetParamsOrder.
const (
	ListAttendeesGetParamsOrderAsc  ListAttendeesGetParamsOrder = "asc"
	ListAttendeesGetParamsOrderDesc ListAttendeesGetParamsOrder = "desc"
)

// Defines values for ListInvoicesForAttendeeGetParamsOrder.
const (
	ListInvoicesForAttendeeGetParamsOrderAsc  ListInvoicesForAttendeeGetParamsOrder = "asc"
	ListInvoicesForAttendeeGetParamsOrderDesc ListInvoicesForAttendeeGetParamsOrder = "desc"
)

// Defines values for ListPatientFormsForAttendeeGetParamsOrder.
const (
	ListPatientFormsForAttendeeGetParamsOrderAsc  ListPatientFormsForAttendeeGetParamsOrder = "asc"
	ListPatientFormsForAttendeeGetParamsOrderDesc ListPatientFormsForAttendeeGetParamsOrder = "desc"
)

// Defines values for CancelAttendeePatchJSONBodyCancellationReason.
const (
	CancelAttendeePatchJSONBodyCancellationReasonN10 CancelAttendeePatchJSONBodyCancellationReason = 10
	CancelAttendeePatchJSONBodyCancellationReasonN20 CancelAttendeePatchJSONBodyCancellationReason = 20
	CancelAttendeePatchJSONBodyCancellationReasonN30 CancelAttendeePatchJSONBodyCancellationReason = 30
	CancelAttendeePatchJSONBodyCancellationReasonN31 CancelAttendeePatchJSONBodyCancellationReason = 31
	CancelAttendeePatchJSONBodyCancellationReasonN40 CancelAttendeePatchJSONBodyCancellationReason = 40
	CancelAttendeePatchJSONBodyCancellationReasonN50 CancelAttendeePatchJSONBodyCancellationReason = 50
	CancelAttendeePatchJSONBodyCancellationReasonN60 CancelAttendeePatchJSONBodyCancellationReason = 60
)

// Defines values for ListAvailabilityBlocksGetParamsOrder.
const (
	ListAvailabilityBlocksGetParamsOrderAsc  ListAvailabilityBlocksGetParamsOrder = "asc"
	ListAvailabilityBlocksGetParamsOrderDesc ListAvailabilityBlocksGetParamsOrder = "desc"
)

// Defines values for CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType.
const (
	CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatTypeDaily   CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType = "Daily"
	CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatTypeMonthly CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType = "Monthly"
	CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatTypeWeekly  CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for ListBillableItemsGetParamsOrder.
const (
	ListBillableItemsGetParamsOrderAsc  ListBillableItemsGetParamsOrder = "asc"
	ListBillableItemsGetParamsOrderDesc ListBillableItemsGetParamsOrder = "desc"
)

// Defines values for CreateBillableItemPostJSONBodyItemType.
const (
	CreateBillableItemPostJSONBodyItemTypeOther   CreateBillableItemPostJSONBodyItemType = "Other"
	CreateBillableItemPostJSONBodyItemTypeProduct CreateBillableItemPostJSONBodyItemType = "Product"
	CreateBillableItemPostJSONBodyItemTypeService CreateBillableItemPostJSONBodyItemType = "Service"
)

// Defines values for UpdateBillableItemPatchJSONBodyItemType.
const (
	UpdateBillableItemPatchJSONBodyItemTypeOther   UpdateBillableItemPatchJSONBodyItemType = "Other"
	UpdateBillableItemPatchJSONBodyItemTypeProduct UpdateBillableItemPatchJSONBodyItemType = "Product"
	UpdateBillableItemPatchJSONBodyItemTypeService UpdateBillableItemPatchJSONBodyItemType = "Service"
)

// Defines values for ListBookingsGetParamsOrder.
const (
	ListBookingsGetParamsOrderAsc  ListBookingsGetParamsOrder = "asc"
	ListBookingsGetParamsOrderDesc ListBookingsGetParamsOrder = "desc"
)

// Defines values for ListBusinessesGetParamsOrder.
const (
	ListBusinessesGetParamsOrderAsc  ListBusinessesGetParamsOrder = "asc"
	ListBusinessesGetParamsOrderDesc ListBusinessesGetParamsOrder = "desc"
)

// Defines values for ListDailyAvailabilitiesForBusinessGetParamsOrder.
const (
	ListDailyAvailabilitiesForBusinessGetParamsOrderAsc  ListDailyAvailabilitiesForBusinessGetParamsOrder = "asc"
	ListDailyAvailabilitiesForBusinessGetParamsOrderDesc ListDailyAvailabilitiesForBusinessGetParamsOrder = "desc"
)

// Defines values for ListPractitionersForBusinessGetParamsOrder.
const (
	ListPractitionersForBusinessGetParamsOrderAsc  ListPractitionersForBusinessGetParamsOrder = "asc"
	ListPractitionersForBusinessGetParamsOrderDesc ListPractitionersForBusinessGetParamsOrder = "desc"
)

// Defines values for ListInactivePractitionersForBusinessGetParamsOrder.
const (
	ListInactivePractitionersForBusinessGetParamsOrderAsc  ListInactivePractitionersForBusinessGetParamsOrder = "asc"
	ListInactivePractitionersForBusinessGetParamsOrderDesc ListInactivePractitionersForBusinessGetParamsOrder = "desc"
)

// Defines values for ListServicesForBusinessGetParamsOrder.
const (
	ListServicesForBusinessGetParamsOrderAsc  ListServicesForBusinessGetParamsOrder = "asc"
	ListServicesForBusinessGetParamsOrderDesc ListServicesForBusinessGetParamsOrder = "desc"
)

// Defines values for ListCommunicationsGetParamsOrder.
const (
	ListCommunicationsGetParamsOrderAsc  ListCommunicationsGetParamsOrder = "asc"
	ListCommunicationsGetParamsOrderDesc ListCommunicationsGetParamsOrder = "desc"
)

// Defines values for ListConcessionPricesGetParamsOrder.
const (
	ListConcessionPricesGetParamsOrderAsc  ListConcessionPricesGetParamsOrder = "asc"
	ListConcessionPricesGetParamsOrderDesc ListConcessionPricesGetParamsOrder = "desc"
)

// Defines values for ListConcessionTypesGetParamsOrder.
const (
	ListConcessionTypesGetParamsOrderAsc  ListConcessionTypesGetParamsOrder = "asc"
	ListConcessionTypesGetParamsOrderDesc ListConcessionTypesGetParamsOrder = "desc"
)

// Defines values for ListContactsGetParamsOrder.
const (
	ListContactsGetParamsOrderAsc  ListContactsGetParamsOrder = "asc"
	ListContactsGetParamsOrderDesc ListContactsGetParamsOrder = "desc"
)

// Defines values for CreateContactPostJSONBodyDoctorType.
const (
	CreateContactPostJSONBodyDoctorTypeGeneralPractitioner CreateContactPostJSONBodyDoctorType = "general_practitioner"
	CreateContactPostJSONBodyDoctorTypeSpecialist          CreateContactPostJSONBodyDoctorType = "specialist"
)

// Defines values for CreateContactPostJSONBodyPhoneNumbersPhoneType.
const (
	CreateContactPostJSONBodyPhoneNumbersPhoneTypeFax    CreateContactPostJSONBodyPhoneNumbersPhoneType = "Fax"
	CreateContactPostJSONBodyPhoneNumbersPhoneTypeHome   CreateContactPostJSONBodyPhoneNumbersPhoneType = "Home"
	CreateContactPostJSONBodyPhoneNumbersPhoneTypeMobile CreateContactPostJSONBodyPhoneNumbersPhoneType = "Mobile"
	CreateContactPostJSONBodyPhoneNumbersPhoneTypeOther  CreateContactPostJSONBodyPhoneNumbersPhoneType = "Other"
	CreateContactPostJSONBodyPhoneNumbersPhoneTypeWork   CreateContactPostJSONBodyPhoneNumbersPhoneType = "Work"
)

// Defines values for CreateContactPostJSONBodyTypeCode.
const (
	CreateContactPostJSONBodyTypeCodeN0 CreateContactPostJSONBodyTypeCode = 0
	CreateContactPostJSONBodyTypeCodeN1 CreateContactPostJSONBodyTypeCode = 1
	CreateContactPostJSONBodyTypeCodeN2 CreateContactPostJSONBodyTypeCode = 2
)

// Defines values for UpdateContactPatchJSONBodyDoctorType.
const (
	GeneralPractitioner UpdateContactPatchJSONBodyDoctorType = "general_practitioner"
	Specialist          UpdateContactPatchJSONBodyDoctorType = "specialist"
)

// Defines values for UpdateContactPatchJSONBodyPhoneNumbersPhoneType.
const (
	UpdateContactPatchJSONBodyPhoneNumbersPhoneTypeFax    UpdateContactPatchJSONBodyPhoneNumbersPhoneType = "Fax"
	UpdateContactPatchJSONBodyPhoneNumbersPhoneTypeHome   UpdateContactPatchJSONBodyPhoneNumbersPhoneType = "Home"
	UpdateContactPatchJSONBodyPhoneNumbersPhoneTypeMobile UpdateContactPatchJSONBodyPhoneNumbersPhoneType = "Mobile"
	UpdateContactPatchJSONBodyPhoneNumbersPhoneTypeOther  UpdateContactPatchJSONBodyPhoneNumbersPhoneType = "Other"
	UpdateContactPatchJSONBodyPhoneNumbersPhoneTypeWork   UpdateContactPatchJSONBodyPhoneNumbersPhoneType = "Work"
)

// Defines values for UpdateContactPatchJSONBodyTypeCode.
const (
	UpdateContactPatchJSONBodyTypeCodeN0 UpdateContactPatchJSONBodyTypeCode = 0
	UpdateContactPatchJSONBodyTypeCodeN1 UpdateContactPatchJSONBodyTypeCode = 1
	UpdateContactPatchJSONBodyTypeCodeN2 UpdateContactPatchJSONBodyTypeCode = 2
)

// Defines values for ListDailyAvailabilitiesGetParamsOrder.
const (
	ListDailyAvailabilitiesGetParamsOrderAsc  ListDailyAvailabilitiesGetParamsOrder = "asc"
	ListDailyAvailabilitiesGetParamsOrderDesc ListDailyAvailabilitiesGetParamsOrder = "desc"
)

// Defines values for ListGroupAppointmentsGetParamsOrder.
const (
	ListGroupAppointmentsGetParamsOrderAsc  ListGroupAppointmentsGetParamsOrder = "asc"
	ListGroupAppointmentsGetParamsOrderDesc ListGroupAppointmentsGetParamsOrder = "desc"
)

// Defines values for CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType.
const (
	CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatTypeDaily   CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType = "Daily"
	CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatTypeMonthly CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType = "Monthly"
	CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatTypeWeekly  CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for ListAttendeesForGroupAppointmentGetParamsOrder.
const (
	ListAttendeesForGroupAppointmentGetParamsOrderAsc  ListAttendeesForGroupAppointmentGetParamsOrder = "asc"
	ListAttendeesForGroupAppointmentGetParamsOrderDesc ListAttendeesForGroupAppointmentGetParamsOrder = "desc"
)

// Defines values for UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType.
const (
	UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatTypeDaily   UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType = "Daily"
	UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatTypeMonthly UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType = "Monthly"
	UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatTypeWeekly  UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for ListIndividualAppointmentsGetParamsOrder.
const (
	ListIndividualAppointmentsGetParamsOrderAsc  ListIndividualAppointmentsGetParamsOrder = "asc"
	ListIndividualAppointmentsGetParamsOrderDesc ListIndividualAppointmentsGetParamsOrder = "desc"
)

// Defines values for CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType.
const (
	CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatTypeDaily   CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType = "Daily"
	CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatTypeMonthly CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType = "Monthly"
	CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatTypeWeekly  CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType.
const (
	UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatTypeDaily   UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType = "Daily"
	UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatTypeMonthly UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType = "Monthly"
	UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatTypeWeekly  UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for CancelIndividualAppointmentPatchJSONBodyCancellationReason.
const (
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN10 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 10
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN20 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 20
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN30 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 30
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN31 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 31
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN40 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 40
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN50 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 50
	CancelIndividualAppointmentPatchJSONBodyCancellationReasonN60 CancelIndividualAppointmentPatchJSONBodyCancellationReason = 60
)

// Defines values for ListAttendeesForIndividualAppointmentGetParamsOrder.
const (
	ListAttendeesForIndividualAppointmentGetParamsOrderAsc  ListAttendeesForIndividualAppointmentGetParamsOrder = "asc"
	ListAttendeesForIndividualAppointmentGetParamsOrderDesc ListAttendeesForIndividualAppointmentGetParamsOrder = "desc"
)

// Defines values for ListInvoiceItemsGetParamsOrder.
const (
	ListInvoiceItemsGetParamsOrderAsc  ListInvoiceItemsGetParamsOrder = "asc"
	ListInvoiceItemsGetParamsOrderDesc ListInvoiceItemsGetParamsOrder = "desc"
)

// Defines values for ListInvoicesGetParamsOrder.
const (
	ListInvoicesGetParamsOrderAsc  ListInvoicesGetParamsOrder = "asc"
	ListInvoicesGetParamsOrderDesc ListInvoicesGetParamsOrder = "desc"
)

// Defines values for ListInvoiceItemsForInvoiceGetParamsOrder.
const (
	ListInvoiceItemsForInvoiceGetParamsOrderAsc  ListInvoiceItemsForInvoiceGetParamsOrder = "asc"
	ListInvoiceItemsForInvoiceGetParamsOrderDesc ListInvoiceItemsForInvoiceGetParamsOrder = "desc"
)

// Defines values for ListMedicalAlertsGetParamsOrder.
const (
	ListMedicalAlertsGetParamsOrderAsc  ListMedicalAlertsGetParamsOrder = "asc"
	ListMedicalAlertsGetParamsOrderDesc ListMedicalAlertsGetParamsOrder = "desc"
)

// Defines values for ListPatientAttachmentsGetParamsOrder.
const (
	ListPatientAttachmentsGetParamsOrderAsc  ListPatientAttachmentsGetParamsOrder = "asc"
	ListPatientAttachmentsGetParamsOrderDesc ListPatientAttachmentsGetParamsOrder = "desc"
)

// Defines values for ListPatientCasesGetParamsOrder.
const (
	ListPatientCasesGetParamsOrderAsc  ListPatientCasesGetParamsOrder = "asc"
	ListPatientCasesGetParamsOrderDesc ListPatientCasesGetParamsOrder = "desc"
)

// Defines values for CreatePatientCasePostJSONBodyReferralType.
const (
	CreatePatientCasePostJSONBodyReferralTypeDva      CreatePatientCasePostJSONBodyReferralType = "dva"
	CreatePatientCasePostJSONBodyReferralTypeMedicare CreatePatientCasePostJSONBodyReferralType = "medicare"
)

// Defines values for ListActivePatientCasesGetParamsOrder.
const (
	ListActivePatientCasesGetParamsOrderAsc  ListActivePatientCasesGetParamsOrder = "asc"
	ListActivePatientCasesGetParamsOrderDesc ListActivePatientCasesGetParamsOrder = "desc"
)

// Defines values for UpdatePatientCasePatchJSONBodyReferralType.
const (
	Dva      UpdatePatientCasePatchJSONBodyReferralType = "dva"
	Medicare UpdatePatientCasePatchJSONBodyReferralType = "medicare"
)

// Defines values for ListAttendeesForPatientCaseGetParamsOrder.
const (
	ListAttendeesForPatientCaseGetParamsOrderAsc  ListAttendeesForPatientCaseGetParamsOrder = "asc"
	ListAttendeesForPatientCaseGetParamsOrderDesc ListAttendeesForPatientCaseGetParamsOrder = "desc"
)

// Defines values for ListBookingsForPatientCaseGetParamsOrder.
const (
	ListBookingsForPatientCaseGetParamsOrderAsc  ListBookingsForPatientCaseGetParamsOrder = "asc"
	ListBookingsForPatientCaseGetParamsOrderDesc ListBookingsForPatientCaseGetParamsOrder = "desc"
)

// Defines values for ListInvoicesForPatientCaseGetParamsOrder.
const (
	ListInvoicesForPatientCaseGetParamsOrderAsc  ListInvoicesForPatientCaseGetParamsOrder = "asc"
	ListInvoicesForPatientCaseGetParamsOrderDesc ListInvoicesForPatientCaseGetParamsOrder = "desc"
)

// Defines values for ListPatientAttachmentsForPatientCaseGetParamsOrder.
const (
	ListPatientAttachmentsForPatientCaseGetParamsOrderAsc  ListPatientAttachmentsForPatientCaseGetParamsOrder = "asc"
	ListPatientAttachmentsForPatientCaseGetParamsOrderDesc ListPatientAttachmentsForPatientCaseGetParamsOrder = "desc"
)

// Defines values for ListPatientFormTemplatesGetParamsOrder.
const (
	ListPatientFormTemplatesGetParamsOrderAsc  ListPatientFormTemplatesGetParamsOrder = "asc"
	ListPatientFormTemplatesGetParamsOrderDesc ListPatientFormTemplatesGetParamsOrder = "desc"
)

// Defines values for CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType.
const (
	CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsTypeCheckboxes   CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType = "checkboxes"
	CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsTypeDate         CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType = "date"
	CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsTypeParagraph    CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType = "paragraph"
	CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsTypeRadiobuttons CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType = "radiobuttons"
	CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsTypeSignature    CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType = "signature"
	CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsTypeText         CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType.
const (
	UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsTypeCheckboxes   UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType = "checkboxes"
	UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsTypeDate         UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType = "date"
	UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsTypeParagraph    UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType = "paragraph"
	UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsTypeRadiobuttons UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType = "radiobuttons"
	UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsTypeSignature    UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType = "signature"
	UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsTypeText         UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for ListPatientFormsGetParamsOrder.
const (
	ListPatientFormsGetParamsOrderAsc  ListPatientFormsGetParamsOrder = "asc"
	ListPatientFormsGetParamsOrderDesc ListPatientFormsGetParamsOrder = "desc"
)

// Defines values for CreatePatientFormPostJSONBodyContentSectionsQuestionsType.
const (
	CreatePatientFormPostJSONBodyContentSectionsQuestionsTypeCheckboxes   CreatePatientFormPostJSONBodyContentSectionsQuestionsType = "checkboxes"
	CreatePatientFormPostJSONBodyContentSectionsQuestionsTypeDate         CreatePatientFormPostJSONBodyContentSectionsQuestionsType = "date"
	CreatePatientFormPostJSONBodyContentSectionsQuestionsTypeParagraph    CreatePatientFormPostJSONBodyContentSectionsQuestionsType = "paragraph"
	CreatePatientFormPostJSONBodyContentSectionsQuestionsTypeRadiobuttons CreatePatientFormPostJSONBodyContentSectionsQuestionsType = "radiobuttons"
	CreatePatientFormPostJSONBodyContentSectionsQuestionsTypeSignature    CreatePatientFormPostJSONBodyContentSectionsQuestionsType = "signature"
	CreatePatientFormPostJSONBodyContentSectionsQuestionsTypeText         CreatePatientFormPostJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType.
const (
	UpdatePatientFormPatchJSONBodyContentSectionsQuestionsTypeCheckboxes   UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType = "checkboxes"
	UpdatePatientFormPatchJSONBodyContentSectionsQuestionsTypeDate         UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType = "date"
	UpdatePatientFormPatchJSONBodyContentSectionsQuestionsTypeParagraph    UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType = "paragraph"
	UpdatePatientFormPatchJSONBodyContentSectionsQuestionsTypeRadiobuttons UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType = "radiobuttons"
	UpdatePatientFormPatchJSONBodyContentSectionsQuestionsTypeSignature    UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType = "signature"
	UpdatePatientFormPatchJSONBodyContentSectionsQuestionsTypeText         UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for ListPatientsGetParamsOrder.
const (
	ListPatientsGetParamsOrderAsc  ListPatientsGetParamsOrder = "asc"
	ListPatientsGetParamsOrderDesc ListPatientsGetParamsOrder = "desc"
)

// Defines values for CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType.
const (
	CreatePatientPostJSONBodyPatientPhoneNumbersPhoneTypeFax    CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType = "Fax"
	CreatePatientPostJSONBodyPatientPhoneNumbersPhoneTypeHome   CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType = "Home"
	CreatePatientPostJSONBodyPatientPhoneNumbersPhoneTypeMobile CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType = "Mobile"
	CreatePatientPostJSONBodyPatientPhoneNumbersPhoneTypeOther  CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType = "Other"
	CreatePatientPostJSONBodyPatientPhoneNumbersPhoneTypeWork   CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType = "Work"
)

// Defines values for CreatePatientPostJSONBodyReminderType.
const (
	CreatePatientPostJSONBodyReminderTypeEmail    CreatePatientPostJSONBodyReminderType = "Email"
	CreatePatientPostJSONBodyReminderTypeNone     CreatePatientPostJSONBodyReminderType = "None"
	CreatePatientPostJSONBodyReminderTypeSMS      CreatePatientPostJSONBodyReminderType = "SMS"
	CreatePatientPostJSONBodyReminderTypeSMSEmail CreatePatientPostJSONBodyReminderType = "SMS & Email"
)

// Defines values for UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType.
const (
	UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneTypeFax    UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType = "Fax"
	UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneTypeHome   UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType = "Home"
	UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneTypeMobile UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType = "Mobile"
	UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneTypeOther  UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType = "Other"
	UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneTypeWork   UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType = "Work"
)

// Defines values for UpdatePatientPatchJSONBodyReminderType.
const (
	UpdatePatientPatchJSONBodyReminderTypeEmail    UpdatePatientPatchJSONBodyReminderType = "Email"
	UpdatePatientPatchJSONBodyReminderTypeNone     UpdatePatientPatchJSONBodyReminderType = "None"
	UpdatePatientPatchJSONBodyReminderTypeSMS      UpdatePatientPatchJSONBodyReminderType = "SMS"
	UpdatePatientPatchJSONBodyReminderTypeSMSEmail UpdatePatientPatchJSONBodyReminderType = "SMS & Email"
)

// Defines values for ListInvoicesForPatientGetParamsOrder.
const (
	ListInvoicesForPatientGetParamsOrderAsc  ListInvoicesForPatientGetParamsOrder = "asc"
	ListInvoicesForPatientGetParamsOrderDesc ListInvoicesForPatientGetParamsOrder = "desc"
)

// Defines values for ListMedicalAlertsForPatientGetParamsOrder.
const (
	ListMedicalAlertsForPatientGetParamsOrderAsc  ListMedicalAlertsForPatientGetParamsOrder = "asc"
	ListMedicalAlertsForPatientGetParamsOrderDesc ListMedicalAlertsForPatientGetParamsOrder = "desc"
)

// Defines values for ListPatientAttachmentsForPatientGetParamsOrder.
const (
	ListPatientAttachmentsForPatientGetParamsOrderAsc  ListPatientAttachmentsForPatientGetParamsOrder = "asc"
	ListPatientAttachmentsForPatientGetParamsOrderDesc ListPatientAttachmentsForPatientGetParamsOrder = "desc"
)

// Defines values for ListTreatmentNotesForPatientGetParamsOrder.
const (
	ListTreatmentNotesForPatientGetParamsOrderAsc  ListTreatmentNotesForPatientGetParamsOrder = "asc"
	ListTreatmentNotesForPatientGetParamsOrderDesc ListTreatmentNotesForPatientGetParamsOrder = "desc"
)

// Defines values for ListPractitionerReferenceNumbersGetParamsOrder.
const (
	ListPractitionerReferenceNumbersGetParamsOrderAsc  ListPractitionerReferenceNumbersGetParamsOrder = "asc"
	ListPractitionerReferenceNumbersGetParamsOrderDesc ListPractitionerReferenceNumbersGetParamsOrder = "desc"
)

// Defines values for ListPractitionersGetParamsOrder.
const (
	ListPractitionersGetParamsOrderAsc  ListPractitionersGetParamsOrder = "asc"
	ListPractitionersGetParamsOrderDesc ListPractitionersGetParamsOrder = "desc"
)

// Defines values for ListInactivePractitionersGetParamsOrder.
const (
	ListInactivePractitionersGetParamsOrderAsc  ListInactivePractitionersGetParamsOrder = "asc"
	ListInactivePractitionersGetParamsOrderDesc ListInactivePractitionersGetParamsOrder = "desc"
)

// Defines values for ListAppointmentTypesForPractitionerGetParamsOrder.
const (
	ListAppointmentTypesForPractitionerGetParamsOrderAsc  ListAppointmentTypesForPractitionerGetParamsOrder = "asc"
	ListAppointmentTypesForPractitionerGetParamsOrderDesc ListAppointmentTypesForPractitionerGetParamsOrder = "desc"
)

// Defines values for ListDailyAvailabilitiesForPractitionerGetParamsOrder.
const (
	ListDailyAvailabilitiesForPractitionerGetParamsOrderAsc  ListDailyAvailabilitiesForPractitionerGetParamsOrder = "asc"
	ListDailyAvailabilitiesForPractitionerGetParamsOrderDesc ListDailyAvailabilitiesForPractitionerGetParamsOrder = "desc"
)

// Defines values for ListInvoicesForPractitionerGetParamsOrder.
const (
	ListInvoicesForPractitionerGetParamsOrderAsc  ListInvoicesForPractitionerGetParamsOrder = "asc"
	ListInvoicesForPractitionerGetParamsOrderDesc ListInvoicesForPractitionerGetParamsOrder = "desc"
)

// Defines values for ListPractitionerReferenceNumbersForPractitionerGetParamsOrder.
const (
	ListPractitionerReferenceNumbersForPractitionerGetParamsOrderAsc  ListPractitionerReferenceNumbersForPractitionerGetParamsOrder = "asc"
	ListPractitionerReferenceNumbersForPractitionerGetParamsOrderDesc ListPractitionerReferenceNumbersForPractitionerGetParamsOrder = "desc"
)

// Defines values for ListProductSuppliersGetParamsOrder.
const (
	ListProductSuppliersGetParamsOrderAsc  ListProductSuppliersGetParamsOrder = "asc"
	ListProductSuppliersGetParamsOrderDesc ListProductSuppliersGetParamsOrder = "desc"
)

// Defines values for ListProductsGetParamsOrder.
const (
	ListProductsGetParamsOrderAsc  ListProductsGetParamsOrder = "asc"
	ListProductsGetParamsOrderDesc ListProductsGetParamsOrder = "desc"
)

// Defines values for ListReferralSourceTypesGetParamsOrder.
const (
	ListReferralSourceTypesGetParamsOrderAsc  ListReferralSourceTypesGetParamsOrder = "asc"
	ListReferralSourceTypesGetParamsOrderDesc ListReferralSourceTypesGetParamsOrder = "desc"
)

// Defines values for ListReferralSourcesGetParamsOrder.
const (
	ListReferralSourcesGetParamsOrderAsc  ListReferralSourcesGetParamsOrder = "asc"
	ListReferralSourcesGetParamsOrderDesc ListReferralSourcesGetParamsOrder = "desc"
)

// Defines values for ListServicesGetParamsOrder.
const (
	ListServicesGetParamsOrderAsc  ListServicesGetParamsOrder = "asc"
	ListServicesGetParamsOrderDesc ListServicesGetParamsOrder = "desc"
)

// Defines values for ListStockAdjustmentsGetParamsOrder.
const (
	ListStockAdjustmentsGetParamsOrderAsc  ListStockAdjustmentsGetParamsOrder = "asc"
	ListStockAdjustmentsGetParamsOrderDesc ListStockAdjustmentsGetParamsOrder = "desc"
)

// Defines values for CreateStockAdjustmentPostJSONBodyAdjustmentType.
const (
	Damaged       CreateStockAdjustmentPostJSONBodyAdjustmentType = "Damaged"
	ItemSold      CreateStockAdjustmentPostJSONBodyAdjustmentType = "Item Sold"
	Other         CreateStockAdjustmentPostJSONBodyAdjustmentType = "Other"
	OutOfDate     CreateStockAdjustmentPostJSONBodyAdjustmentType = "Out of Date"
	Returned      CreateStockAdjustmentPostJSONBodyAdjustmentType = "Returned"
	StockPurchase CreateStockAdjustmentPostJSONBodyAdjustmentType = "Stock Purchase"
)

// Defines values for ListTaxesGetParamsOrder.
const (
	ListTaxesGetParamsOrderAsc  ListTaxesGetParamsOrder = "asc"
	ListTaxesGetParamsOrderDesc ListTaxesGetParamsOrder = "desc"
)

// Defines values for ListTreatmentNoteTemplatesGetParamsOrder.
const (
	ListTreatmentNoteTemplatesGetParamsOrderAsc  ListTreatmentNoteTemplatesGetParamsOrder = "asc"
	ListTreatmentNoteTemplatesGetParamsOrderDesc ListTreatmentNoteTemplatesGetParamsOrder = "desc"
)

// Defines values for CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType.
const (
	CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsTypeBodycharts   CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType = "bodycharts"
	CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsTypeCheckboxes   CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType = "checkboxes"
	CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsTypeDate         CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType = "date"
	CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsTypeParagraph    CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType = "paragraph"
	CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsTypeRadiobuttons CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType = "radiobuttons"
	CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsTypeText         CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType.
const (
	UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsTypeBodycharts   UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType = "bodycharts"
	UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsTypeCheckboxes   UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType = "checkboxes"
	UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsTypeDate         UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType = "date"
	UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsTypeParagraph    UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType = "paragraph"
	UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsTypeRadiobuttons UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType = "radiobuttons"
	UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsTypeText         UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for ListTreatmentNotesGetParamsOrder.
const (
	ListTreatmentNotesGetParamsOrderAsc  ListTreatmentNotesGetParamsOrder = "asc"
	ListTreatmentNotesGetParamsOrderDesc ListTreatmentNotesGetParamsOrder = "desc"
)

// Defines values for CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType.
const (
	CreateTreatmentNotePostJSONBodyContentSectionsQuestionsTypeBodycharts   CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType = "bodycharts"
	CreateTreatmentNotePostJSONBodyContentSectionsQuestionsTypeCheckboxes   CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType = "checkboxes"
	CreateTreatmentNotePostJSONBodyContentSectionsQuestionsTypeDate         CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType = "date"
	CreateTreatmentNotePostJSONBodyContentSectionsQuestionsTypeParagraph    CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType = "paragraph"
	CreateTreatmentNotePostJSONBodyContentSectionsQuestionsTypeRadiobuttons CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType = "radiobuttons"
	CreateTreatmentNotePostJSONBodyContentSectionsQuestionsTypeText         CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType.
const (
	UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsTypeBodycharts   UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType = "bodycharts"
	UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsTypeCheckboxes   UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType = "checkboxes"
	UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsTypeDate         UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType = "date"
	UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsTypeParagraph    UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType = "paragraph"
	UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsTypeRadiobuttons UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType = "radiobuttons"
	UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsTypeText         UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType = "text"
)

// Defines values for ListUnavailableBlocksGetParamsOrder.
const (
	ListUnavailableBlocksGetParamsOrderAsc  ListUnavailableBlocksGetParamsOrder = "asc"
	ListUnavailableBlocksGetParamsOrderDesc ListUnavailableBlocksGetParamsOrder = "desc"
)

// Defines values for CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType.
const (
	CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatTypeDaily   CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType = "Daily"
	CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatTypeMonthly CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType = "Monthly"
	CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatTypeWeekly  CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType.
const (
	Daily   UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType = "Daily"
	Monthly UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType = "Monthly"
	Weekly  UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType = "Weekly"
)

// Defines values for ListUsersGetParamsOrder.
const (
	Asc  ListUsersGetParamsOrder = "asc"
	Desc ListUsersGetParamsOrder = "desc"
)

// AppointmentType defines model for AppointmentType.
type AppointmentType struct {
	AddDepositToAccountCredit          *bool      `json:"add_deposit_to_account_credit"`
	AppointmentConfirmationTemplateIds *[]string  `json:"appointment_confirmation_template_ids"`
	AppointmentReminderTemplateIds     *[]string  `json:"appointment_reminder_template_ids"`
	ArchivedAt                         *time.Time `json:"archived_at"`
	BillableItem                       *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"billable_item,omitempty"`
	Category          *string    `json:"category"`
	Color             *string    `json:"color,omitempty"`
	CreatedAt         *time.Time `json:"created_at,omitempty"`
	DepositPrice      *string    `json:"deposit_price"`
	Description       *string    `json:"description"`
	DurationInMinutes *int       `json:"duration_in_minutes,omitempty"`
	Id                *string    `json:"id,omitempty"`
	Links             *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	MaxAttendees                *int                                        `json:"max_attendees,omitempty"`
	Name                        *string                                     `json:"name,omitempty"`
	OnlineBookingsLeadTimeHours *AppointmentTypeOnlineBookingsLeadTimeHours `json:"online_bookings_lead_time_hours"`
	OnlinePaymentsEnabled       *bool                                       `json:"online_payments_enabled"`
	OnlinePaymentsMode          *AppointmentTypeOnlinePaymentsMode          `json:"online_payments_mode"`
	Practitioners               *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioners,omitempty"`
	Product *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"product,omitempty"`
	ShowInOnlineBookings  *bool `json:"show_in_online_bookings"`
	TelehealthEnabled     *bool `json:"telehealth_enabled"`
	TreatmentNoteTemplate *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"treatment_note_template,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// AppointmentTypeOnlineBookingsLeadTimeHours defines model for AppointmentType.OnlineBookingsLeadTimeHours.
type AppointmentTypeOnlineBookingsLeadTimeHours int

// AppointmentTypeOnlinePaymentsMode defines model for AppointmentType.OnlinePaymentsMode.
type AppointmentTypeOnlinePaymentsMode string

// AttachmentPresignedPost defines model for AttachmentPresignedPost.
type AttachmentPresignedPost struct {
	Fields *struct {
		Acl                 *AttachmentPresignedPostFieldsAcl                 `json:"acl,omitempty"`
		Key                 *string                                           `json:"key,omitempty"`
		Policy              *string                                           `json:"policy,omitempty"`
		SuccessActionStatus *AttachmentPresignedPostFieldsSuccessActionStatus `json:"success_action_status,omitempty"`
		XAmzAlgorithm       *string                                           `json:"x-amz-algorithm,omitempty"`
		XAmzCredential      *string                                           `json:"x-amz-credential,omitempty"`
		XAmzSignature       *string                                           `json:"x-amz-signature,omitempty"`
	} `json:"fields"`
	Url *string `json:"url"`
}

// AttachmentPresignedPostFieldsAcl defines model for AttachmentPresignedPost.Fields.Acl.
type AttachmentPresignedPostFieldsAcl string

// AttachmentPresignedPostFieldsSuccessActionStatus defines model for AttachmentPresignedPost.Fields.SuccessActionStatus.
type AttachmentPresignedPostFieldsSuccessActionStatus string

// Attendee defines model for Attendee.
type Attendee struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Arrived    *bool      `json:"arrived"`
	Booking    *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"booking,omitempty"`
	BookingIpAddress              *string                                `json:"booking_ip_address"`
	CancellationNote              *string                                `json:"cancellation_note"`
	CancellationReason            *int                                   `json:"cancellation_reason"`
	CancellationReasonDescription *AttendeeCancellationReasonDescription `json:"cancellation_reason_description"`
	CancellationUrl               *string                                `json:"cancellation_url"`
	CancelledAt                   *time.Time                             `json:"cancelled_at"`
	CreatedAt                     *time.Time                             `json:"created_at,omitempty"`
	DeletedAt                     *time.Time                             `json:"deleted_at"`
	EmailReminderSent             *bool                                  `json:"email_reminder_sent"`
	Id                            *string                                `json:"id,omitempty"`

	// InvoiceStatus | Enum Value | Description |
	// |---|---|
	// |10|Open|
	// |20|Paid|
	// |30|Closed|
	// |40|Open credit|
	InvoiceStatus *AttendeeInvoiceStatus `json:"invoice_status"`
	Invoices      *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoices,omitempty"`
	Links *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Notes                       *string `json:"notes"`
	OnlineBookingPolicyAccepted *bool   `json:"online_booking_policy_accepted"`
	Patient                     *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PatientCase *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient_case,omitempty"`
	PatientForms *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient_forms,omitempty"`
	SmsReminderSent *bool   `json:"sms_reminder_sent"`
	TelehealthUrl   *string `json:"telehealth_url"`

	// TreatmentNoteStatus | Enum Value | Description |
	// |---|---|
	// |10|Draft|
	// |90|Final|
	TreatmentNoteStatus *AttendeeTreatmentNoteStatus `json:"treatment_note_status"`
	UpdatedAt           *time.Time                   `json:"updated_at,omitempty"`
}

// AttendeeCancellationReasonDescription defines model for Attendee.CancellationReasonDescription.
type AttendeeCancellationReasonDescription string

// AttendeeInvoiceStatus | Enum Value | Description |
// |---|---|
// |10|Open|
// |20|Paid|
// |30|Closed|
// |40|Open credit|
type AttendeeInvoiceStatus int

// AttendeeTreatmentNoteStatus | Enum Value | Description |
// |---|---|
// |10|Draft|
// |90|Final|
type AttendeeTreatmentNoteStatus int

// AvailabilityBlock defines model for AvailabilityBlock.
type AvailabilityBlock struct {
	Business *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	EndsAt    *time.Time `json:"ends_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`
	RepeatRule *struct {
		NumberOfRepeats   *int                                   `json:"number_of_repeats"`
		RepeatType        *AvailabilityBlockRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                   `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt  *time.Time `json:"starts_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// AvailabilityBlockRepeatRuleRepeatType defines model for AvailabilityBlock.RepeatRule.RepeatType.
type AvailabilityBlockRepeatRuleRepeatType string

// AvailableTime defines model for AvailableTime.
type AvailableTime struct {
	AppointmentStart *time.Time `json:"appointment_start,omitempty"`
}

// BillableItem defines model for BillableItem.
type BillableItem struct {
	ArchivedAt *time.Time            `json:"archived_at"`
	CreatedAt  *time.Time            `json:"created_at,omitempty"`
	Id         *string               `json:"id,omitempty"`
	ItemCode   *string               `json:"item_code"`
	ItemType   *BillableItemItemType `json:"item_type,omitempty"`
	Links      *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name  *string `json:"name,omitempty"`
	Price *string `json:"price,omitempty"`
	Tax   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"tax,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// BillableItemItemType defines model for BillableItem.ItemType.
type BillableItemItemType string

// Booking defines model for Booking.
type Booking struct {
	union json.RawMessage
}

// Business defines model for Business.
type Business struct {
	AdditionalInformation        *string   `json:"additional_information"`
	AdditionalInvoiceInformation *string   `json:"additional_invoice_information"`
	Address1                     *string   `json:"address_1"`
	Address2                     *string   `json:"address_2"`
	AppointmentRemindersEnabled  *bool     `json:"appointment_reminders_enabled"`
	AppointmentTypeIds           *[]string `json:"appointment_type_ids"`
	Appointments                 *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointments,omitempty"`
	ArchivedAt                *time.Time `json:"archived_at"`
	BusinessName              *string    `json:"business_name"`
	BusinessRegistrationName  *string    `json:"business_registration_name"`
	BusinessRegistrationValue *string    `json:"business_registration_value"`
	City                      *string    `json:"city"`
	ContactInformation        *string    `json:"contact_information"`
	Country                   *string    `json:"country"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string    `json:"country_code"`
	CreatedAt    *time.Time `json:"created_at,omitempty"`
	DeletedAt    *time.Time `json:"deleted_at"`
	DisplayName  *string    `json:"display_name"`
	EmailReplyTo *string    `json:"email_reply_to"`
	Id           *string    `json:"id,omitempty"`
	Label        *string    `json:"label"`
	Links        *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	PostCode      *string `json:"post_code"`
	Practitioners *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioners,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	State                *string `json:"state"`

	// TimeZone Human-readable label for a time zone. See link below for supported values.
	TimeZone *string `json:"time_zone"`

	// TimeZoneIdentifier IANA identifier for a time zone. See link below for supported values.
	TimeZoneIdentifier *string    `json:"time_zone_identifier"`
	UpdatedAt          *time.Time `json:"updated_at,omitempty"`
	WebsiteAddress     *string    `json:"website_address"`
}

// Communication defines model for Communication.
type Communication struct {
	union json.RawMessage
}

// ConcessionPrice defines model for ConcessionPrice.
type ConcessionPrice struct {
	BillableItem *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"billable_item,omitempty"`
	ConcessionType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"concession_type,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Price     *string    `json:"price"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// ConcessionType defines model for ConcessionType.
type ConcessionType struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name      *string    `json:"name,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// Contact defines model for Contact.
type Contact struct {
	Address1    *string    `json:"address_1"`
	Address2    *string    `json:"address_2"`
	Address3    *string    `json:"address_3"`
	ArchivedAt  *time.Time `json:"archived_at"`
	City        *string    `json:"city"`
	CompanyName *string    `json:"company_name"`
	Country     *string    `json:"country"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode *string            `json:"country_code"`
	CreatedAt   *time.Time         `json:"created_at,omitempty"`
	DeletedAt   *time.Time         `json:"deleted_at"`
	DoctorType  *ContactDoctorType `json:"doctor_type"`
	Email       *string            `json:"email"`
	FirstName   *string            `json:"first_name"`
	Id          *string            `json:"id,omitempty"`
	LastName    *string            `json:"last_name"`
	Links       *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Notes          *string          `json:"notes"`
	Occupation     *string          `json:"occupation"`
	PhoneNumbers   *[]PhoneNumber   `json:"phone_numbers"`
	PostCode       *string          `json:"post_code"`
	PreferredName  *string          `json:"preferred_name"`
	ProviderNumber *string          `json:"provider_number"`
	State          *string          `json:"state"`
	Title          *string          `json:"title"`
	Type           *ContactType     `json:"type"`
	TypeCode       *ContactTypeCode `json:"type_code"`
	UpdatedAt      *time.Time       `json:"updated_at,omitempty"`
}

// ContactDoctorType defines model for Contact.DoctorType.
type ContactDoctorType string

// ContactType defines model for Contact.Type.
type ContactType string

// ContactTypeCode defines model for Contact.TypeCode.
type ContactTypeCode int

// DailyAvailability defines model for DailyAvailability.
type DailyAvailability struct {
	Availabilities *[]struct {
		EndsAt   *string `json:"ends_at,omitempty"`
		StartsAt *string `json:"starts_at,omitempty"`
	} `json:"availabilities"`
	Business *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	CreatedAt *time.Time                  `json:"created_at,omitempty"`
	DayOfWeek *DailyAvailabilityDayOfWeek `json:"day_of_week"`
	Id        *string                     `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`

	// TimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
	TimeZone *string `json:"time_zone"`

	// TimeZoneIdentifier See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZoneIdentifier *string    `json:"time_zone_identifier"`
	UpdatedAt          *time.Time `json:"updated_at,omitempty"`
}

// DailyAvailabilityDayOfWeek defines model for DailyAvailability.DayOfWeek.
type DailyAvailabilityDayOfWeek int

// EmailCommunication defines model for EmailCommunication.
type EmailCommunication struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Attendee   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendee,omitempty"`
	Booking *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"booking,omitempty"`
	Category *EmailCommunicationCategory `json:"category"`

	// CategoryCode | Enum Value | Description |
	// |---|---|
	// | 1 | Appointment Reminder |
	// | 2 | Patient Reply Forwarded |
	// | 3 | Invoice |
	// | 4 | Appointment Confirmation |
	// | 5 | Letter |
	// | 6 | Practitioner Appointment Notification |
	// | 7 | SMS Message |
	// | 8 | Reply from Patient |
	// | 9 | Account Statement |
	// | 10 | Cancelled appointment notification |
	// | 11 | Auth Code |
	// | 12 | Memo |
	// | 13 | Reply from Practitioner |
	// | 14 | Payment Receipt |
	// | 15 | Bulk Email |
	// | 16 | Appointment Cancellation |
	// | 17 | Patient Form |
	// | 18 | Upcoming appointments |
	// | 19 | Completed Patient Form |
	// | 20 | Online payment request |
	// | 21 | New user |
	// | 22 | Referred user signed up |
	// | 23 | Referring user bonus notification |
	// | 24 | Referred user bonus notification |
	// | 25 | Password changed |
	// | 26 | Data export complete notification |
	// | 27 | SMS credit purchase reminder |
	// | 28 | SMS credit purchase failed |
	// | 29 | SMS credit purchase requires confirmation |
	// | 30 | SMS credit purchase receipt |
	// | 31 | Xero sync error notification |
	// | 32 | Xero OAuth error |
	// | 33 | Mailchimp integration disconnected |
	// | 34 | Card automatically updated notification |
	// | 35 | Card expiring notification |
	// | 36 | Upcoming yearly payment alert |
	// | 37 | Trial payment failure |
	// | 38 | Subscription payment failure |
	// | 39 | Trial ending reminder |
	// | 40 | Stripe receipt |
	// | 41 | Today's appointments for practitioner |
	// | 42 | User email confirmation instructions |
	// | 43 | User email changed |
	// | 44 | Unlock instructions |
	// | 45 | Reset password instructions |
	CategoryCode   *EmailCommunicationCategoryCode `json:"category_code"`
	Content        *string                         `json:"content"`
	ContentSubject *string                         `json:"content_subject"`
	CreatedAt      *time.Time                      `json:"created_at,omitempty"`

	// DirectionCode | Enum Value | Description |
	// |---|---|
	// | 1 | Sent |
	// | 2 | Received |
	DirectionCode        *EmailCommunicationDirectionCode        `json:"direction_code"`
	DirectionDescription *EmailCommunicationDirectionDescription `json:"direction_description"`
	From                 *string                                 `json:"from"`
	Id                   *string                                 `json:"id,omitempty"`
	Invoice              *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoice,omitempty"`
	Letter *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"letter,omitempty"`
	Links *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	Payment *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"payment,omitempty"`
	To   *string                 `json:"to"`
	Type *EmailCommunicationType `json:"type"`

	// TypeCode | Enum Value | Description |
	// |---|---|
	// | 1 | SMS |
	// | 2 | Email |
	// | 3 | Phone call |
	// | 4 | Other |
	TypeCode  *EmailCommunicationTypeCode `json:"type_code"`
	UpdatedAt *time.Time                  `json:"updated_at,omitempty"`
}

// EmailCommunicationCategory defines model for EmailCommunication.Category.
type EmailCommunicationCategory string

// EmailCommunicationCategoryCode | Enum Value | Description |
// |---|---|
// | 1 | Appointment Reminder |
// | 2 | Patient Reply Forwarded |
// | 3 | Invoice |
// | 4 | Appointment Confirmation |
// | 5 | Letter |
// | 6 | Practitioner Appointment Notification |
// | 7 | SMS Message |
// | 8 | Reply from Patient |
// | 9 | Account Statement |
// | 10 | Cancelled appointment notification |
// | 11 | Auth Code |
// | 12 | Memo |
// | 13 | Reply from Practitioner |
// | 14 | Payment Receipt |
// | 15 | Bulk Email |
// | 16 | Appointment Cancellation |
// | 17 | Patient Form |
// | 18 | Upcoming appointments |
// | 19 | Completed Patient Form |
// | 20 | Online payment request |
// | 21 | New user |
// | 22 | Referred user signed up |
// | 23 | Referring user bonus notification |
// | 24 | Referred user bonus notification |
// | 25 | Password changed |
// | 26 | Data export complete notification |
// | 27 | SMS credit purchase reminder |
// | 28 | SMS credit purchase failed |
// | 29 | SMS credit purchase requires confirmation |
// | 30 | SMS credit purchase receipt |
// | 31 | Xero sync error notification |
// | 32 | Xero OAuth error |
// | 33 | Mailchimp integration disconnected |
// | 34 | Card automatically updated notification |
// | 35 | Card expiring notification |
// | 36 | Upcoming yearly payment alert |
// | 37 | Trial payment failure |
// | 38 | Subscription payment failure |
// | 39 | Trial ending reminder |
// | 40 | Stripe receipt |
// | 41 | Today's appointments for practitioner |
// | 42 | User email confirmation instructions |
// | 43 | User email changed |
// | 44 | Unlock instructions |
// | 45 | Reset password instructions |
type EmailCommunicationCategoryCode int

// EmailCommunicationDirectionCode | Enum Value | Description |
// |---|---|
// | 1 | Sent |
// | 2 | Received |
type EmailCommunicationDirectionCode int

// EmailCommunicationDirectionDescription defines model for EmailCommunication.DirectionDescription.
type EmailCommunicationDirectionDescription string

// EmailCommunicationType defines model for EmailCommunication.Type.
type EmailCommunicationType string

// EmailCommunicationTypeCode | Enum Value | Description |
// |---|---|
// | 1 | SMS |
// | 2 | Email |
// | 3 | Phone call |
// | 4 | Other |
type EmailCommunicationTypeCode int

// FullPatientExport defines model for FullPatientExport.
type FullPatientExport struct {
	Content *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"content"`

	// ContentType mime type
	ContentType *string    `json:"content_type"`
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	Description *string    `json:"description"`
	Filename    *string    `json:"filename"`
	Id          *string    `json:"id,omitempty"`
	Links       *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PinnedAt            *time.Time `json:"pinned_at"`
	ProcessedAt         *time.Time `json:"processed_at"`
	ProcessingCompleted *bool      `json:"processing_completed"`
	Size                *int       `json:"size"`
	UpdatedAt           *time.Time `json:"updated_at,omitempty"`
	User                *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"user,omitempty"`
}

// GroupAppointment defines model for GroupAppointment.
type GroupAppointment struct {
	AppointmentType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointment_type,omitempty"`
	ArchivedAt *time.Time `json:"archived_at"`
	Attendees  *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendees,omitempty"`
	Business *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	Conflicts *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"conflicts"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at"`
	EndsAt    *time.Time `json:"ends_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	MaxAttendees *int      `json:"max_attendees,omitempty"`
	Notes        *string   `json:"notes"`
	PatientIds   *[]string `json:"patient_ids"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`
	RepeatRule *struct {
		NumberOfRepeats   *int                                  `json:"number_of_repeats"`
		RepeatType        *GroupAppointmentRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                  `json:"repeating_interval"`
	} `json:"repeat_rule"`
	RepeatedFrom *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"repeated_from,omitempty"`
	Repeats *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"repeats"`
	StartsAt      *time.Time `json:"starts_at,omitempty"`
	TelehealthUrl *string    `json:"telehealth_url"`
	UpdatedAt     *time.Time `json:"updated_at,omitempty"`
}

// GroupAppointmentRepeatRuleRepeatType defines model for GroupAppointment.RepeatRule.RepeatType.
type GroupAppointmentRepeatRuleRepeatType string

// IndividualAppointment defines model for IndividualAppointment.
type IndividualAppointment struct {
	AppointmentType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointment_type,omitempty"`
	ArchivedAt *time.Time `json:"archived_at"`
	Attendees  *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendees,omitempty"`
	BookingIpAddress *string `json:"booking_ip_address"`
	Business         *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	CancellationNote              *string                                             `json:"cancellation_note"`
	CancellationReason            *int                                                `json:"cancellation_reason"`
	CancellationReasonDescription *IndividualAppointmentCancellationReasonDescription `json:"cancellation_reason_description"`
	CancelledAt                   *time.Time                                          `json:"cancelled_at"`
	Conflicts                     *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"conflicts"`
	CreatedAt                  *time.Time `json:"created_at,omitempty"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DidNotArrive               *bool      `json:"did_not_arrive"`
	EmailReminderSent          *bool      `json:"email_reminder_sent"`
	EndsAt                     *time.Time `json:"ends_at,omitempty"`
	HasPatientAppointmentNotes *bool      `json:"has_patient_appointment_notes"`
	Id                         *string    `json:"id,omitempty"`
	InvoiceStatus              *int       `json:"invoice_status"`
	Links                      *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Notes                       *string `json:"notes"`
	OnlineBookingPolicyAccepted *bool   `json:"online_booking_policy_accepted"`
	Patient                     *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PatientArrived *bool `json:"patient_arrived"`
	PatientCase    *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient_case,omitempty"`
	PatientName  *string `json:"patient_name"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`
	RepeatRule *struct {
		NumberOfRepeats   *int                                       `json:"number_of_repeats"`
		RepeatType        *IndividualAppointmentRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                       `json:"repeating_interval"`
	} `json:"repeat_rule"`
	RepeatedFrom *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"repeated_from,omitempty"`
	Repeats *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"repeats"`
	SmsReminderSent     *bool      `json:"sms_reminder_sent"`
	StartsAt            *time.Time `json:"starts_at,omitempty"`
	TelehealthUrl       *string    `json:"telehealth_url"`
	TreatmentNoteStatus *int       `json:"treatment_note_status"`
	UpdatedAt           *time.Time `json:"updated_at,omitempty"`
}

// IndividualAppointmentCancellationReasonDescription defines model for IndividualAppointment.CancellationReasonDescription.
type IndividualAppointmentCancellationReasonDescription string

// IndividualAppointmentRepeatRuleRepeatType defines model for IndividualAppointment.RepeatRule.RepeatType.
type IndividualAppointmentRepeatRuleRepeatType string

// Invoice defines model for Invoice.
type Invoice struct {
	Appointment *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointment,omitempty"`
	ArchivedAt *time.Time `json:"archived_at"`
	Business   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	ClosedAt         *time.Time `json:"closed_at"`
	CreatedAt        *time.Time `json:"created_at,omitempty"`
	DeletedAt        *time.Time `json:"deleted_at"`
	DiscountedAmount *string    `json:"discounted_amount"`
	Id               *string    `json:"id,omitempty"`
	InvoiceItems     *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoice_items,omitempty"`
	InvoiceTo *string             `json:"invoice_to"`
	IssueDate *openapi_types.Date `json:"issue_date,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	NetAmount        *string `json:"net_amount"`
	Notes            *string `json:"notes"`
	Number           *int    `json:"number,omitempty"`
	OnlinePaymentUrl *string `json:"online_payment_url"`
	Patient          *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PatientExtraInformation *string `json:"patient_extra_information"`
	Practitioner            *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`

	// Status | Enum Value | Description |
	// |---|---|
	// | 10 | Open |
	// | 20 | Paid |
	// | 30 | Closed |
	// | 40 | Open credit |
	Status            *InvoiceStatus            `json:"status"`
	StatusDescription *InvoiceStatusDescription `json:"status_description"`
	TaxAmount         *string                   `json:"tax_amount"`
	TotalAmount       *string                   `json:"total_amount"`
	UpdatedAt         *time.Time                `json:"updated_at,omitempty"`
}

// InvoiceStatus | Enum Value | Description |
// |---|---|
// | 10 | Open |
// | 20 | Paid |
// | 30 | Closed |
// | 40 | Open credit |
type InvoiceStatus int

// InvoiceStatusDescription defines model for Invoice.StatusDescription.
type InvoiceStatusDescription string

// InvoiceItem defines model for InvoiceItem.
type InvoiceItem struct {
	ArchivedAt   *time.Time `json:"archived_at"`
	BillableItem *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"billable_item,omitempty"`
	Code               *string    `json:"code"`
	ConcessionTypeName *string    `json:"concession_type_name"`
	CreatedAt          *time.Time `json:"created_at,omitempty"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DiscountPercentage *float32   `json:"discount_percentage"`
	DiscountedAmount   *string    `json:"discounted_amount"`
	Id                 *string    `json:"id,omitempty"`
	Invoice            *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoice,omitempty"`
	IsMonetaryDiscount *bool `json:"is_monetary_discount"`
	Links              *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name     *string `json:"name"`
	NetPrice *string `json:"net_price"`
	Product  *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"product,omitempty"`
	Quantity *int `json:"quantity,omitempty"`
	// Deprecated:
	TaxAmount         *float32   `json:"tax_amount"`
	TaxName           *string    `json:"tax_name"`
	TaxRate           *float32   `json:"tax_rate"`
	TotalIncludingTax *float32   `json:"total_including_tax"`
	UnitPrice         *string    `json:"unit_price,omitempty"`
	UpdatedAt         *time.Time `json:"updated_at,omitempty"`
}

// MedicalAlert defines model for MedicalAlert.
type MedicalAlert struct {
	ArchivedAt *time.Time `json:"archived_at"`
	CreatedAt  *time.Time `json:"created_at,omitempty"`
	DeletedAt  *time.Time `json:"deleted_at"`
	Id         *string    `json:"id,omitempty"`
	Links      *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name    *string `json:"name,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// MemoCommunication defines model for MemoCommunication.
type MemoCommunication struct {
	ArchivedAt *time.Time                 `json:"archived_at"`
	Category   *MemoCommunicationCategory `json:"category"`

	// CategoryCode | Enum Value | Description |
	// |---|---|
	// |12|Memo|
	CategoryCode *MemoCommunicationCategoryCode `json:"category_code"`
	Confidential *bool                          `json:"confidential"`
	Content      *string                        `json:"content"`
	CreatedAt    *time.Time                     `json:"created_at,omitempty"`

	// DirectionCode | Enum Value | Description |
	// |---|---|
	// | 1 | Sent |
	// | 2 | Received |
	DirectionCode        *MemoCommunicationDirectionCode        `json:"direction_code"`
	DirectionDescription *MemoCommunicationDirectionDescription `json:"direction_description"`
	From                 *string                                `json:"from"`
	Id                   *string                                `json:"id,omitempty"`
	Links                *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	To   *string                `json:"to"`
	Type *MemoCommunicationType `json:"type"`

	// TypeCode | Enum Value | Description |
	// |---|---|
	// | 1 | SMS |
	// | 2 | Email |
	// | 3 | Phone call |
	// | 4 | Other |
	TypeCode  *MemoCommunicationTypeCode `json:"type_code"`
	UpdatedAt *time.Time                 `json:"updated_at,omitempty"`
}

// MemoCommunicationCategory defines model for MemoCommunication.Category.
type MemoCommunicationCategory string

// MemoCommunicationCategoryCode | Enum Value | Description |
// |---|---|
// |12|Memo|
type MemoCommunicationCategoryCode int

// MemoCommunicationDirectionCode | Enum Value | Description |
// |---|---|
// | 1 | Sent |
// | 2 | Received |
type MemoCommunicationDirectionCode int

// MemoCommunicationDirectionDescription defines model for MemoCommunication.DirectionDescription.
type MemoCommunicationDirectionDescription string

// MemoCommunicationType defines model for MemoCommunication.Type.
type MemoCommunicationType string

// MemoCommunicationTypeCode | Enum Value | Description |
// |---|---|
// | 1 | SMS |
// | 2 | Email |
// | 3 | Phone call |
// | 4 | Other |
type MemoCommunicationTypeCode int

// MemoCommunicationBody defines model for MemoCommunicationBody.
type MemoCommunicationBody struct {
	// CategoryCode | Enum Value | Description |
	// |---|---|
	// |12|Memo|
	CategoryCode *MemoCommunicationBodyCategoryCode `json:"category_code"`
	Confidential *bool                              `json:"confidential"`
	Content      *string                            `json:"content"`

	// DirectionCode | Enum Value | Description |
	// |---|---|
	// | 1 | Sent |
	// | 2 | Received |
	DirectionCode *MemoCommunicationBodyDirectionCode `json:"direction_code"`
	From          *string                             `json:"from"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
	To        *string `json:"to"`

	// TypeCode | Enum Value | Description |
	// |---|---|
	// | 1 | SMS |
	// | 2 | Email |
	// | 3 | Phone call |
	// | 4 | Other |
	TypeCode *MemoCommunicationBodyTypeCode `json:"type_code"`
}

// MemoCommunicationBodyCategoryCode | Enum Value | Description |
// |---|---|
// |12|Memo|
type MemoCommunicationBodyCategoryCode int

// MemoCommunicationBodyDirectionCode | Enum Value | Description |
// |---|---|
// | 1 | Sent |
// | 2 | Received |
type MemoCommunicationBodyDirectionCode int

// MemoCommunicationBodyTypeCode | Enum Value | Description |
// |---|---|
// | 1 | SMS |
// | 2 | Email |
// | 3 | Phone call |
// | 4 | Other |
type MemoCommunicationBodyTypeCode int

// Patient defines model for Patient.
type Patient struct {
	AcceptedEmailMarketing *bool   `json:"accepted_email_marketing"`
	AcceptedPrivacyPolicy  *bool   `json:"accepted_privacy_policy"`
	AcceptedSmsMarketing   *bool   `json:"accepted_sms_marketing"`
	Address1               *string `json:"address_1"`
	Address2               *string `json:"address_2"`
	Address3               *string `json:"address_3"`
	AppointmentNotes       *string `json:"appointment_notes"`
	Appointments           *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointments,omitempty"`
	ArchivedAt *time.Time `json:"archived_at"`
	Attendees  *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendees,omitempty"`
	City           *string `json:"city"`
	ConcessionType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"concession_type,omitempty"`
	Country      *string    `json:"country"`
	CreatedAt    *time.Time `json:"created_at,omitempty"`
	CustomFields *struct {
		Sections *[]struct {
			Archived *bool `json:"archived"`
			Fields   []struct {
				Archived *bool   `json:"archived"`
				Name     *string `json:"name"`
				Options  *[]struct {
					Archived *bool              `json:"archived"`
					Name     *string            `json:"name"`
					Selected *bool              `json:"selected,omitempty"`
					Token    openapi_types.UUID `json:"token"`
				} `json:"options,omitempty"`
				Other *struct {
					Archived *bool   `json:"archived"`
					Enabled  *bool   `json:"enabled"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Token openapi_types.UUID `json:"token"`
				Type  *string            `json:"type"`
				Value *string            `json:"value,omitempty"`
			} `json:"fields"`
			Name  *string            `json:"name"`
			Token openapi_types.UUID `json:"token"`
		} `json:"sections,omitempty"`
	} `json:"custom_fields"`
	DateOfBirth      *openapi_types.Date `json:"date_of_birth"`
	DeletedAt        *time.Time          `json:"deleted_at"`
	DvaCardNumber    *string             `json:"dva_card_number"`
	Email            *string             `json:"email"`
	EmergencyContact *string             `json:"emergency_contact"`
	FirstName        *string             `json:"first_name,omitempty"`
	// Deprecated:
	Gender                  *string `json:"gender"`
	GenderIdentity          *string `json:"gender_identity"`
	Id                      *string `json:"id,omitempty"`
	InvoiceDefaultTo        *string `json:"invoice_default_to"`
	InvoiceEmail            *string `json:"invoice_email"`
	InvoiceExtraInformation *string `json:"invoice_extra_information"`
	Invoices                *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoices,omitempty"`

	// Label Full name
	Label         *string `json:"label"`
	LastName      *string `json:"last_name,omitempty"`
	LatestBooking *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"latest_booking,omitempty"`
	Links *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	MedicalAlerts *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"medical_alerts,omitempty"`
	Medicare                *string    `json:"medicare"`
	MedicareReferenceNumber *string    `json:"medicare_reference_number"`
	MergedAt                *time.Time `json:"merged_at"`
	MergedWithPatient       *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"merged_with_patient,omitempty"`
	Notes              *string `json:"notes"`
	Occupation         *string `json:"occupation"`
	OldReferenceId     *string `json:"old_reference_id"`
	PatientAttachments *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient_attachments,omitempty"`
	PatientPhoneNumbers *[]PhoneNumber `json:"patient_phone_numbers"`
	PostCode            *string        `json:"post_code"`
	PreferredFirstName  *string        `json:"preferred_first_name"`
	Pronouns            *struct {
		Accusative            string `json:"accusative"`
		Nominative            string `json:"nominative"`
		PredicativePossessive string `json:"predicative_possessive"`
		PronominalPossessive  string `json:"pronominal_possessive"`
		Reflexive             string `json:"reflexive"`
	} `json:"pronouns"`
	ReceivesConfirmationEmails *bool   `json:"receives_confirmation_emails"`
	ReferralSource             *string `json:"referral_source"`
	ReferringDoctor            *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"referring_doctor,omitempty"`
	ReminderType *PatientReminderType `json:"reminder_type"`
	Sex          *string              `json:"sex"`
	State        *string              `json:"state"`

	// TimeZone See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZone  *string    `json:"time_zone"`
	Title     *string    `json:"title"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// PatientReminderType defines model for Patient.ReminderType.
type PatientReminderType string

// PatientAttachment defines model for PatientAttachment.
type PatientAttachment struct {
	union json.RawMessage
}

// PatientCase defines model for PatientCase.
type PatientCase struct {
	ArchivedAt  *time.Time `json:"archived_at"`
	AttendeeIds *[]string  `json:"attendee_ids"`
	Attendees   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendees,omitempty"`
	Bookings *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"bookings,omitempty"`
	Closed  *bool `json:"closed"`
	Contact *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"contact,omitempty"`
	CreatedAt                 *time.Time          `json:"created_at,omitempty"`
	ExpiryDate                *openapi_types.Date `json:"expiry_date"`
	Id                        *string             `json:"id,omitempty"`
	IncludeCancelledAttendees *bool               `json:"include_cancelled_attendees"`
	IncludeDnaAttendees       *bool               `json:"include_dna_attendees"`
	Invoices                  *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoices,omitempty"`
	IssueDate *openapi_types.Date `json:"issue_date"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	MaxInvoiceableAmount *string `json:"max_invoiceable_amount"`
	MaxSessions          *int    `json:"max_sessions"`
	Name                 *string `json:"name,omitempty"`
	Notes                *string `json:"notes"`
	Patient              *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PatientAttachments *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient_attachments,omitempty"`
	Referral     *bool                    `json:"referral"`
	ReferralType *PatientCaseReferralType `json:"referral_type"`
	UpdatedAt    *time.Time               `json:"updated_at,omitempty"`
}

// PatientCaseReferralType defines model for PatientCase.ReferralType.
type PatientCaseReferralType string

// PatientForm defines model for PatientForm.
type PatientForm struct {
	Attendee *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendee,omitempty"`
	Booking *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"booking,omitempty"`
	CompletedAt *time.Time `json:"completed_at"`
	Content     *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Required    *bool                                    `json:"required,omitempty"`
				SignatureId *string                                  `json:"signature_id,omitempty"`
				Type        *PatientFormContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	CreatedAt                  *time.Time `json:"created_at,omitempty"`
	EmailToPatientOnCompletion *bool      `json:"email_to_patient_on_completion"`
	Id                         *string    `json:"id,omitempty"`
	Links                      *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name    *string `json:"name,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	RestrictedToPractitioner *bool `json:"restricted_to_practitioner"`
	Signatures               *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"signatures"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Url       *string    `json:"url"`
}

// PatientFormContentSectionsQuestionsType defines model for PatientForm.Content.Sections.Questions.Type.
type PatientFormContentSectionsQuestionsType string

// PatientFormTemplate defines model for PatientFormTemplate.
type PatientFormTemplate struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Content    *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Required *bool                                            `json:"required,omitempty"`
				Type     *PatientFormTemplateContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	CreatedAt                  *time.Time `json:"created_at,omitempty"`
	EmailToPatientOnCompletion *bool      `json:"email_to_patient_on_completion"`
	Id                         *string    `json:"id,omitempty"`
	Links                      *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name                     *string    `json:"name,omitempty"`
	RestrictedToPractitioner *bool      `json:"restricted_to_practitioner"`
	UpdatedAt                *time.Time `json:"updated_at,omitempty"`
}

// PatientFormTemplateContentSectionsQuestionsType defines model for PatientFormTemplate.Content.Sections.Questions.Type.
type PatientFormTemplateContentSectionsQuestionsType string

// PhoneNumber defines model for PhoneNumber.
type PhoneNumber struct {
	NormalizedNumber *string               `json:"normalized_number,omitempty"`
	Number           *string               `json:"number,omitempty"`
	PhoneType        *PhoneNumberPhoneType `json:"phone_type,omitempty"`
}

// PhoneNumberPhoneType defines model for PhoneNumber.PhoneType.
type PhoneNumberPhoneType string

// Practitioner defines model for Practitioner.
type Practitioner struct {
	Active           *bool `json:"active"`
	AppointmentTypes *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointment_types,omitempty"`
	Appointments *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointments,omitempty"`
	CreatedAt              *time.Time `json:"created_at,omitempty"`
	DefaultAppointmentType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"default_appointment_type,omitempty"`
	Description *string `json:"description"`
	Designation *string `json:"designation"`
	DisplayName *string `json:"display_name"`
	FirstName   *string `json:"first_name"`
	Id          *string `json:"id,omitempty"`
	Invoices    *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoices,omitempty"`
	Label    *string `json:"label"`
	LastName *string `json:"last_name"`
	Links    *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	PractitionerReferenceNumbers *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner_reference_numbers,omitempty"`
	ShowInOnlineBookings *bool      `json:"show_in_online_bookings"`
	Title                *string    `json:"title"`
	UpdatedAt            *time.Time `json:"updated_at,omitempty"`
	User                 *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"user,omitempty"`
}

// PractitionerReferenceNumber defines model for PractitionerReferenceNumber.
type PractitionerReferenceNumber struct {
	Business *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name         *string `json:"name"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`
	ReferenceNumber *string    `json:"reference_number"`
	UpdatedAt       *time.Time `json:"updated_at,omitempty"`
}

// Product defines model for Product.
type Product struct {
	ArchivedAt *time.Time `json:"archived_at"`
	CostPrice  *string    `json:"cost_price"`
	CreatedAt  *time.Time `json:"created_at,omitempty"`
	Id         *string    `json:"id,omitempty"`
	ItemCode   *string    `json:"item_code"`
	Links      *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name              *string `json:"name,omitempty"`
	Notes             *string `json:"notes"`
	PriceExTax        *string `json:"price_ex_tax"`
	PriceIncludingTax *string `json:"price_including_tax"`
	ProductSupplier   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"product_supplier,omitempty"`
	ProductSupplierName *string `json:"product_supplier_name"`
	SerialNumber        *string `json:"serial_number"`
	StockLevel          *int    `json:"stock_level"`
	Tax                 *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"tax,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// ProductSupplier defines model for ProductSupplier.
type ProductSupplier struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name      *string    `json:"name,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// PublicSettings defines model for PublicSettings.
type PublicSettings struct {
	Account *struct {
		Country *string `json:"country,omitempty"`

		// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
		CountryCode      *string `json:"country_code,omitempty"`
		CurrencySymbol   *string `json:"currency_symbol,omitempty"`
		HasTimeTravelers *bool   `json:"has_time_travelers,omitempty"`
		Id               *string `json:"id,omitempty"`
		Name             *string `json:"name,omitempty"`
		Subdomain        *string `json:"subdomain,omitempty"`
		TimeZoneSupport  *bool   `json:"time_zone_support,omitempty"`
	} `json:"account"`
	Calendar *struct {
		EndHour                  *int  `json:"end_hour,omitempty"`
		MultipleAppointmentsGap  *bool `json:"multiple_appointments_gap,omitempty"`
		ShowCurrentTimeIndicator *bool `json:"show_current_time_indicator,omitempty"`
		StartHour                *int  `json:"start_hour,omitempty"`
		TimeslotHeightInPixels   *int  `json:"timeslot_height_in_pixels,omitempty"`
		TimeslotSizeInMinutes    *int  `json:"timeslot_size_in_minutes,omitempty"`
	} `json:"calendar"`
	DocumentsAndPrinting *struct {
		LogoHeight *int    `json:"logo_height,omitempty"`
		LogoUrl    *string `json:"logo_url"`
	} `json:"documents_and_printing"`
	Email *struct {
		PatientAcceptEmailMarketingByDefault *bool `json:"patient_accept_email_marketing_by_default,omitempty"`
	} `json:"email"`
	Integrations *struct {
		MailChimp *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"mail_chimp,omitempty"`
		Xero *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"xero,omitempty"`
	} `json:"integrations"`
	OnlineBookings *struct {
		AllowBookingsDaysInAdvance           *int      `json:"allow_bookings_days_in_advance,omitempty"`
		AllowOnlineBookingsTimeZoneChoice    *bool     `json:"allow_online_bookings_time_zone_choice,omitempty"`
		BookingReservationMinutes            *int      `json:"booking_reservation_minutes,omitempty"`
		CalendarInfo                         *string   `json:"calendar_info"`
		DailyBookingsLimit                   *int      `json:"daily_bookings_limit,omitempty"`
		DisabledText                         *string   `json:"disabled_text"`
		DisabledTitle                        *string   `json:"disabled_title"`
		Enabled                              *bool     `json:"enabled,omitempty"`
		LogoUrl                              *string   `json:"logo_url"`
		MaxAppointmentsPerDaySegment         *int      `json:"max_appointments_per_day_segment,omitempty"`
		MinHoursAdvanceRequiredToBook        *int      `json:"min_hours_advance_required_to_book,omitempty"`
		MinHoursNoticeForPatientCancellation *int      `json:"min_hours_notice_for_patient_cancellation,omitempty"`
		NoticeEnabled                        *bool     `json:"notice_enabled,omitempty"`
		NoticeText                           *string   `json:"notice_text"`
		NoticeTitle                          *string   `json:"notice_title"`
		NotifyPractitionerByEmail            *bool     `json:"notify_practitioner_by_email,omitempty"`
		NotifyPractitionerBySms              *bool     `json:"notify_practitioner_by_sms,omitempty"`
		Policy                               *string   `json:"policy"`
		PractitionerOrder                    *[]string `json:"practitioner_order"`
		PrivacyPolicyUrl                     *string   `json:"privacy_policy_url"`
		RequirePatientAddress                *bool     `json:"require_patient_address,omitempty"`
		ShowAppointmentDuration              *bool     `json:"show_appointment_duration,omitempty"`
		ShowPrices                           *bool     `json:"show_prices,omitempty"`
	} `json:"online_bookings"`
	OnlinePayments *struct {
		Activated *bool `json:"activated,omitempty"`
	} `json:"online_payments"`
	PatientCustomFieldsDefinition *struct {
		Sections []struct {
			Archived *bool `json:"archived,omitempty"`
			Fields   []struct {
				Archived *bool  `json:"archived,omitempty"`
				Name     string `json:"name"`
				Options  *[]struct {
					Archived *bool              `json:"archived,omitempty"`
					Name     string             `json:"name"`
					Token    openapi_types.UUID `json:"token"`
				} `json:"options,omitempty"`
				Other *struct {
					Archived *bool `json:"archived,omitempty"`
					Enabled  *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Token openapi_types.UUID                                             `json:"token"`
				Type  *PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType `json:"type"`
			} `json:"fields"`
			Name  string             `json:"name"`
			Token openapi_types.UUID `json:"token"`
		} `json:"sections"`
	} `json:"patient_custom_fields_definition"`
	PatientPrivacy *struct {
		BrowserTitleNameFormat             *PublicSettingsPatientPrivacyBrowserTitleNameFormat `json:"browser_title_name_format,omitempty"`
		IcalPatientNameOption              *PublicSettingsPatientPrivacyIcalPatientNameOption  `json:"ical_patient_name_option,omitempty"`
		PreventSendingFinancialDataByEmail *bool                                               `json:"prevent_sending_financial_data_by_email,omitempty"`
		RequiresHipaaCompliance            *bool                                               `json:"requires_hipaa_compliance,omitempty"`
	} `json:"patient_privacy"`
	Reminders *struct {
		DefaultReminderType *PublicSettingsRemindersDefaultReminderType `json:"default_reminder_type,omitempty"`
	} `json:"reminders"`
	Sms *struct {
		AlphanumericSourceNumberRequired   *bool   `json:"alphanumeric_source_number_required,omitempty"`
		DefaultAlphanumericSourceNumber    *string `json:"default_alphanumeric_source_number,omitempty"`
		MaxMessageLength                   *int    `json:"max_message_length"`
		NumberOfUsableCharactersPerMessage *int    `json:"number_of_usable_characters_per_message,omitempty"`
		PatientAcceptSmsMarketingByDefault *bool   `json:"patient_accept_sms_marketing_by_default,omitempty"`
		RepliesSupported                   *bool   `json:"replies_supported,omitempty"`
	} `json:"sms"`
	Terminology *struct {
		Patient *PublicSettingsTerminologyPatient `json:"patient,omitempty"`
		Titles  *[]string                         `json:"titles,omitempty"`
	} `json:"terminology"`
	WaitList *struct {
		DefaultWaitListExpiryPeriod *int `json:"default_wait_list_expiry_period,omitempty"`
	} `json:"wait_list"`
}

// PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType defines model for PublicSettings.PatientCustomFieldsDefinition.Sections.Fields.Type.
type PublicSettingsPatientCustomFieldsDefinitionSectionsFieldsType string

// PublicSettingsPatientPrivacyBrowserTitleNameFormat defines model for PublicSettings.PatientPrivacy.BrowserTitleNameFormat.
type PublicSettingsPatientPrivacyBrowserTitleNameFormat string

// PublicSettingsPatientPrivacyIcalPatientNameOption defines model for PublicSettings.PatientPrivacy.IcalPatientNameOption.
type PublicSettingsPatientPrivacyIcalPatientNameOption string

// PublicSettingsRemindersDefaultReminderType defines model for PublicSettings.Reminders.DefaultReminderType.
type PublicSettingsRemindersDefaultReminderType string

// PublicSettingsTerminologyPatient defines model for PublicSettings.Terminology.Patient.
type PublicSettingsTerminologyPatient string

// ReferralSource defines model for ReferralSource.
type ReferralSource struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Notes   *string `json:"notes"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	ReferralSourceType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"referral_source_type,omitempty"`
	Referrer *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"referrer"`
	ReferrerType *ReferralSourceReferrerType `json:"referrer_type"`
	Subcategory  *string                     `json:"subcategory"`
	UpdatedAt    *time.Time                  `json:"updated_at,omitempty"`
}

// ReferralSourceReferrerType defines model for ReferralSource.ReferrerType.
type ReferralSourceReferrerType string

// ReferralSourceType defines model for ReferralSourceType.
type ReferralSourceType struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name         *string                         `json:"name,omitempty"`
	ReferrerType *ReferralSourceTypeReferrerType `json:"referrer_type"`
	Referrers    *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"referrers"`
	Subcategories *[]string  `json:"subcategories"`
	UpdatedAt     *time.Time `json:"updated_at,omitempty"`
}

// ReferralSourceTypeReferrerType defines model for ReferralSourceType.ReferrerType.
type ReferralSourceTypeReferrerType string

// Service defines model for Service.
type Service struct {
	AppointmentType *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"appointment_type,omitempty"`
	Business *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	Practitioners *[]struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioners"`
}

// Settings defines model for Settings.
type Settings struct {
	Account *struct {
		Compliance *struct {
			HasHipaaComplianceConflicts     *bool     `json:"has_hipaa_compliance_conflicts,omitempty"`
			HipaaComplianceConflictMessages *[]string `json:"hipaa_compliance-conflict_messages,omitempty"`
		} `json:"compliance,omitempty"`
		Country *string `json:"country,omitempty"`

		// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
		CountryCode      *string `json:"country_code,omitempty"`
		CurrencySymbol   *string `json:"currency_symbol,omitempty"`
		EmailFrom        *string `json:"email_from,omitempty"`
		FirstName        *string `json:"first_name,omitempty"`
		HasTimeTravelers *bool   `json:"has_time_travelers,omitempty"`
		Id               *string `json:"id,omitempty"`
		LastName         *string `json:"last_name,omitempty"`
		Name             *string `json:"name,omitempty"`
		Subdomain        *string `json:"subdomain,omitempty"`
		TimeZoneSupport  *bool   `json:"time_zone_support,omitempty"`
	} `json:"account"`
	Calendar *struct {
		EndHour                  *int  `json:"end_hour,omitempty"`
		MultipleAppointmentsGap  *bool `json:"multiple_appointments_gap,omitempty"`
		ShowCurrentTimeIndicator *bool `json:"show_current_time_indicator,omitempty"`
		StartHour                *int  `json:"start_hour,omitempty"`
		TimeslotHeightInPixels   *int  `json:"timeslot_height_in_pixels,omitempty"`
		TimeslotSizeInMinutes    *int  `json:"timeslot_size_in_minutes,omitempty"`
	} `json:"calendar"`
	DocumentsAndPrinting *struct {
		LogoHeight *int    `json:"logo_height,omitempty"`
		LogoUrl    *string `json:"logo_url"`
	} `json:"documents_and_printing"`
	Email *struct {
		PatientAcceptEmailMarketingByDefault *bool `json:"patient_accept_email_marketing_by_default,omitempty"`
	} `json:"email"`
	Integrations *struct {
		MailChimp *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"mail_chimp,omitempty"`
		Medipass *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"medipass,omitempty"`
		Xero *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"xero,omitempty"`
	} `json:"integrations"`
	OnlineBookings *struct {
		Adroll *struct {
			AdvertiserId *string `json:"advertiser_id"`
			PixelId      *string `json:"pixel_id"`
		} `json:"adroll,omitempty"`
		AllowBookingsDaysInAdvance        *int    `json:"allow_bookings_days_in_advance,omitempty"`
		AllowOnlineBookingsTimeZoneChoice *bool   `json:"allow_online_bookings_time_zone_choice,omitempty"`
		BookingReservationMinutes         *int    `json:"booking_reservation_minutes,omitempty"`
		CalendarInfo                      *string `json:"calendar_info"`
		DailyBookingsLimit                *int    `json:"daily_bookings_limit,omitempty"`
		DisabledText                      *string `json:"disabled_text"`
		DisabledTitle                     *string `json:"disabled_title"`
		Enabled                           *bool   `json:"enabled,omitempty"`
		GoogleAnalytics                   *struct {
			TrackingId *string `json:"tracking_id"`
		} `json:"google_analytics,omitempty"`
		GoogleTagManager *struct {
			ContainerId *string `json:"container_id"`
		} `json:"google_tag_manager,omitempty"`
		LogoUrl                              *string   `json:"logo_url"`
		MaxAppointmentsPerDaySegment         *int      `json:"max_appointments_per_day_segment,omitempty"`
		MinHoursAdvanceRequiredToBook        *int      `json:"min_hours_advance_required_to_book,omitempty"`
		MinHoursNoticeForPatientCancellation *int      `json:"min_hours_notice_for_patient_cancellation,omitempty"`
		NoticeEnabled                        *bool     `json:"notice_enabled,omitempty"`
		NoticeText                           *string   `json:"notice_text"`
		NoticeTitle                          *string   `json:"notice_title"`
		NotifyPractitionerByEmail            *bool     `json:"notify_practitioner_by_email,omitempty"`
		NotifyPractitionerBySms              *bool     `json:"notify_practitioner_by_sms,omitempty"`
		Policy                               *string   `json:"policy"`
		PractitionerOrder                    *[]string `json:"practitioner_order"`
		PrivacyPolicyUrl                     *string   `json:"privacy_policy_url"`
		RequirePatientAddress                *bool     `json:"require_patient_address,omitempty"`
		ShowAppointmentDuration              *bool     `json:"show_appointment_duration,omitempty"`
		ShowPrices                           *bool     `json:"show_prices,omitempty"`
	} `json:"online_bookings"`
	OnlinePayments *struct {
		Activated *bool `json:"activated,omitempty"`
	} `json:"online_payments"`
	PatientCustomFieldsDefinition *struct {
		Sections []struct {
			Archived *bool `json:"archived,omitempty"`
			Fields   []struct {
				Archived *bool  `json:"archived,omitempty"`
				Name     string `json:"name"`
				Options  *[]struct {
					Archived *bool              `json:"archived,omitempty"`
					Name     string             `json:"name"`
					Token    openapi_types.UUID `json:"token"`
				} `json:"options,omitempty"`
				Other *struct {
					Archived *bool `json:"archived,omitempty"`
					Enabled  *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Token openapi_types.UUID                                       `json:"token"`
				Type  *SettingsPatientCustomFieldsDefinitionSectionsFieldsType `json:"type"`
			} `json:"fields"`
			Name  string             `json:"name"`
			Token openapi_types.UUID `json:"token"`
		} `json:"sections"`
	} `json:"patient_custom_fields_definition"`
	PatientPrivacy *struct {
		AnonymiseAppointmentsOnDeletion        *bool                                         `json:"anonymise_appointments_on_deletion,omitempty"`
		AnonymiseBookingNotifications          *bool                                         `json:"anonymise_booking_notifications,omitempty"`
		AnonymiseInvoicesAndPaymentsOnDeletion *bool                                         `json:"anonymise_invoices_and_payments_on_deletion,omitempty"`
		BaaRequested                           *bool                                         `json:"baa_requested,omitempty"`
		BrowserTitleNameFormat                 *SettingsPatientPrivacyBrowserTitleNameFormat `json:"browser_title_name_format,omitempty"`
		IcalPatientNameOption                  *SettingsPatientPrivacyIcalPatientNameOption  `json:"ical_patient_name_option,omitempty"`
		PreventSendingFinancialDataByEmail     *bool                                         `json:"prevent_sending_financial_data_by_email,omitempty"`
		RequiresHipaaCompliance                *bool                                         `json:"requires_hipaa_compliance,omitempty"`
	} `json:"patient_privacy"`
	Reminders *struct {
		DefaultReminderType *SettingsRemindersDefaultReminderType `json:"default_reminder_type,omitempty"`
	} `json:"reminders"`
	Sms *struct {
		AlphanumericSourceNumberRequired   *bool   `json:"alphanumeric_source_number_required,omitempty"`
		DefaultAlphanumericSourceNumber    *string `json:"default_alphanumeric_source_number,omitempty"`
		MaxMessageLength                   *int    `json:"max_message_length"`
		NumberOfUsableCharactersPerMessage *int    `json:"number_of_usable_characters_per_message,omitempty"`
		PatientAcceptSmsMarketingByDefault *bool   `json:"patient_accept_sms_marketing_by_default,omitempty"`
		RepliesSupported                   *bool   `json:"replies_supported,omitempty"`
	} `json:"sms"`
	Terminology *struct {
		Patient *SettingsTerminologyPatient `json:"patient,omitempty"`
		Titles  *[]string                   `json:"titles,omitempty"`
	} `json:"terminology"`
	WaitList *struct {
		DefaultWaitListExpiryPeriod *int `json:"default_wait_list_expiry_period,omitempty"`
	} `json:"wait_list"`
}

// SettingsPatientCustomFieldsDefinitionSectionsFieldsType defines model for Settings.PatientCustomFieldsDefinition.Sections.Fields.Type.
type SettingsPatientCustomFieldsDefinitionSectionsFieldsType string

// SettingsPatientPrivacyBrowserTitleNameFormat defines model for Settings.PatientPrivacy.BrowserTitleNameFormat.
type SettingsPatientPrivacyBrowserTitleNameFormat string

// SettingsPatientPrivacyIcalPatientNameOption defines model for Settings.PatientPrivacy.IcalPatientNameOption.
type SettingsPatientPrivacyIcalPatientNameOption string

// SettingsRemindersDefaultReminderType defines model for Settings.Reminders.DefaultReminderType.
type SettingsRemindersDefaultReminderType string

// SettingsTerminologyPatient defines model for Settings.Terminology.Patient.
type SettingsTerminologyPatient string

// Signature defines model for Signature.
type Signature struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Image     *string    `json:"image,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	User      *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"user,omitempty"`
}

// SmsCommunication defines model for SmsCommunication.
type SmsCommunication struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Attendee   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendee,omitempty"`
	Booking *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"booking,omitempty"`
	Category *SmsCommunicationCategory `json:"category"`

	// CategoryCode | Enum Value | Description |
	// |---|---|
	// | 1 | Appointment Reminder |
	// | 2 | Patient Reply Forwarded |
	// | 3 | Invoice |
	// | 4 | Appointment Confirmation |
	// | 5 | Letter |
	// | 6 | Practitioner Appointment Notification |
	// | 7 | SMS Message |
	// | 8 | Reply from Patient |
	// | 9 | Account Statement |
	// | 10 | Cancelled appointment notification |
	// | 11 | Auth Code |
	// | 12 | Memo |
	// | 13 | Reply from Practitioner |
	// | 14 | Payment Receipt |
	// | 15 | Bulk Email |
	// | 16 | Appointment Cancellation |
	// | 17 | Patient Form |
	// | 18 | Upcoming appointments |
	// | 19 | Completed Patient Form |
	// | 20 | Online payment request |
	// | 21 | New user |
	// | 22 | Referred user signed up |
	// | 23 | Referring user bonus notification |
	// | 24 | Referred user bonus notification |
	// | 25 | Password changed |
	// | 26 | Data export complete notification |
	// | 27 | SMS credit purchase reminder |
	// | 28 | SMS credit purchase failed |
	// | 29 | SMS credit purchase requires confirmation |
	// | 30 | SMS credit purchase receipt |
	// | 31 | Xero sync error notification |
	// | 32 | Xero OAuth error |
	// | 33 | Mailchimp integration disconnected |
	// | 34 | Card automatically updated notification |
	// | 35 | Card expiring notification |
	// | 36 | Upcoming yearly payment alert |
	// | 37 | Trial payment failure |
	// | 38 | Subscription payment failure |
	// | 39 | Trial ending reminder |
	// | 40 | Stripe receipt |
	// | 41 | Today's appointments for practitioner |
	// | 42 | User email confirmation instructions |
	// | 43 | User email changed |
	// | 44 | Unlock instructions |
	// | 45 | Reset password instructions |
	CategoryCode *SmsCommunicationCategoryCode `json:"category_code"`
	Content      *string                       `json:"content"`
	CreatedAt    *time.Time                    `json:"created_at,omitempty"`

	// DirectionCode | Enum Value | Description |
	// |---|---|
	// | 1 | Sent |
	// | 2 | Received |
	DirectionCode        *SmsCommunicationDirectionCode        `json:"direction_code"`
	DirectionDescription *SmsCommunicationDirectionDescription `json:"direction_description"`
	From                 *string                               `json:"from"`
	Id                   *string                               `json:"id,omitempty"`
	Invoice              *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"invoice,omitempty"`
	Letter *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"letter,omitempty"`
	Links *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	Payment *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"payment,omitempty"`
	To   *string               `json:"to"`
	Type *SmsCommunicationType `json:"type"`

	// TypeCode | Enum Value | Description |
	// |---|---|
	// | 1 | SMS |
	// | 2 | Email |
	// | 3 | Phone call |
	// | 4 | Other |
	TypeCode  *SmsCommunicationTypeCode `json:"type_code"`
	UpdatedAt *time.Time                `json:"updated_at,omitempty"`
}

// SmsCommunicationCategory defines model for SmsCommunication.Category.
type SmsCommunicationCategory string

// SmsCommunicationCategoryCode | Enum Value | Description |
// |---|---|
// | 1 | Appointment Reminder |
// | 2 | Patient Reply Forwarded |
// | 3 | Invoice |
// | 4 | Appointment Confirmation |
// | 5 | Letter |
// | 6 | Practitioner Appointment Notification |
// | 7 | SMS Message |
// | 8 | Reply from Patient |
// | 9 | Account Statement |
// | 10 | Cancelled appointment notification |
// | 11 | Auth Code |
// | 12 | Memo |
// | 13 | Reply from Practitioner |
// | 14 | Payment Receipt |
// | 15 | Bulk Email |
// | 16 | Appointment Cancellation |
// | 17 | Patient Form |
// | 18 | Upcoming appointments |
// | 19 | Completed Patient Form |
// | 20 | Online payment request |
// | 21 | New user |
// | 22 | Referred user signed up |
// | 23 | Referring user bonus notification |
// | 24 | Referred user bonus notification |
// | 25 | Password changed |
// | 26 | Data export complete notification |
// | 27 | SMS credit purchase reminder |
// | 28 | SMS credit purchase failed |
// | 29 | SMS credit purchase requires confirmation |
// | 30 | SMS credit purchase receipt |
// | 31 | Xero sync error notification |
// | 32 | Xero OAuth error |
// | 33 | Mailchimp integration disconnected |
// | 34 | Card automatically updated notification |
// | 35 | Card expiring notification |
// | 36 | Upcoming yearly payment alert |
// | 37 | Trial payment failure |
// | 38 | Subscription payment failure |
// | 39 | Trial ending reminder |
// | 40 | Stripe receipt |
// | 41 | Today's appointments for practitioner |
// | 42 | User email confirmation instructions |
// | 43 | User email changed |
// | 44 | Unlock instructions |
// | 45 | Reset password instructions |
type SmsCommunicationCategoryCode int

// SmsCommunicationDirectionCode | Enum Value | Description |
// |---|---|
// | 1 | Sent |
// | 2 | Received |
type SmsCommunicationDirectionCode int

// SmsCommunicationDirectionDescription defines model for SmsCommunication.DirectionDescription.
type SmsCommunicationDirectionDescription string

// SmsCommunicationType defines model for SmsCommunication.Type.
type SmsCommunicationType string

// SmsCommunicationTypeCode | Enum Value | Description |
// |---|---|
// | 1 | SMS |
// | 2 | Email |
// | 3 | Phone call |
// | 4 | Other |
type SmsCommunicationTypeCode int

// StockAdjustment defines model for StockAdjustment.
type StockAdjustment struct {
	AdjustmentType *string    `json:"adjustment_type,omitempty"`
	Comment        *string    `json:"comment"`
	CreatedAt      *time.Time `json:"created_at,omitempty"`
	Id             *string    `json:"id,omitempty"`
	Links          *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Product *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"product,omitempty"`
	Quantity  *int       `json:"quantity"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	User      *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"user,omitempty"`
}

// Tax defines model for Tax.
type Tax struct {
	// Deprecated:
	Amount    *float32   `json:"amount,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Rate      *float32   `json:"rate,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// TreatmentNote defines model for TreatmentNote.
type TreatmentNote struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Attendee   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"attendee,omitempty"`
	AuthorName *string `json:"author_name"`
	Booking    *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"booking,omitempty"`
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				BodyChartIds *[]string `json:"body_chart_ids,omitempty"`
				Name         string    `json:"name"`
				Other        *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Type *TreatmentNoteContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	DeletedAt   *time.Time `json:"deleted_at"`
	Draft       *bool      `json:"draft"`
	FinalizedAt *time.Time `json:"finalized_at"`
	Id          *string    `json:"id,omitempty"`
	Links       *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PinnedAt     *time.Time `json:"pinned_at"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`
	Title                 *string `json:"title,omitempty"`
	TreatmentNoteTemplate *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"treatment_note_template,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// TreatmentNoteContentSectionsQuestionsType defines model for TreatmentNote.Content.Sections.Questions.Type.
type TreatmentNoteContentSectionsQuestionsType string

// TreatmentNoteTemplate defines model for TreatmentNoteTemplate.
type TreatmentNoteTemplate struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Content    *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Type *TreatmentNoteTemplateContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Name          *string `json:"name,omitempty"`
	PrintSettings *struct {
		IncludePatientAddress         *bool   `json:"include_patient_address"`
		IncludePatientDob             *bool   `json:"include_patient_dob"`
		IncludePatientMedicare        *bool   `json:"include_patient_medicare"`
		IncludePatientOccupation      *bool   `json:"include_patient_occupation"`
		IncludePatientReferenceNumber *bool   `json:"include_patient_reference_number"`
		Title                         *string `json:"title"`
	} `json:"print_settings"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// TreatmentNoteTemplateContentSectionsQuestionsType defines model for TreatmentNoteTemplate.Content.Sections.Questions.Type.
type TreatmentNoteTemplateContentSectionsQuestionsType string

// UnavailableBlock defines model for UnavailableBlock.
type UnavailableBlock struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Business   *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"business,omitempty"`
	Conflicts *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"conflicts"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at"`
	EndsAt    *time.Time `json:"ends_at,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Notes        *string `json:"notes"`
	Practitioner *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"practitioner,omitempty"`
	RepeatRule *struct {
		NumberOfRepeats   *int                                  `json:"number_of_repeats"`
		RepeatType        *UnavailableBlockRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                  `json:"repeating_interval"`
	} `json:"repeat_rule"`
	RepeatedFrom *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"repeated_from,omitempty"`
	Repeats *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"repeats"`
	StartsAt  *time.Time `json:"starts_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// UnavailableBlockRepeatRuleRepeatType defines model for UnavailableBlock.RepeatRule.RepeatType.
type UnavailableBlockRepeatRuleRepeatType string

// UploadedPatientAttachment defines model for UploadedPatientAttachment.
type UploadedPatientAttachment struct {
	ArchivedAt *time.Time `json:"archived_at"`
	Content    *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"content"`
	ContentType *string    `json:"content_type"`
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	Description *string    `json:"description"`
	Filename    *string    `json:"filename"`
	Id          *string    `json:"id,omitempty"`
	Links       *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	Patient *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"patient,omitempty"`
	PinnedAt            *time.Time `json:"pinned_at"`
	ProcessedAt         *time.Time `json:"processed_at"`
	ProcessingCompleted *bool      `json:"processing_completed"`
	Size                *int       `json:"size"`
	UpdatedAt           *time.Time `json:"updated_at,omitempty"`
	User                *struct {
		Links *struct {
			Self *string `json:"self,omitempty"`
		} `json:"links,omitempty"`
	} `json:"user,omitempty"`
}

// User defines model for User.
type User struct {
	Active    *bool      `json:"active"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Email     *string    `json:"email,omitempty"`
	FirstName *string    `json:"first_name,omitempty"`
	Id        *string    `json:"id,omitempty"`
	LastName  *string    `json:"last_name,omitempty"`
	Links     *struct {
		Self *string `json:"self,omitempty"`
	} `json:"links,omitempty"`
	NewUiEnabled          *bool          `json:"new_ui_enabled"`
	PhoneNumbers          *[]PhoneNumber `json:"phone_numbers"`
	PrivacyPolicyAccepted *float32       `json:"privacy_policy_accepted"`
	Role                  *UserRole      `json:"role"`

	// TimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
	TimeZone *UserTimeZone `json:"time_zone,omitempty"`

	// TimeZoneIdentifier See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZoneIdentifier *string    `json:"time_zone_identifier"`
	Title              *string    `json:"title"`
	UpdatedAt          *time.Time `json:"updated_at,omitempty"`
	UserActive         *bool      `json:"user_active"`
}

// UserRole defines model for User.Role.
type UserRole string

// UserTimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
type UserTimeZone string

// Order defines model for Order.
type Order string

// Page defines model for Page.
type Page = int

// PerPage defines model for PerPage.
type PerPage = int

// Sort defines model for Sort.
type Sort = []string

// ValidationError defines model for ValidationError.
type ValidationError struct {
	Errors  *map[string]string `json:"errors,omitempty"`
	Message *string            `json:"message,omitempty"`
}

// AppointmentTypeRequest defines model for AppointmentType.
type AppointmentTypeRequest struct {
	AddDepositToAccountCredit          *bool     `json:"add_deposit_to_account_credit"`
	AppointmentConfirmationTemplateIds *[]string `json:"appointment_confirmation_template_ids"`
	AppointmentReminderTemplateIds     *[]string `json:"appointment_reminder_template_ids"`

	// BillableItemId billable item id
	BillableItemId              *string                                     `json:"billable_item_id,omitempty"`
	BusinessIds                 *[]string                                   `json:"business_ids,omitempty"`
	Category                    *string                                     `json:"category"`
	Color                       *string                                     `json:"color,omitempty"`
	DepositPrice                *string                                     `json:"deposit_price"`
	Description                 *string                                     `json:"description"`
	DurationInMinutes           *int                                        `json:"duration_in_minutes,omitempty"`
	MaxAttendees                *int                                        `json:"max_attendees,omitempty"`
	Name                        *string                                     `json:"name,omitempty"`
	OnlineBookingsLeadTimeHours *AppointmentTypeOnlineBookingsLeadTimeHours `json:"online_bookings_lead_time_hours"`
	OnlinePaymentsMode          *AppointmentTypeOnlinePaymentsMode          `json:"online_payments_mode"`

	// PractitionerIds Practitioner ids
	PractitionerIds *[]string `json:"practitioner_ids,omitempty"`

	// ProductId product id
	ProductId            *string `json:"product_id,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	TelehealthEnabled    *bool   `json:"telehealth_enabled"`

	// TreatmentNoteTemplateId treatment note template id
	TreatmentNoteTemplateId *string `json:"treatment_note_template_id,omitempty"`
}

// AttendeeRequest defines model for Attendee.
type AttendeeRequest struct {
	Arrived *bool `json:"arrived"`

	// BookingId booking id
	BookingId *string `json:"booking_id,omitempty"`
	Notes     *string `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
}

// AttendeeCancelRequest defines model for AttendeeCancel.
type AttendeeCancelRequest struct {
	ApplyToRepeats   *bool   `json:"apply_to_repeats,omitempty"`
	CancellationNote *string `json:"cancellation_note"`

	// CancellationReason | Enum Value | Description |
	// |---|---|
	// |10|Feeling better|
	// |20|Condition worse|
	// |30|Sick|
	// |31|COVID-19 related|
	// |40|Away|
	// |50|Other|
	// |60|Work|
	CancellationReason *AttendeeCancelCancellationReason `json:"cancellation_reason,omitempty"`
}

// AttendeeUpdateRequest defines model for AttendeeUpdate.
type AttendeeUpdateRequest struct {
	Arrived *bool   `json:"arrived"`
	Notes   *string `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`
}

// AvailabilityBlockRequest defines model for AvailabilityBlock.
type AvailabilityBlockRequest struct {
	// BusinessId business id
	BusinessId *string    `json:"business_id,omitempty"`
	EndsAt     *time.Time `json:"ends_at,omitempty"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                   `json:"number_of_repeats"`
		RepeatType        *AvailabilityBlockRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                   `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// BillableItemRequest defines model for BillableItem.
type BillableItemRequest struct {
	ItemCode *string               `json:"item_code"`
	ItemType *BillableItemItemType `json:"item_type,omitempty"`
	Name     *string               `json:"name,omitempty"`
	Price    *string               `json:"price,omitempty"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// BusinessRequest defines model for Business.
type BusinessRequest struct {
	AdditionalInformation        *string   `json:"additional_information"`
	AdditionalInvoiceInformation *string   `json:"additional_invoice_information"`
	Address1                     *string   `json:"address_1"`
	Address2                     *string   `json:"address_2"`
	AppointmentRemindersEnabled  *bool     `json:"appointment_reminders_enabled"`
	AppointmentTypeIds           *[]string `json:"appointment_type_ids"`
	BusinessName                 *string   `json:"business_name"`
	BusinessRegistrationName     *string   `json:"business_registration_name"`
	BusinessRegistrationValue    *string   `json:"business_registration_value"`
	City                         *string   `json:"city"`
	ContactInformation           *string   `json:"contact_information"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string `json:"country_code"`
	DisplayName  *string `json:"display_name"`
	EmailReplyTo *string `json:"email_reply_to"`

	// Logo Base64 encoded file attachment
	Logo                 *string `json:"logo,omitempty"`
	LogoHeight           *int    `json:"logo_height,omitempty"`
	PostCode             *string `json:"post_code"`
	RemoveLogo           *bool   `json:"remove_logo,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	State                *string `json:"state"`

	// TimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
	TimeZone *string `json:"time_zone"`

	// TimeZoneIdentifier See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZoneIdentifier *string `json:"time_zone_identifier"`
	WebsiteAddress     *string `json:"website_address"`
}

// BusinessCreateRequest defines model for BusinessCreate.
type BusinessCreateRequest struct {
	AdditionalInformation        *string   `json:"additional_information"`
	AdditionalInvoiceInformation *string   `json:"additional_invoice_information"`
	Address1                     *string   `json:"address_1"`
	Address2                     *string   `json:"address_2"`
	AppointmentRemindersEnabled  *bool     `json:"appointment_reminders_enabled"`
	AppointmentTypeIds           *[]string `json:"appointment_type_ids"`
	BusinessName                 *string   `json:"business_name"`
	BusinessRegistrationName     *string   `json:"business_registration_name"`
	BusinessRegistrationValue    *string   `json:"business_registration_value"`
	City                         *string   `json:"city"`
	ContactInformation           *string   `json:"contact_information"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string `json:"country_code"`
	DisplayName  *string `json:"display_name"`
	EmailReplyTo *string `json:"email_reply_to"`

	// Logo Base64 encoded file attachment
	Logo                 *string `json:"logo,omitempty"`
	LogoHeight           *int    `json:"logo_height,omitempty"`
	PostCode             *string `json:"post_code"`
	RemoveLogo           *bool   `json:"remove_logo,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	State                *string `json:"state"`

	// TimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
	TimeZone *string `json:"time_zone"`

	// TimeZoneIdentifier See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZoneIdentifier *string `json:"time_zone_identifier"`
	WebsiteAddress     *string `json:"website_address"`
}

// ConcessionTypeRequest defines model for ConcessionType.
type ConcessionTypeRequest struct {
	Name *string `json:"name,omitempty"`
}

// ContactRequest defines model for Contact.
type ContactRequest struct {
	Address1    *string `json:"address_1"`
	Address2    *string `json:"address_2"`
	Address3    *string `json:"address_3"`
	City        *string `json:"city"`
	CompanyName *string `json:"company_name"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string            `json:"country_code"`
	DoctorType   *ContactDoctorType `json:"doctor_type"`
	Email        *string            `json:"email"`
	FirstName    *string            `json:"first_name"`
	LastName     *string            `json:"last_name"`
	Notes        *string            `json:"notes"`
	Occupation   *string            `json:"occupation"`
	PhoneNumbers *[]struct {
		Number    *string                       `json:"number,omitempty"`
		PhoneType *ContactPhoneNumbersPhoneType `json:"phone_type,omitempty"`
	} `json:"phone_numbers,omitempty"`
	PostCode       *string          `json:"post_code"`
	PreferredName  *string          `json:"preferred_name"`
	ProviderNumber *string          `json:"provider_number"`
	State          *string          `json:"state"`
	Title          *string          `json:"title"`
	TypeCode       *ContactTypeCode `json:"type_code"`
}

// GroupAppointmentRequest defines model for GroupAppointment.
type GroupAppointmentRequest struct {
	// AppointmentTypeId appointment type id
	AppointmentTypeId *string `json:"appointment_type_id,omitempty"`

	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`

	// EndsAt If not provided, this will be based on the duration of the appointment type.
	EndsAt *time.Time `json:"ends_at,omitempty"`

	// MaxAttendees If not provided, this will be based on the max_attendees of the appointment type.
	MaxAttendees *int    `json:"max_attendees,omitempty"`
	Notes        *string `json:"notes"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                  `json:"number_of_repeats"`
		RepeatType        *GroupAppointmentRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                  `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// IndividualAppointmentRequest defines model for IndividualAppointment.
type IndividualAppointmentRequest struct {
	// AppointmentTypeId appointment type id
	AppointmentTypeId *string `json:"appointment_type_id,omitempty"`

	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`

	// EndsAt If not provided, this will be based on the duration of the appointment type.
	EndsAt *time.Time `json:"ends_at,omitempty"`
	Notes  *string    `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                       `json:"number_of_repeats"`
		RepeatType        *IndividualAppointmentRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                       `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// IndividualAppointmentCancelRequest defines model for IndividualAppointmentCancel.
type IndividualAppointmentCancelRequest struct {
	ApplyToRepeats   *bool   `json:"apply_to_repeats,omitempty"`
	CancellationNote *string `json:"cancellation_note"`

	// CancellationReason | Enum Value | Description |
	// |---|---|
	// |10|Feeling better|
	// |20|Condition worse|
	// |30|Sick|
	// |31|COVID-19 related|
	// |40|Away|
	// |50|Other|
	// |60|Work|
	CancellationReason *IndividualAppointmentCancelCancellationReason `json:"cancellation_reason,omitempty"`
}

// MedicalAlertRequest defines model for MedicalAlert.
type MedicalAlertRequest struct {
	Name *string `json:"name,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
}

// PatientRequest defines model for Patient.
type PatientRequest struct {
	AcceptedEmailMarketing *bool   `json:"accepted_email_marketing"`
	AcceptedPrivacyPolicy  *bool   `json:"accepted_privacy_policy"`
	Address1               *string `json:"address_1"`
	Address2               *string `json:"address_2"`
	Address3               *string `json:"address_3"`
	AppointmentNotes       *string `json:"appointment_notes"`
	City                   *string `json:"city"`

	// ConcessionTypeId concession type id
	ConcessionTypeId *string `json:"concession_type_id,omitempty"`
	Country          *string `json:"country"`
	CustomFields     *struct {
		Sections *[]struct {
			Archived *bool `json:"archived"`
			Fields   []struct {
				Archived *bool   `json:"archived"`
				Name     *string `json:"name"`
				Options  *[]struct {
					Archived *bool              `json:"archived"`
					Name     *string            `json:"name"`
					Selected *bool              `json:"selected,omitempty"`
					Token    openapi_types.UUID `json:"token"`
				} `json:"options,omitempty"`
				Other *struct {
					Archived *bool   `json:"archived"`
					Enabled  *bool   `json:"enabled"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Token openapi_types.UUID `json:"token"`
				Type  *string            `json:"type"`
				Value *string            `json:"value,omitempty"`
			} `json:"fields"`
			Name  *string            `json:"name"`
			Token openapi_types.UUID `json:"token"`
		} `json:"sections,omitempty"`
	} `json:"custom_fields"`
	DateOfBirth             *openapi_types.Date `json:"date_of_birth"`
	DvaCardNumber           *string             `json:"dva_card_number"`
	Email                   *string             `json:"email"`
	EmergencyContact        *string             `json:"emergency_contact"`
	FirstName               *string             `json:"first_name,omitempty"`
	GenderIdentity          *string             `json:"gender_identity"`
	InvoiceDefaultTo        *string             `json:"invoice_default_to"`
	InvoiceEmail            *string             `json:"invoice_email"`
	InvoiceExtraInformation *string             `json:"invoice_extra_information"`
	LastName                *string             `json:"last_name,omitempty"`
	Medicare                *string             `json:"medicare"`
	MedicareReferenceNumber *string             `json:"medicare_reference_number"`
	Notes                   *string             `json:"notes"`
	Occupation              *string             `json:"occupation"`
	OldReferenceId          *string             `json:"old_reference_id"`
	PatientPhoneNumbers     *[]struct {
		Number    *string                              `json:"number,omitempty"`
		PhoneType *PatientPatientPhoneNumbersPhoneType `json:"phone_type,omitempty"`
	} `json:"patient_phone_numbers,omitempty"`
	PostCode           *string `json:"post_code"`
	PreferredFirstName *string `json:"preferred_first_name"`
	Pronouns           *struct {
		Accusative            string `json:"accusative"`
		Nominative            string `json:"nominative"`
		PredicativePossessive string `json:"predicative_possessive"`
		PronominalPossessive  string `json:"pronominal_possessive"`
		Reflexive             string `json:"reflexive"`
	} `json:"pronouns"`
	ReceivesConfirmationEmails *bool   `json:"receives_confirmation_emails"`
	ReferralSource             *string `json:"referral_source"`

	// ReferringDoctorId contact id
	ReferringDoctorId *string              `json:"referring_doctor_id,omitempty"`
	ReminderType      *PatientReminderType `json:"reminder_type"`
	Sex               *string              `json:"sex"`
	State             *string              `json:"state"`

	// TimeZone See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZone                *string `json:"time_zone"`
	Title                   *string `json:"title"`
	UnsubscribeSmsMarketing *bool   `json:"unsubscribe_sms_marketing,omitempty"`
}

// PatientCaseRequest defines model for PatientCase.
type PatientCaseRequest struct {
	AttendeeIds *[]string `json:"attendee_ids"`
	Closed      *bool     `json:"closed"`

	// ContactId contact id
	ContactId                 *string             `json:"contact_id,omitempty"`
	ExpiryDate                *openapi_types.Date `json:"expiry_date"`
	IncludeCancelledAttendees *bool               `json:"include_cancelled_attendees"`
	IncludeDnaAttendees       *bool               `json:"include_dna_attendees"`
	IssueDate                 *openapi_types.Date `json:"issue_date"`
	MaxInvoiceableAmount      *string             `json:"max_invoiceable_amount"`
	MaxSessions               *int                `json:"max_sessions"`
	Name                      *string             `json:"name,omitempty"`
	Notes                     *string             `json:"notes"`

	// PatientAttachmentIds Patient attachment ids
	PatientAttachmentIds *[]string `json:"patient_attachment_ids,omitempty"`

	// PatientId patient id
	PatientId    *string                  `json:"patient_id,omitempty"`
	Referral     *bool                    `json:"referral"`
	ReferralType *PatientCaseReferralType `json:"referral_type"`
}

// PatientFormRequest defines model for PatientForm.
type PatientFormRequest struct {
	// AttendeeId attendee id
	AttendeeId *string `json:"attendee_id,omitempty"`
	Completed  *bool   `json:"completed,omitempty"`
	Content    *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Required    *bool                                    `json:"required,omitempty"`
				SignatureId *string                                  `json:"signature_id,omitempty"`
				Type        *PatientFormContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	EmailToPatientOnCompletion *bool   `json:"email_to_patient_on_completion"`
	Name                       *string `json:"name,omitempty"`
	PatientFormTemplateId      *string `json:"patient_form_template_id,omitempty"`

	// PatientId patient id
	PatientId                *string `json:"patient_id,omitempty"`
	RestrictedToPractitioner *bool   `json:"restricted_to_practitioner"`
}

// PatientFormTemplateRequest defines model for PatientFormTemplate.
type PatientFormTemplateRequest struct {
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Required *bool                                            `json:"required,omitempty"`
				Type     *PatientFormTemplateContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	EmailToPatientOnCompletion *bool   `json:"email_to_patient_on_completion"`
	Name                       *string `json:"name,omitempty"`
	RestrictedToPractitioner   *bool   `json:"restricted_to_practitioner"`
}

// PractitionerReferenceNumberRequest defines model for PractitionerReferenceNumber.
type PractitionerReferenceNumberRequest struct {
	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`
	Name       *string `json:"name"`

	// PractitionerId practitioner id
	PractitionerId  *string `json:"practitioner_id,omitempty"`
	ReferenceNumber *string `json:"reference_number"`
}

// ProductRequest defines model for Product.
type ProductRequest struct {
	CostPrice           *string  `json:"cost_price"`
	ItemCode            *string  `json:"item_code"`
	Name                *string  `json:"name,omitempty"`
	Notes               *string  `json:"notes"`
	Price               *float32 `json:"price,omitempty"`
	PriceIncludesTax    *bool    `json:"price_includes_tax"`
	ProductSupplierName *string  `json:"product_supplier_name"`
	SerialNumber        *string  `json:"serial_number"`
	StockLevel          *int     `json:"stock_level"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// ProductSupplierRequest defines model for ProductSupplier.
type ProductSupplierRequest struct {
	Name *string `json:"name,omitempty"`
}

// ProductUpdateRequest defines model for ProductUpdate.
type ProductUpdateRequest struct {
	CostPrice           *string  `json:"cost_price"`
	ItemCode            *string  `json:"item_code"`
	Name                *string  `json:"name,omitempty"`
	Notes               *string  `json:"notes"`
	Price               *float32 `json:"price,omitempty"`
	PriceIncludesTax    *bool    `json:"price_includes_tax"`
	ProductSupplierName *string  `json:"product_supplier_name"`
	SerialNumber        *string  `json:"serial_number"`
	StockLevel          *int     `json:"stock_level"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// ReferralSourceRequest defines model for ReferralSource.
type ReferralSourceRequest struct {
	Notes *string `json:"notes"`

	// ReferralSourceTypeId referral source type id
	ReferralSourceTypeId *string `json:"referral_source_type_id,omitempty"`
	ReferrerId           *string `json:"referrer_id,omitempty"`
	Subcategory          *string `json:"subcategory"`
}

// StockAdjustmentRequest defines model for StockAdjustment.
type StockAdjustmentRequest struct {
	// AdjustmentType The reason for modifying the stock level.
	//
	// **Increase types**: `Stock Purchase`, `Returned`, `Other`
	//
	// **Decrease types**: `Damaged`, `Out of Date`, `Item Sold`, `Other`
	AdjustmentType *StockAdjustmentAdjustmentType `json:"adjustment_type,omitempty"`
	Comment        *string                        `json:"comment"`

	// ProductId The existing product you want to adjust the stock level of.
	ProductId *string `json:"product_id,omitempty"`

	// Quantity A negative value is only allowed when a decreasing adjustment type has been selected and vice versa.
	Quantity *int `json:"quantity"`
}

// TaxRequest defines model for Tax.
type TaxRequest struct {
	Amount *float32 `json:"amount,omitempty"`
	Name   *string  `json:"name,omitempty"`
	Rate   *float32 `json:"rate,omitempty"`
}

// TreatmentNoteRequest defines model for TreatmentNote.
type TreatmentNoteRequest struct {
	// AttendeeId attendee id
	AttendeeId *string `json:"attendee_id,omitempty"`

	// BookingId booking id
	BookingId *string `json:"booking_id,omitempty"`
	Content   *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				BodyChartIds *[]string `json:"body_chart_ids,omitempty"`
				Name         string    `json:"name"`
				Other        *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Type *TreatmentNoteContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	Draft *bool `json:"draft"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
	Title     *string `json:"title,omitempty"`

	// TreatmentNoteTemplateId treatment note template id
	TreatmentNoteTemplateId *string `json:"treatment_note_template_id,omitempty"`
}

// TreatmentNoteTemplateRequest defines model for TreatmentNoteTemplate.
type TreatmentNoteTemplateRequest struct {
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Type *TreatmentNoteTemplateContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content,omitempty"`
	Name          *string `json:"name,omitempty"`
	PrintSettings *struct {
		IncludePatientAddress         *bool   `json:"include_patient_address,omitempty"`
		IncludePatientDob             *bool   `json:"include_patient_dob,omitempty"`
		IncludePatientMedicare        *bool   `json:"include_patient_medicare,omitempty"`
		IncludePatientOccupation      *bool   `json:"include_patient_occupation,omitempty"`
		IncludePatientReferenceNumber *bool   `json:"include_patient_reference_number,omitempty"`
		Title                         *string `json:"title,omitempty"`
	} `json:"print_settings,omitempty"`
}

// UnavailableBlockRequest defines model for UnavailableBlock.
type UnavailableBlockRequest struct {
	// BusinessId business id
	BusinessId *string    `json:"business_id,omitempty"`
	EndsAt     *time.Time `json:"ends_at,omitempty"`
	Notes      *string    `json:"notes"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                  `json:"number_of_repeats"`
		RepeatType        *UnavailableBlockRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                  `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// UploadedPatientAttachmentRequest defines model for UploadedPatientAttachment.
type UploadedPatientAttachmentRequest struct {
	Description *string `json:"description"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`

	// UploadUrl Must be a presigned URL returned by the [presigned URL upload process](/developer-portal/guides/uploading_patient_attachments/)
	UploadUrl *string `json:"upload_url,omitempty"`
}

// ListAppointmentTypesGetParams defines parameters for ListAppointmentTypesGet.
type ListAppointmentTypesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                               `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAppointmentTypesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | category | [string](/developer-portal/#string-filter-operators) |
	// | online_payments_mode | [string](/developer-portal/#string-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	// | appointment_confirmation_template_ids | [array](/developer-portal/#array-filter-operators) |
	// | appointment_reminder_template_ids | [array](/developer-portal/#array-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAppointmentTypesGetParamsOrder defines parameters for ListAppointmentTypesGet.
type ListAppointmentTypesGetParamsOrder string

// CreateAppointmentTypePostJSONBody defines parameters for CreateAppointmentTypePost.
type CreateAppointmentTypePostJSONBody struct {
	AddDepositToAccountCredit          *bool     `json:"add_deposit_to_account_credit"`
	AppointmentConfirmationTemplateIds *[]string `json:"appointment_confirmation_template_ids"`
	AppointmentReminderTemplateIds     *[]string `json:"appointment_reminder_template_ids"`

	// BillableItemId billable item id
	BillableItemId              *string                                                       `json:"billable_item_id,omitempty"`
	BusinessIds                 *[]string                                                     `json:"business_ids,omitempty"`
	Category                    *string                                                       `json:"category"`
	Color                       *string                                                       `json:"color,omitempty"`
	DepositPrice                *string                                                       `json:"deposit_price"`
	Description                 *string                                                       `json:"description"`
	DurationInMinutes           *int                                                          `json:"duration_in_minutes,omitempty"`
	MaxAttendees                *int                                                          `json:"max_attendees,omitempty"`
	Name                        *string                                                       `json:"name,omitempty"`
	OnlineBookingsLeadTimeHours *CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours `json:"online_bookings_lead_time_hours"`
	OnlinePaymentsMode          *CreateAppointmentTypePostJSONBodyOnlinePaymentsMode          `json:"online_payments_mode"`

	// PractitionerIds Practitioner ids
	PractitionerIds *[]string `json:"practitioner_ids,omitempty"`

	// ProductId product id
	ProductId            *string `json:"product_id,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	TelehealthEnabled    *bool   `json:"telehealth_enabled"`

	// TreatmentNoteTemplateId treatment note template id
	TreatmentNoteTemplateId *string `json:"treatment_note_template_id,omitempty"`
}

// CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours defines parameters for CreateAppointmentTypePost.
type CreateAppointmentTypePostJSONBodyOnlineBookingsLeadTimeHours int

// CreateAppointmentTypePostJSONBodyOnlinePaymentsMode defines parameters for CreateAppointmentTypePost.
type CreateAppointmentTypePostJSONBodyOnlinePaymentsMode string

// ListPractitionersForAppointmentTypeGetParams defines parameters for ListPractitionersForAppointmentTypeGet.
type ListPractitionersForAppointmentTypeGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                              `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPractitionersForAppointmentTypeGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPractitionersForAppointmentTypeGetParamsOrder defines parameters for ListPractitionersForAppointmentTypeGet.
type ListPractitionersForAppointmentTypeGetParamsOrder string

// ListInactivePractitionersForAppointmentTypeGetParams defines parameters for ListInactivePractitionersForAppointmentTypeGet.
type ListInactivePractitionersForAppointmentTypeGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                                      `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInactivePractitionersForAppointmentTypeGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInactivePractitionersForAppointmentTypeGetParamsOrder defines parameters for ListInactivePractitionersForAppointmentTypeGet.
type ListInactivePractitionersForAppointmentTypeGetParamsOrder string

// GetAppointmentTypeGetParams defines parameters for GetAppointmentTypeGet.
type GetAppointmentTypeGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateAppointmentTypePatchJSONBody defines parameters for UpdateAppointmentTypePatch.
type UpdateAppointmentTypePatchJSONBody struct {
	AddDepositToAccountCredit          *bool     `json:"add_deposit_to_account_credit"`
	AppointmentConfirmationTemplateIds *[]string `json:"appointment_confirmation_template_ids"`
	AppointmentReminderTemplateIds     *[]string `json:"appointment_reminder_template_ids"`

	// BillableItemId billable item id
	BillableItemId              *string                                                        `json:"billable_item_id,omitempty"`
	BusinessIds                 *[]string                                                      `json:"business_ids,omitempty"`
	Category                    *string                                                        `json:"category"`
	Color                       *string                                                        `json:"color,omitempty"`
	DepositPrice                *string                                                        `json:"deposit_price"`
	Description                 *string                                                        `json:"description"`
	DurationInMinutes           *int                                                           `json:"duration_in_minutes,omitempty"`
	MaxAttendees                *int                                                           `json:"max_attendees,omitempty"`
	Name                        *string                                                        `json:"name,omitempty"`
	OnlineBookingsLeadTimeHours *UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours `json:"online_bookings_lead_time_hours"`
	OnlinePaymentsMode          *UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode          `json:"online_payments_mode"`

	// PractitionerIds Practitioner ids
	PractitionerIds *[]string `json:"practitioner_ids,omitempty"`

	// ProductId product id
	ProductId            *string `json:"product_id,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	TelehealthEnabled    *bool   `json:"telehealth_enabled"`

	// TreatmentNoteTemplateId treatment note template id
	TreatmentNoteTemplateId *string `json:"treatment_note_template_id,omitempty"`
}

// UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours defines parameters for UpdateAppointmentTypePatch.
type UpdateAppointmentTypePatchJSONBodyOnlineBookingsLeadTimeHours int

// UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode defines parameters for UpdateAppointmentTypePatch.
type UpdateAppointmentTypePatchJSONBodyOnlinePaymentsMode string

// ListInvoicesForAppointmentGetParams defines parameters for ListInvoicesForAppointmentGet.
type ListInvoicesForAppointmentGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                     `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoicesForAppointmentGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | issue_date | [date](/developer-portal/#date-filter-operators) |
	// | number | [integer](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | status | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesForAppointmentGetParamsOrder defines parameters for ListInvoicesForAppointmentGet.
type ListInvoicesForAppointmentGetParamsOrder string

// ListAttendeesGetParams defines parameters for ListAttendeesGet.
type ListAttendeesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                        `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAttendeesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | booking_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_case_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAttendeesGetParamsOrder defines parameters for ListAttendeesGet.
type ListAttendeesGetParamsOrder string

// CreateAttendeePostJSONBody defines parameters for CreateAttendeePost.
type CreateAttendeePostJSONBody struct {
	Arrived *bool `json:"arrived"`

	// BookingId booking id
	BookingId *string `json:"booking_id,omitempty"`
	Notes     *string `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
}

// ListInvoicesForAttendeeGetParams defines parameters for ListInvoicesForAttendeeGet.
type ListInvoicesForAttendeeGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                  `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoicesForAttendeeGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | issue_date | [date](/developer-portal/#date-filter-operators) |
	// | number | [integer](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | status | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesForAttendeeGetParamsOrder defines parameters for ListInvoicesForAttendeeGet.
type ListInvoicesForAttendeeGetParamsOrder string

// ListPatientFormsForAttendeeGetParams defines parameters for ListPatientFormsForAttendeeGet.
type ListPatientFormsForAttendeeGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                      `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientFormsForAttendeeGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | completed_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientFormsForAttendeeGetParamsOrder defines parameters for ListPatientFormsForAttendeeGet.
type ListPatientFormsForAttendeeGetParamsOrder string

// GetAttendeeGetParams defines parameters for GetAttendeeGet.
type GetAttendeeGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateAttendeePatchJSONBody defines parameters for UpdateAttendeePatch.
type UpdateAttendeePatchJSONBody struct {
	Arrived *bool   `json:"arrived"`
	Notes   *string `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`
}

// CancelAttendeePatchJSONBody defines parameters for CancelAttendeePatch.
type CancelAttendeePatchJSONBody struct {
	ApplyToRepeats   *bool   `json:"apply_to_repeats,omitempty"`
	CancellationNote *string `json:"cancellation_note"`

	// CancellationReason | Enum Value | Description |
	// |---|---|
	// |10|Feeling better|
	// |20|Condition worse|
	// |30|Sick|
	// |31|COVID-19 related|
	// |40|Away|
	// |50|Other|
	// |60|Work|
	CancellationReason *CancelAttendeePatchJSONBodyCancellationReason `json:"cancellation_reason,omitempty"`
}

// CancelAttendeePatchJSONBodyCancellationReason defines parameters for CancelAttendeePatch.
type CancelAttendeePatchJSONBodyCancellationReason int

// ListAvailabilityBlocksGetParams defines parameters for ListAvailabilityBlocksGet.
type ListAvailabilityBlocksGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                 `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAvailabilityBlocksGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | starts_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAvailabilityBlocksGetParamsOrder defines parameters for ListAvailabilityBlocksGet.
type ListAvailabilityBlocksGetParamsOrder string

// CreateAvailabilityBlockPostJSONBody defines parameters for CreateAvailabilityBlockPost.
type CreateAvailabilityBlockPostJSONBody struct {
	// BusinessId business id
	BusinessId *string    `json:"business_id,omitempty"`
	EndsAt     *time.Time `json:"ends_at,omitempty"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                     `json:"number_of_repeats"`
		RepeatType        *CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                     `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType defines parameters for CreateAvailabilityBlockPost.
type CreateAvailabilityBlockPostJSONBodyRepeatRuleRepeatType string

// ListBillableItemsGetParams defines parameters for ListBillableItemsGet.
type ListBillableItemsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                            `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListBillableItemsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | tax_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListBillableItemsGetParamsOrder defines parameters for ListBillableItemsGet.
type ListBillableItemsGetParamsOrder string

// CreateBillableItemPostJSONBody defines parameters for CreateBillableItemPost.
type CreateBillableItemPostJSONBody struct {
	ItemCode *string                                 `json:"item_code"`
	ItemType *CreateBillableItemPostJSONBodyItemType `json:"item_type,omitempty"`
	Name     *string                                 `json:"name,omitempty"`
	Price    *string                                 `json:"price,omitempty"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// CreateBillableItemPostJSONBodyItemType defines parameters for CreateBillableItemPost.
type CreateBillableItemPostJSONBodyItemType string

// GetBillableItemGetParams defines parameters for GetBillableItemGet.
type GetBillableItemGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateBillableItemPatchJSONBody defines parameters for UpdateBillableItemPatch.
type UpdateBillableItemPatchJSONBody struct {
	ItemCode *string                                  `json:"item_code"`
	ItemType *UpdateBillableItemPatchJSONBodyItemType `json:"item_type,omitempty"`
	Name     *string                                  `json:"name,omitempty"`
	Price    *string                                  `json:"price,omitempty"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// UpdateBillableItemPatchJSONBodyItemType defines parameters for UpdateBillableItemPatch.
type UpdateBillableItemPatchJSONBodyItemType string

// ListBookingsGetParams defines parameters for ListBookingsGet.
type ListBookingsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListBookingsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_type_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | did_not_arrive | [boolean](/developer-portal/#boolean-filter-operators) |
	// | ends_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_ids | [array](/developer-portal/#array-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | repeated_from_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | starts_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListBookingsGetParamsOrder defines parameters for ListBookingsGet.
type ListBookingsGetParamsOrder string

// GetBookingGetParams defines parameters for GetBookingGet.
type GetBookingGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListBusinessesGetParams defines parameters for ListBusinessesGet.
type ListBusinessesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                         `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListBusinessesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_type_ids | [array](/developer-portal/#array-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListBusinessesGetParamsOrder defines parameters for ListBusinessesGet.
type ListBusinessesGetParamsOrder string

// CreateBusinessPostJSONBody defines parameters for CreateBusinessPost.
type CreateBusinessPostJSONBody struct {
	AdditionalInformation        *string   `json:"additional_information"`
	AdditionalInvoiceInformation *string   `json:"additional_invoice_information"`
	Address1                     *string   `json:"address_1"`
	Address2                     *string   `json:"address_2"`
	AppointmentRemindersEnabled  *bool     `json:"appointment_reminders_enabled"`
	AppointmentTypeIds           *[]string `json:"appointment_type_ids"`
	BusinessName                 *string   `json:"business_name"`
	BusinessRegistrationName     *string   `json:"business_registration_name"`
	BusinessRegistrationValue    *string   `json:"business_registration_value"`
	City                         *string   `json:"city"`
	ContactInformation           *string   `json:"contact_information"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string `json:"country_code"`
	DisplayName  *string `json:"display_name"`
	EmailReplyTo *string `json:"email_reply_to"`

	// Logo Base64 encoded file attachment
	Logo                 *string `json:"logo,omitempty"`
	LogoHeight           *int    `json:"logo_height,omitempty"`
	PostCode             *string `json:"post_code"`
	RemoveLogo           *bool   `json:"remove_logo,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	State                *string `json:"state"`

	// TimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
	TimeZone *string `json:"time_zone"`

	// TimeZoneIdentifier See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZoneIdentifier *string `json:"time_zone_identifier"`
	WebsiteAddress     *string `json:"website_address"`
}

// ListDailyAvailabilitiesForBusinessGetParams defines parameters for ListDailyAvailabilitiesForBusinessGet.
type ListDailyAvailabilitiesForBusinessGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                             `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListDailyAvailabilitiesForBusinessGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListDailyAvailabilitiesForBusinessGetParamsOrder defines parameters for ListDailyAvailabilitiesForBusinessGet.
type ListDailyAvailabilitiesForBusinessGetParamsOrder string

// ListPractitionersForBusinessGetParams defines parameters for ListPractitionersForBusinessGet.
type ListPractitionersForBusinessGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPractitionersForBusinessGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPractitionersForBusinessGetParamsOrder defines parameters for ListPractitionersForBusinessGet.
type ListPractitionersForBusinessGetParamsOrder string

// ListInactivePractitionersForBusinessGetParams defines parameters for ListInactivePractitionersForBusinessGet.
type ListInactivePractitionersForBusinessGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                               `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInactivePractitionersForBusinessGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInactivePractitionersForBusinessGetParamsOrder defines parameters for ListInactivePractitionersForBusinessGet.
type ListInactivePractitionersForBusinessGetParamsOrder string

// GetAllAvailableTimesGetParams defines parameters for GetAllAvailableTimesGet.
type GetAllAvailableTimesGetParams struct {
	// From Cannot be more than 7 days before `to`. Cannot be older than the current date in the account's time zone.
	From openapi_types.Date `form:"from" json:"from"`

	// To Cannot be more than 7 days after `from`. Cannot be older than the current date in the account's time zone.
	To      openapi_types.Date `form:"to" json:"to"`
	Page    *Page              `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage           `form:"per_page,omitempty" json:"per_page,omitempty"`
}

// GetNextAvailableTimeGetParams defines parameters for GetNextAvailableTimeGet.
type GetNextAvailableTimeGetParams struct {
	// From Cannot be more than 7 days before `to`. Cannot be older than the current date in the account's time zone.
	From openapi_types.Date `form:"from" json:"from"`

	// To Cannot be more than 7 days after `from`. Cannot be older than the current date in the account's time zone.
	To openapi_types.Date `form:"to" json:"to"`
}

// ListServicesForBusinessGetParams defines parameters for ListServicesForBusinessGet.
type ListServicesForBusinessGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                  `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListServicesForBusinessGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`
}

// ListServicesForBusinessGetParamsOrder defines parameters for ListServicesForBusinessGet.
type ListServicesForBusinessGetParamsOrder string

// GetBusinessGetParams defines parameters for GetBusinessGet.
type GetBusinessGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateBusinessPatchJSONBody defines parameters for UpdateBusinessPatch.
type UpdateBusinessPatchJSONBody struct {
	AdditionalInformation        *string   `json:"additional_information"`
	AdditionalInvoiceInformation *string   `json:"additional_invoice_information"`
	Address1                     *string   `json:"address_1"`
	Address2                     *string   `json:"address_2"`
	AppointmentRemindersEnabled  *bool     `json:"appointment_reminders_enabled"`
	AppointmentTypeIds           *[]string `json:"appointment_type_ids"`
	BusinessName                 *string   `json:"business_name"`
	BusinessRegistrationName     *string   `json:"business_registration_name"`
	BusinessRegistrationValue    *string   `json:"business_registration_value"`
	City                         *string   `json:"city"`
	ContactInformation           *string   `json:"contact_information"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string `json:"country_code"`
	DisplayName  *string `json:"display_name"`
	EmailReplyTo *string `json:"email_reply_to"`

	// Logo Base64 encoded file attachment
	Logo                 *string `json:"logo,omitempty"`
	LogoHeight           *int    `json:"logo_height,omitempty"`
	PostCode             *string `json:"post_code"`
	RemoveLogo           *bool   `json:"remove_logo,omitempty"`
	ShowInOnlineBookings *bool   `json:"show_in_online_bookings"`
	State                *string `json:"state"`

	// TimeZone See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)
	TimeZone *string `json:"time_zone"`

	// TimeZoneIdentifier See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZoneIdentifier *string `json:"time_zone_identifier"`
	WebsiteAddress     *string `json:"website_address"`
}

// ListCommunicationsGetParams defines parameters for ListCommunicationsGet.
type ListCommunicationsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                             `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListCommunicationsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | category_code | [integer](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListCommunicationsGetParamsOrder defines parameters for ListCommunicationsGet.
type ListCommunicationsGetParamsOrder string

// GetCommunicationGetParams defines parameters for GetCommunicationGet.
type GetCommunicationGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListConcessionPricesGetParams defines parameters for ListConcessionPricesGet.
type ListConcessionPricesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                               `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListConcessionPricesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | billable_item_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | concession_type_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | price | [float](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListConcessionPricesGetParamsOrder defines parameters for ListConcessionPricesGet.
type ListConcessionPricesGetParamsOrder string

// ListConcessionTypesGetParams defines parameters for ListConcessionTypesGet.
type ListConcessionTypesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                              `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListConcessionTypesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListConcessionTypesGetParamsOrder defines parameters for ListConcessionTypesGet.
type ListConcessionTypesGetParamsOrder string

// CreateConcessionTypePostJSONBody defines parameters for CreateConcessionTypePost.
type CreateConcessionTypePostJSONBody struct {
	Name *string `json:"name,omitempty"`
}

// UpdateConcessionTypePatchJSONBody defines parameters for UpdateConcessionTypePatch.
type UpdateConcessionTypePatchJSONBody struct {
	Name *string `json:"name,omitempty"`
}

// ListContactsGetParams defines parameters for ListContactsGet.
type ListContactsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListContactsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | email | [string](/developer-portal/#string-filter-operators) |
	// | first_name | [string](/developer-portal/#string-filter-operators) |
	// | last_name | [string](/developer-portal/#string-filter-operators) |
	// | type_code | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListContactsGetParamsOrder defines parameters for ListContactsGet.
type ListContactsGetParamsOrder string

// CreateContactPostJSONBody defines parameters for CreateContactPost.
type CreateContactPostJSONBody struct {
	Address1    *string `json:"address_1"`
	Address2    *string `json:"address_2"`
	Address3    *string `json:"address_3"`
	City        *string `json:"city"`
	CompanyName *string `json:"company_name"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string                              `json:"country_code"`
	DoctorType   *CreateContactPostJSONBodyDoctorType `json:"doctor_type"`
	Email        *string                              `json:"email"`
	FirstName    *string                              `json:"first_name"`
	LastName     *string                              `json:"last_name"`
	Notes        *string                              `json:"notes"`
	Occupation   *string                              `json:"occupation"`
	PhoneNumbers *[]struct {
		Number    *string                                         `json:"number,omitempty"`
		PhoneType *CreateContactPostJSONBodyPhoneNumbersPhoneType `json:"phone_type,omitempty"`
	} `json:"phone_numbers,omitempty"`
	PostCode       *string                            `json:"post_code"`
	PreferredName  *string                            `json:"preferred_name"`
	ProviderNumber *string                            `json:"provider_number"`
	State          *string                            `json:"state"`
	Title          *string                            `json:"title"`
	TypeCode       *CreateContactPostJSONBodyTypeCode `json:"type_code"`
}

// CreateContactPostJSONBodyDoctorType defines parameters for CreateContactPost.
type CreateContactPostJSONBodyDoctorType string

// CreateContactPostJSONBodyPhoneNumbersPhoneType defines parameters for CreateContactPost.
type CreateContactPostJSONBodyPhoneNumbersPhoneType string

// CreateContactPostJSONBodyTypeCode defines parameters for CreateContactPost.
type CreateContactPostJSONBodyTypeCode int

// GetContactGetParams defines parameters for GetContactGet.
type GetContactGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateContactPatchJSONBody defines parameters for UpdateContactPatch.
type UpdateContactPatchJSONBody struct {
	Address1    *string `json:"address_1"`
	Address2    *string `json:"address_2"`
	Address3    *string `json:"address_3"`
	City        *string `json:"city"`
	CompanyName *string `json:"company_name"`

	// CountryCode [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code
	CountryCode  *string                               `json:"country_code"`
	DoctorType   *UpdateContactPatchJSONBodyDoctorType `json:"doctor_type"`
	Email        *string                               `json:"email"`
	FirstName    *string                               `json:"first_name"`
	LastName     *string                               `json:"last_name"`
	Notes        *string                               `json:"notes"`
	Occupation   *string                               `json:"occupation"`
	PhoneNumbers *[]struct {
		Number    *string                                          `json:"number,omitempty"`
		PhoneType *UpdateContactPatchJSONBodyPhoneNumbersPhoneType `json:"phone_type,omitempty"`
	} `json:"phone_numbers,omitempty"`
	PostCode       *string                             `json:"post_code"`
	PreferredName  *string                             `json:"preferred_name"`
	ProviderNumber *string                             `json:"provider_number"`
	State          *string                             `json:"state"`
	Title          *string                             `json:"title"`
	TypeCode       *UpdateContactPatchJSONBodyTypeCode `json:"type_code"`
}

// UpdateContactPatchJSONBodyDoctorType defines parameters for UpdateContactPatch.
type UpdateContactPatchJSONBodyDoctorType string

// UpdateContactPatchJSONBodyPhoneNumbersPhoneType defines parameters for UpdateContactPatch.
type UpdateContactPatchJSONBodyPhoneNumbersPhoneType string

// UpdateContactPatchJSONBodyTypeCode defines parameters for UpdateContactPatch.
type UpdateContactPatchJSONBodyTypeCode int

// ListDailyAvailabilitiesGetParams defines parameters for ListDailyAvailabilitiesGet.
type ListDailyAvailabilitiesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                  `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListDailyAvailabilitiesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListDailyAvailabilitiesGetParamsOrder defines parameters for ListDailyAvailabilitiesGet.
type ListDailyAvailabilitiesGetParamsOrder string

// ListGroupAppointmentsGetParams defines parameters for ListGroupAppointmentsGet.
type ListGroupAppointmentsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListGroupAppointmentsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_type_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | ends_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_ids | [array](/developer-portal/#array-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | repeated_from_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | starts_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListGroupAppointmentsGetParamsOrder defines parameters for ListGroupAppointmentsGet.
type ListGroupAppointmentsGetParamsOrder string

// CreateGroupAppointmentPostJSONBody defines parameters for CreateGroupAppointmentPost.
type CreateGroupAppointmentPostJSONBody struct {
	// AppointmentTypeId appointment type id
	AppointmentTypeId *string `json:"appointment_type_id,omitempty"`

	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`

	// EndsAt If not provided, this will be based on the duration of the appointment type.
	EndsAt *time.Time `json:"ends_at,omitempty"`

	// MaxAttendees If not provided, this will be based on the max_attendees of the appointment type.
	MaxAttendees *int    `json:"max_attendees,omitempty"`
	Notes        *string `json:"notes"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                    `json:"number_of_repeats"`
		RepeatType        *CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                    `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType defines parameters for CreateGroupAppointmentPost.
type CreateGroupAppointmentPostJSONBodyRepeatRuleRepeatType string

// ListAttendeesForGroupAppointmentGetParams defines parameters for ListAttendeesForGroupAppointmentGet.
type ListAttendeesForGroupAppointmentGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                           `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAttendeesForGroupAppointmentGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | booking_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_case_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAttendeesForGroupAppointmentGetParamsOrder defines parameters for ListAttendeesForGroupAppointmentGet.
type ListAttendeesForGroupAppointmentGetParamsOrder string

// GetGroupAppointmentGetParams defines parameters for GetGroupAppointmentGet.
type GetGroupAppointmentGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateGroupAppointmentPatchJSONBody defines parameters for UpdateGroupAppointmentPatch.
type UpdateGroupAppointmentPatchJSONBody struct {
	// AppointmentTypeId appointment type id
	AppointmentTypeId *string `json:"appointment_type_id,omitempty"`

	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`

	// EndsAt If not provided, this will be based on the duration of the appointment type.
	EndsAt *time.Time `json:"ends_at,omitempty"`

	// MaxAttendees If not provided, this will be based on the max_attendees of the appointment type.
	MaxAttendees *int    `json:"max_attendees,omitempty"`
	Notes        *string `json:"notes"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                     `json:"number_of_repeats"`
		RepeatType        *UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                     `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType defines parameters for UpdateGroupAppointmentPatch.
type UpdateGroupAppointmentPatchJSONBodyRepeatRuleRepeatType string

// ListIndividualAppointmentsGetParams defines parameters for ListIndividualAppointmentsGet.
type ListIndividualAppointmentsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                     `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListIndividualAppointmentsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_type_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | ends_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | repeated_from_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | starts_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListIndividualAppointmentsGetParamsOrder defines parameters for ListIndividualAppointmentsGet.
type ListIndividualAppointmentsGetParamsOrder string

// CreateIndividualAppointmentPostJSONBody defines parameters for CreateIndividualAppointmentPost.
type CreateIndividualAppointmentPostJSONBody struct {
	// AppointmentTypeId appointment type id
	AppointmentTypeId *string `json:"appointment_type_id,omitempty"`

	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`

	// EndsAt If not provided, this will be based on the duration of the appointment type.
	EndsAt *time.Time `json:"ends_at,omitempty"`
	Notes  *string    `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                         `json:"number_of_repeats"`
		RepeatType        *CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                         `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType defines parameters for CreateIndividualAppointmentPost.
type CreateIndividualAppointmentPostJSONBodyRepeatRuleRepeatType string

// GetIndividualAppointmentGetParams defines parameters for GetIndividualAppointmentGet.
type GetIndividualAppointmentGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateIndividualAppointmentPatchJSONBody defines parameters for UpdateIndividualAppointmentPatch.
type UpdateIndividualAppointmentPatchJSONBody struct {
	// AppointmentTypeId appointment type id
	AppointmentTypeId *string `json:"appointment_type_id,omitempty"`

	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`

	// EndsAt If not provided, this will be based on the duration of the appointment type.
	EndsAt *time.Time `json:"ends_at,omitempty"`
	Notes  *string    `json:"notes"`

	// PatientCaseId patient case id
	PatientCaseId *string `json:"patient_case_id,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                          `json:"number_of_repeats"`
		RepeatType        *UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                          `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType defines parameters for UpdateIndividualAppointmentPatch.
type UpdateIndividualAppointmentPatchJSONBodyRepeatRuleRepeatType string

// CancelIndividualAppointmentPatchJSONBody defines parameters for CancelIndividualAppointmentPatch.
type CancelIndividualAppointmentPatchJSONBody struct {
	ApplyToRepeats   *bool   `json:"apply_to_repeats,omitempty"`
	CancellationNote *string `json:"cancellation_note"`

	// CancellationReason | Enum Value | Description |
	// |---|---|
	// |10|Feeling better|
	// |20|Condition worse|
	// |30|Sick|
	// |31|COVID-19 related|
	// |40|Away|
	// |50|Other|
	// |60|Work|
	CancellationReason *CancelIndividualAppointmentPatchJSONBodyCancellationReason `json:"cancellation_reason,omitempty"`
}

// CancelIndividualAppointmentPatchJSONBodyCancellationReason defines parameters for CancelIndividualAppointmentPatch.
type CancelIndividualAppointmentPatchJSONBodyCancellationReason int

// ListAttendeesForIndividualAppointmentGetParams defines parameters for ListAttendeesForIndividualAppointmentGet.
type ListAttendeesForIndividualAppointmentGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                                `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAttendeesForIndividualAppointmentGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | booking_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_case_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAttendeesForIndividualAppointmentGetParamsOrder defines parameters for ListAttendeesForIndividualAppointmentGet.
type ListAttendeesForIndividualAppointmentGetParamsOrder string

// ListInvoiceItemsGetParams defines parameters for ListInvoiceItemsGet.
type ListInvoiceItemsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                           `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoiceItemsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | invoice_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoiceItemsGetParamsOrder defines parameters for ListInvoiceItemsGet.
type ListInvoiceItemsGetParamsOrder string

// GetInvoiceItemGetParams defines parameters for GetInvoiceItemGet.
type GetInvoiceItemGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesGetParams defines parameters for ListInvoicesGet.
type ListInvoicesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoicesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | issue_date | [date](/developer-portal/#date-filter-operators) |
	// | number | [integer](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | status | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesGetParamsOrder defines parameters for ListInvoicesGet.
type ListInvoicesGetParamsOrder string

// GetInvoiceGetParams defines parameters for GetInvoiceGet.
type GetInvoiceGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoiceItemsForInvoiceGetParams defines parameters for ListInvoiceItemsForInvoiceGet.
type ListInvoiceItemsForInvoiceGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                     `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoiceItemsForInvoiceGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoiceItemsForInvoiceGetParamsOrder defines parameters for ListInvoiceItemsForInvoiceGet.
type ListInvoiceItemsForInvoiceGetParamsOrder string

// ListMedicalAlertsGetParams defines parameters for ListMedicalAlertsGet.
type ListMedicalAlertsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                            `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListMedicalAlertsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListMedicalAlertsGetParamsOrder defines parameters for ListMedicalAlertsGet.
type ListMedicalAlertsGetParamsOrder string

// CreateMedicalAlertPostJSONBody defines parameters for CreateMedicalAlertPost.
type CreateMedicalAlertPostJSONBody struct {
	Name *string `json:"name,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
}

// GetMedicalAlertGetParams defines parameters for GetMedicalAlertGet.
type GetMedicalAlertGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateMedicalAlertPatchJSONBody defines parameters for UpdateMedicalAlertPatch.
type UpdateMedicalAlertPatchJSONBody struct {
	Name *string `json:"name,omitempty"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
}

// ListPatientAttachmentsGetParams defines parameters for ListPatientAttachmentsGet.
type ListPatientAttachmentsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                 `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientAttachmentsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | content_type | [string](/developer-portal/#string-filter-operators) |
	// | description | [string](/developer-portal/#string-filter-operators) |
	// | filename | [string](/developer-portal/#string-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | processed_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | size | [integer](/developer-portal/#numeric-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientAttachmentsGetParamsOrder defines parameters for ListPatientAttachmentsGet.
type ListPatientAttachmentsGetParamsOrder string

// CreateUploadedPatientAttachmentPostJSONBody defines parameters for CreateUploadedPatientAttachmentPost.
type CreateUploadedPatientAttachmentPostJSONBody struct {
	Description *string `json:"description"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`

	// UploadUrl Must be a presigned URL returned by the [presigned URL upload process](/developer-portal/guides/uploading_patient_attachments/)
	UploadUrl *string `json:"upload_url,omitempty"`
}

// GetPatientAttachmentGetParams defines parameters for GetPatientAttachmentGet.
type GetPatientAttachmentGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientCasesGetParams defines parameters for ListPatientCasesGet.
type ListPatientCasesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                           `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientCasesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | expiry_date | [date](/developer-portal/#date-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientCasesGetParamsOrder defines parameters for ListPatientCasesGet.
type ListPatientCasesGetParamsOrder string

// CreatePatientCasePostJSONBody defines parameters for CreatePatientCasePost.
type CreatePatientCasePostJSONBody struct {
	AttendeeIds *[]string `json:"attendee_ids"`
	Closed      *bool     `json:"closed"`

	// ContactId contact id
	ContactId                 *string             `json:"contact_id,omitempty"`
	ExpiryDate                *openapi_types.Date `json:"expiry_date"`
	IncludeCancelledAttendees *bool               `json:"include_cancelled_attendees"`
	IncludeDnaAttendees       *bool               `json:"include_dna_attendees"`
	IssueDate                 *openapi_types.Date `json:"issue_date"`
	MaxInvoiceableAmount      *string             `json:"max_invoiceable_amount"`
	MaxSessions               *int                `json:"max_sessions"`
	Name                      *string             `json:"name,omitempty"`
	Notes                     *string             `json:"notes"`

	// PatientAttachmentIds Patient attachment ids
	PatientAttachmentIds *[]string `json:"patient_attachment_ids,omitempty"`

	// PatientId patient id
	PatientId    *string                                    `json:"patient_id,omitempty"`
	Referral     *bool                                      `json:"referral"`
	ReferralType *CreatePatientCasePostJSONBodyReferralType `json:"referral_type"`
}

// CreatePatientCasePostJSONBodyReferralType defines parameters for CreatePatientCasePost.
type CreatePatientCasePostJSONBodyReferralType string

// ListActivePatientCasesGetParams defines parameters for ListActivePatientCasesGet.
type ListActivePatientCasesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                 `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListActivePatientCasesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | expiry_date | [date](/developer-portal/#date-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListActivePatientCasesGetParamsOrder defines parameters for ListActivePatientCasesGet.
type ListActivePatientCasesGetParamsOrder string

// GetPatientCaseGetParams defines parameters for GetPatientCaseGet.
type GetPatientCaseGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdatePatientCasePatchJSONBody defines parameters for UpdatePatientCasePatch.
type UpdatePatientCasePatchJSONBody struct {
	AttendeeIds *[]string `json:"attendee_ids"`
	Closed      *bool     `json:"closed"`

	// ContactId contact id
	ContactId                 *string             `json:"contact_id,omitempty"`
	ExpiryDate                *openapi_types.Date `json:"expiry_date"`
	IncludeCancelledAttendees *bool               `json:"include_cancelled_attendees"`
	IncludeDnaAttendees       *bool               `json:"include_dna_attendees"`
	IssueDate                 *openapi_types.Date `json:"issue_date"`
	MaxInvoiceableAmount      *string             `json:"max_invoiceable_amount"`
	MaxSessions               *int                `json:"max_sessions"`
	Name                      *string             `json:"name,omitempty"`
	Notes                     *string             `json:"notes"`

	// PatientAttachmentIds Patient attachment ids
	PatientAttachmentIds *[]string `json:"patient_attachment_ids,omitempty"`

	// PatientId patient id
	PatientId    *string                                     `json:"patient_id,omitempty"`
	Referral     *bool                                       `json:"referral"`
	ReferralType *UpdatePatientCasePatchJSONBodyReferralType `json:"referral_type"`
}

// UpdatePatientCasePatchJSONBodyReferralType defines parameters for UpdatePatientCasePatch.
type UpdatePatientCasePatchJSONBodyReferralType string

// ListAttendeesForPatientCaseGetParams defines parameters for ListAttendeesForPatientCaseGet.
type ListAttendeesForPatientCaseGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                      `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAttendeesForPatientCaseGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | booking_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAttendeesForPatientCaseGetParamsOrder defines parameters for ListAttendeesForPatientCaseGet.
type ListAttendeesForPatientCaseGetParamsOrder string

// ListBookingsForPatientCaseGetParams defines parameters for ListBookingsForPatientCaseGet.
type ListBookingsForPatientCaseGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                     `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListBookingsForPatientCaseGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_type_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | did_not_arrive | [boolean](/developer-portal/#boolean-filter-operators) |
	// | ends_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_ids | [array](/developer-portal/#array-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | repeated_from_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | starts_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListBookingsForPatientCaseGetParamsOrder defines parameters for ListBookingsForPatientCaseGet.
type ListBookingsForPatientCaseGetParamsOrder string

// ListInvoicesForPatientCaseGetParams defines parameters for ListInvoicesForPatientCaseGet.
type ListInvoicesForPatientCaseGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                     `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoicesForPatientCaseGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | issue_date | [date](/developer-portal/#date-filter-operators) |
	// | number | [integer](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | status | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesForPatientCaseGetParamsOrder defines parameters for ListInvoicesForPatientCaseGet.
type ListInvoicesForPatientCaseGetParamsOrder string

// ListPatientAttachmentsForPatientCaseGetParams defines parameters for ListPatientAttachmentsForPatientCaseGet.
type ListPatientAttachmentsForPatientCaseGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                               `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientAttachmentsForPatientCaseGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | content_type | [string](/developer-portal/#string-filter-operators) |
	// | description | [string](/developer-portal/#string-filter-operators) |
	// | filename | [string](/developer-portal/#string-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | processed_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | size | [integer](/developer-portal/#numeric-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientAttachmentsForPatientCaseGetParamsOrder defines parameters for ListPatientAttachmentsForPatientCaseGet.
type ListPatientAttachmentsForPatientCaseGetParamsOrder string

// ListPatientFormTemplatesGetParams defines parameters for ListPatientFormTemplatesGet.
type ListPatientFormTemplatesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                   `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientFormTemplatesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientFormTemplatesGetParamsOrder defines parameters for ListPatientFormTemplatesGet.
type ListPatientFormTemplatesGetParamsOrder string

// CreatePatientFormTemplatePostJSONBody defines parameters for CreatePatientFormTemplatePost.
type CreatePatientFormTemplatePostJSONBody struct {
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Required *bool                                                              `json:"required,omitempty"`
				Type     *CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	EmailToPatientOnCompletion *bool   `json:"email_to_patient_on_completion"`
	Name                       *string `json:"name,omitempty"`
	RestrictedToPractitioner   *bool   `json:"restricted_to_practitioner"`
}

// CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType defines parameters for CreatePatientFormTemplatePost.
type CreatePatientFormTemplatePostJSONBodyContentSectionsQuestionsType string

// GetPatientFormTemplateGetParams defines parameters for GetPatientFormTemplateGet.
type GetPatientFormTemplateGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdatePatientFormTemplatePatchJSONBody defines parameters for UpdatePatientFormTemplatePatch.
type UpdatePatientFormTemplatePatchJSONBody struct {
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Required *bool                                                               `json:"required,omitempty"`
				Type     *UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	EmailToPatientOnCompletion *bool   `json:"email_to_patient_on_completion"`
	Name                       *string `json:"name,omitempty"`
	RestrictedToPractitioner   *bool   `json:"restricted_to_practitioner"`
}

// UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType defines parameters for UpdatePatientFormTemplatePatch.
type UpdatePatientFormTemplatePatchJSONBodyContentSectionsQuestionsType string

// ListPatientFormsGetParams defines parameters for ListPatientFormsGet.
type ListPatientFormsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                           `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientFormsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | attendee_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | completed_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientFormsGetParamsOrder defines parameters for ListPatientFormsGet.
type ListPatientFormsGetParamsOrder string

// CreatePatientFormPostJSONBody defines parameters for CreatePatientFormPost.
type CreatePatientFormPostJSONBody struct {
	// AttendeeId attendee id
	AttendeeId *string `json:"attendee_id,omitempty"`
	Completed  *bool   `json:"completed,omitempty"`
	Content    *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Required    *bool                                                      `json:"required,omitempty"`
				SignatureId *string                                                    `json:"signature_id,omitempty"`
				Type        *CreatePatientFormPostJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	EmailToPatientOnCompletion *bool   `json:"email_to_patient_on_completion"`
	Name                       *string `json:"name,omitempty"`
	PatientFormTemplateId      *string `json:"patient_form_template_id,omitempty"`

	// PatientId patient id
	PatientId                *string `json:"patient_id,omitempty"`
	RestrictedToPractitioner *bool   `json:"restricted_to_practitioner"`
}

// CreatePatientFormPostJSONBodyContentSectionsQuestionsType defines parameters for CreatePatientFormPost.
type CreatePatientFormPostJSONBodyContentSectionsQuestionsType string

// UpdatePatientFormPatchJSONBody defines parameters for UpdatePatientFormPatch.
type UpdatePatientFormPatchJSONBody struct {
	// AttendeeId attendee id
	AttendeeId *string `json:"attendee_id,omitempty"`
	Completed  *bool   `json:"completed,omitempty"`
	Content    *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Required    *bool                                                       `json:"required,omitempty"`
				SignatureId *string                                                     `json:"signature_id,omitempty"`
				Type        *UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	EmailToPatientOnCompletion *bool   `json:"email_to_patient_on_completion"`
	Name                       *string `json:"name,omitempty"`
	PatientFormTemplateId      *string `json:"patient_form_template_id,omitempty"`

	// PatientId patient id
	PatientId                *string `json:"patient_id,omitempty"`
	RestrictedToPractitioner *bool   `json:"restricted_to_practitioner"`
}

// UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType defines parameters for UpdatePatientFormPatch.
type UpdatePatientFormPatchJSONBodyContentSectionsQuestionsType string

// ListPatientsGetParams defines parameters for ListPatientsGet.
type ListPatientsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | date_of_birth | [date](/developer-portal/#date-filter-operators) |
	// | email | [string](/developer-portal/#string-filter-operators) |
	// | first_name | [string](/developer-portal/#string-filter-operators) |
	// | last_name | [string](/developer-portal/#string-filter-operators) |
	// | old_reference_id | [string](/developer-portal/#string-filter-operators) |
	// | preferred_first_name | [string](/developer-portal/#string-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientsGetParamsOrder defines parameters for ListPatientsGet.
type ListPatientsGetParamsOrder string

// CreatePatientPostJSONBody defines parameters for CreatePatientPost.
type CreatePatientPostJSONBody struct {
	AcceptedEmailMarketing *bool   `json:"accepted_email_marketing"`
	AcceptedPrivacyPolicy  *bool   `json:"accepted_privacy_policy"`
	Address1               *string `json:"address_1"`
	Address2               *string `json:"address_2"`
	Address3               *string `json:"address_3"`
	AppointmentNotes       *string `json:"appointment_notes"`
	City                   *string `json:"city"`

	// ConcessionTypeId concession type id
	ConcessionTypeId *string `json:"concession_type_id,omitempty"`
	Country          *string `json:"country"`
	CustomFields     *struct {
		Sections *[]struct {
			Archived *bool `json:"archived"`
			Fields   []struct {
				Archived *bool   `json:"archived"`
				Name     *string `json:"name"`
				Options  *[]struct {
					Archived *bool              `json:"archived"`
					Name     *string            `json:"name"`
					Selected *bool              `json:"selected,omitempty"`
					Token    openapi_types.UUID `json:"token"`
				} `json:"options,omitempty"`
				Other *struct {
					Archived *bool   `json:"archived"`
					Enabled  *bool   `json:"enabled"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Token openapi_types.UUID `json:"token"`
				Type  *string            `json:"type"`
				Value *string            `json:"value,omitempty"`
			} `json:"fields"`
			Name  *string            `json:"name"`
			Token openapi_types.UUID `json:"token"`
		} `json:"sections,omitempty"`
	} `json:"custom_fields"`
	DateOfBirth             *openapi_types.Date `json:"date_of_birth"`
	DvaCardNumber           *string             `json:"dva_card_number"`
	Email                   *string             `json:"email"`
	EmergencyContact        *string             `json:"emergency_contact"`
	FirstName               *string             `json:"first_name,omitempty"`
	GenderIdentity          *string             `json:"gender_identity"`
	InvoiceDefaultTo        *string             `json:"invoice_default_to"`
	InvoiceEmail            *string             `json:"invoice_email"`
	InvoiceExtraInformation *string             `json:"invoice_extra_information"`
	LastName                *string             `json:"last_name,omitempty"`
	Medicare                *string             `json:"medicare"`
	MedicareReferenceNumber *string             `json:"medicare_reference_number"`
	Notes                   *string             `json:"notes"`
	Occupation              *string             `json:"occupation"`
	OldReferenceId          *string             `json:"old_reference_id"`
	PatientPhoneNumbers     *[]struct {
		Number    *string                                                `json:"number,omitempty"`
		PhoneType *CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType `json:"phone_type,omitempty"`
	} `json:"patient_phone_numbers,omitempty"`
	PostCode           *string `json:"post_code"`
	PreferredFirstName *string `json:"preferred_first_name"`
	Pronouns           *struct {
		Accusative            string `json:"accusative"`
		Nominative            string `json:"nominative"`
		PredicativePossessive string `json:"predicative_possessive"`
		PronominalPossessive  string `json:"pronominal_possessive"`
		Reflexive             string `json:"reflexive"`
	} `json:"pronouns"`
	ReceivesConfirmationEmails *bool   `json:"receives_confirmation_emails"`
	ReferralSource             *string `json:"referral_source"`

	// ReferringDoctorId contact id
	ReferringDoctorId *string                                `json:"referring_doctor_id,omitempty"`
	ReminderType      *CreatePatientPostJSONBodyReminderType `json:"reminder_type"`
	Sex               *string                                `json:"sex"`
	State             *string                                `json:"state"`

	// TimeZone See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZone                *string `json:"time_zone"`
	Title                   *string `json:"title"`
	UnsubscribeSmsMarketing *bool   `json:"unsubscribe_sms_marketing,omitempty"`
}

// CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType defines parameters for CreatePatientPost.
type CreatePatientPostJSONBodyPatientPhoneNumbersPhoneType string

// CreatePatientPostJSONBodyReminderType defines parameters for CreatePatientPost.
type CreatePatientPostJSONBodyReminderType string

// GetPatientGetParams defines parameters for GetPatientGet.
type GetPatientGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdatePatientPatchJSONBody defines parameters for UpdatePatientPatch.
type UpdatePatientPatchJSONBody struct {
	AcceptedEmailMarketing *bool   `json:"accepted_email_marketing"`
	AcceptedPrivacyPolicy  *bool   `json:"accepted_privacy_policy"`
	Address1               *string `json:"address_1"`
	Address2               *string `json:"address_2"`
	Address3               *string `json:"address_3"`
	AppointmentNotes       *string `json:"appointment_notes"`
	City                   *string `json:"city"`

	// ConcessionTypeId concession type id
	ConcessionTypeId *string `json:"concession_type_id,omitempty"`
	Country          *string `json:"country"`
	CustomFields     *struct {
		Sections *[]struct {
			Archived *bool `json:"archived"`
			Fields   []struct {
				Archived *bool   `json:"archived"`
				Name     *string `json:"name"`
				Options  *[]struct {
					Archived *bool              `json:"archived"`
					Name     *string            `json:"name"`
					Selected *bool              `json:"selected,omitempty"`
					Token    openapi_types.UUID `json:"token"`
				} `json:"options,omitempty"`
				Other *struct {
					Archived *bool   `json:"archived"`
					Enabled  *bool   `json:"enabled"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Token openapi_types.UUID `json:"token"`
				Type  *string            `json:"type"`
				Value *string            `json:"value,omitempty"`
			} `json:"fields"`
			Name  *string            `json:"name"`
			Token openapi_types.UUID `json:"token"`
		} `json:"sections,omitempty"`
	} `json:"custom_fields"`
	DateOfBirth             *openapi_types.Date `json:"date_of_birth"`
	DvaCardNumber           *string             `json:"dva_card_number"`
	Email                   *string             `json:"email"`
	EmergencyContact        *string             `json:"emergency_contact"`
	FirstName               *string             `json:"first_name,omitempty"`
	GenderIdentity          *string             `json:"gender_identity"`
	InvoiceDefaultTo        *string             `json:"invoice_default_to"`
	InvoiceEmail            *string             `json:"invoice_email"`
	InvoiceExtraInformation *string             `json:"invoice_extra_information"`
	LastName                *string             `json:"last_name,omitempty"`
	Medicare                *string             `json:"medicare"`
	MedicareReferenceNumber *string             `json:"medicare_reference_number"`
	Notes                   *string             `json:"notes"`
	Occupation              *string             `json:"occupation"`
	OldReferenceId          *string             `json:"old_reference_id"`
	PatientPhoneNumbers     *[]struct {
		Number    *string                                                 `json:"number,omitempty"`
		PhoneType *UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType `json:"phone_type,omitempty"`
	} `json:"patient_phone_numbers,omitempty"`
	PostCode           *string `json:"post_code"`
	PreferredFirstName *string `json:"preferred_first_name"`
	Pronouns           *struct {
		Accusative            string `json:"accusative"`
		Nominative            string `json:"nominative"`
		PredicativePossessive string `json:"predicative_possessive"`
		PronominalPossessive  string `json:"pronominal_possessive"`
		Reflexive             string `json:"reflexive"`
	} `json:"pronouns"`
	ReceivesConfirmationEmails *bool   `json:"receives_confirmation_emails"`
	ReferralSource             *string `json:"referral_source"`

	// ReferringDoctorId contact id
	ReferringDoctorId *string                                 `json:"referring_doctor_id,omitempty"`
	ReminderType      *UpdatePatientPatchJSONBodyReminderType `json:"reminder_type"`
	Sex               *string                                 `json:"sex"`
	State             *string                                 `json:"state"`

	// TimeZone See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)
	TimeZone                *string `json:"time_zone"`
	Title                   *string `json:"title"`
	UnsubscribeSmsMarketing *bool   `json:"unsubscribe_sms_marketing,omitempty"`
}

// UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType defines parameters for UpdatePatientPatch.
type UpdatePatientPatchJSONBodyPatientPhoneNumbersPhoneType string

// UpdatePatientPatchJSONBodyReminderType defines parameters for UpdatePatientPatch.
type UpdatePatientPatchJSONBodyReminderType string

// ListInvoicesForPatientGetParams defines parameters for ListInvoicesForPatientGet.
type ListInvoicesForPatientGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                 `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoicesForPatientGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | issue_date | [date](/developer-portal/#date-filter-operators) |
	// | number | [integer](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | status | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesForPatientGetParamsOrder defines parameters for ListInvoicesForPatientGet.
type ListInvoicesForPatientGetParamsOrder string

// ListMedicalAlertsForPatientGetParams defines parameters for ListMedicalAlertsForPatientGet.
type ListMedicalAlertsForPatientGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                      `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListMedicalAlertsForPatientGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListMedicalAlertsForPatientGetParamsOrder defines parameters for ListMedicalAlertsForPatientGet.
type ListMedicalAlertsForPatientGetParamsOrder string

// ListPatientAttachmentsForPatientGetParams defines parameters for ListPatientAttachmentsForPatientGet.
type ListPatientAttachmentsForPatientGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                           `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPatientAttachmentsForPatientGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | content_type | [string](/developer-portal/#string-filter-operators) |
	// | description | [string](/developer-portal/#string-filter-operators) |
	// | filename | [string](/developer-portal/#string-filter-operators) |
	// | processed_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | size | [integer](/developer-portal/#numeric-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPatientAttachmentsForPatientGetParamsOrder defines parameters for ListPatientAttachmentsForPatientGet.
type ListPatientAttachmentsForPatientGetParamsOrder string

// UpdateReferralSourcePatchJSONBody defines parameters for UpdateReferralSourcePatch.
type UpdateReferralSourcePatchJSONBody struct {
	Notes *string `json:"notes"`

	// ReferralSourceTypeId referral source type id
	ReferralSourceTypeId *string `json:"referral_source_type_id,omitempty"`
	ReferrerId           *string `json:"referrer_id,omitempty"`
	Subcategory          *string `json:"subcategory"`
}

// ListTreatmentNotesForPatientGetParams defines parameters for ListTreatmentNotesForPatientGet.
type ListTreatmentNotesForPatientGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListTreatmentNotesForPatientGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | attendee_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | booking_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | draft | [boolean](/developer-portal/#boolean-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | treatment_note_template_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListTreatmentNotesForPatientGetParamsOrder defines parameters for ListTreatmentNotesForPatientGet.
type ListTreatmentNotesForPatientGetParamsOrder string

// ListPractitionerReferenceNumbersGetParams defines parameters for ListPractitionerReferenceNumbersGet.
type ListPractitionerReferenceNumbersGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                           `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPractitionerReferenceNumbersGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | reference_number | [string](/developer-portal/#string-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPractitionerReferenceNumbersGetParamsOrder defines parameters for ListPractitionerReferenceNumbersGet.
type ListPractitionerReferenceNumbersGetParamsOrder string

// CreatePractitionerReferenceNumberPostJSONBody defines parameters for CreatePractitionerReferenceNumberPost.
type CreatePractitionerReferenceNumberPostJSONBody struct {
	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`
	Name       *string `json:"name"`

	// PractitionerId practitioner id
	PractitionerId  *string `json:"practitioner_id,omitempty"`
	ReferenceNumber *string `json:"reference_number"`
}

// UpdatePractitionerReferenceNumberPatchJSONBody defines parameters for UpdatePractitionerReferenceNumberPatch.
type UpdatePractitionerReferenceNumberPatchJSONBody struct {
	// BusinessId business id
	BusinessId *string `json:"business_id,omitempty"`
	Name       *string `json:"name"`

	// PractitionerId practitioner id
	PractitionerId  *string `json:"practitioner_id,omitempty"`
	ReferenceNumber *string `json:"reference_number"`
}

// ListPractitionersGetParams defines parameters for ListPractitionersGet.
type ListPractitionersGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                            `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPractitionersGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPractitionersGetParamsOrder defines parameters for ListPractitionersGet.
type ListPractitionersGetParamsOrder string

// ListInactivePractitionersGetParams defines parameters for ListInactivePractitionersGet.
type ListInactivePractitionersGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                    `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInactivePractitionersGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | user_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInactivePractitionersGetParamsOrder defines parameters for ListInactivePractitionersGet.
type ListInactivePractitionersGetParamsOrder string

// ListAppointmentTypesForPractitionerGetParams defines parameters for ListAppointmentTypesForPractitionerGet.
type ListAppointmentTypesForPractitionerGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                              `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListAppointmentTypesForPractitionerGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | category | [string](/developer-portal/#string-filter-operators) |
	// | online_payments_mode | [string](/developer-portal/#string-filter-operators) |
	// | show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |
	// | appointment_confirmation_template_ids | [array](/developer-portal/#array-filter-operators) |
	// | appointment_reminder_template_ids | [array](/developer-portal/#array-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListAppointmentTypesForPractitionerGetParamsOrder defines parameters for ListAppointmentTypesForPractitionerGet.
type ListAppointmentTypesForPractitionerGetParamsOrder string

// ListDailyAvailabilitiesForPractitionerGetParams defines parameters for ListDailyAvailabilitiesForPractitionerGet.
type ListDailyAvailabilitiesForPractitionerGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                                 `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListDailyAvailabilitiesForPractitionerGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListDailyAvailabilitiesForPractitionerGetParamsOrder defines parameters for ListDailyAvailabilitiesForPractitionerGet.
type ListDailyAvailabilitiesForPractitionerGetParamsOrder string

// ListInvoicesForPractitionerGetParams defines parameters for ListInvoicesForPractitionerGet.
type ListInvoicesForPractitionerGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                      `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListInvoicesForPractitionerGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | appointment_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | issue_date | [date](/developer-portal/#date-filter-operators) |
	// | number | [integer](/developer-portal/#numeric-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | status | [integer](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListInvoicesForPractitionerGetParamsOrder defines parameters for ListInvoicesForPractitionerGet.
type ListInvoicesForPractitionerGetParamsOrder string

// ListPractitionerReferenceNumbersForPractitionerGetParams defines parameters for ListPractitionerReferenceNumbersForPractitionerGet.
type ListPractitionerReferenceNumbersForPractitionerGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                                          `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListPractitionerReferenceNumbersForPractitionerGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | reference_number | [string](/developer-portal/#string-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListPractitionerReferenceNumbersForPractitionerGetParamsOrder defines parameters for ListPractitionerReferenceNumbersForPractitionerGet.
type ListPractitionerReferenceNumbersForPractitionerGetParamsOrder string

// ListProductSuppliersGetParams defines parameters for ListProductSuppliersGet.
type ListProductSuppliersGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                               `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListProductSuppliersGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | name | [string](/developer-portal/#string-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListProductSuppliersGetParamsOrder defines parameters for ListProductSuppliersGet.
type ListProductSuppliersGetParamsOrder string

// CreateProductSupplierPostJSONBody defines parameters for CreateProductSupplierPost.
type CreateProductSupplierPostJSONBody struct {
	Name *string `json:"name,omitempty"`
}

// UpdateProductSupplierPatchJSONBody defines parameters for UpdateProductSupplierPatch.
type UpdateProductSupplierPatchJSONBody struct {
	Name *string `json:"name,omitempty"`
}

// ListProductsGetParams defines parameters for ListProductsGet.
type ListProductsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListProductsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | name | [string](/developer-portal/#string-filter-operators) |
	// | tax_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListProductsGetParamsOrder defines parameters for ListProductsGet.
type ListProductsGetParamsOrder string

// CreateProductPostJSONBody defines parameters for CreateProductPost.
type CreateProductPostJSONBody struct {
	CostPrice           *string  `json:"cost_price"`
	ItemCode            *string  `json:"item_code"`
	Name                *string  `json:"name,omitempty"`
	Notes               *string  `json:"notes"`
	Price               *float32 `json:"price,omitempty"`
	PriceIncludesTax    *bool    `json:"price_includes_tax"`
	ProductSupplierName *string  `json:"product_supplier_name"`
	SerialNumber        *string  `json:"serial_number"`
	StockLevel          *int     `json:"stock_level"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// GetProductGetParams defines parameters for GetProductGet.
type GetProductGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateProductPatchJSONBody defines parameters for UpdateProductPatch.
type UpdateProductPatchJSONBody struct {
	CostPrice           *string  `json:"cost_price"`
	ItemCode            *string  `json:"item_code"`
	Name                *string  `json:"name,omitempty"`
	Notes               *string  `json:"notes"`
	Price               *float32 `json:"price,omitempty"`
	PriceIncludesTax    *bool    `json:"price_includes_tax"`
	ProductSupplierName *string  `json:"product_supplier_name"`
	SerialNumber        *string  `json:"serial_number"`
	StockLevel          *int     `json:"stock_level"`

	// TaxId tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// ListReferralSourceTypesGetParams defines parameters for ListReferralSourceTypesGet.
type ListReferralSourceTypesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                  `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListReferralSourceTypesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListReferralSourceTypesGetParamsOrder defines parameters for ListReferralSourceTypesGet.
type ListReferralSourceTypesGetParamsOrder string

// ListReferralSourcesGetParams defines parameters for ListReferralSourcesGet.
type ListReferralSourcesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                              `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListReferralSourcesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListReferralSourcesGetParamsOrder defines parameters for ListReferralSourcesGet.
type ListReferralSourcesGetParamsOrder string

// ListServicesGetParams defines parameters for ListServicesGet.
type ListServicesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                       `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListServicesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`
}

// ListServicesGetParamsOrder defines parameters for ListServicesGet.
type ListServicesGetParamsOrder string

// ListStockAdjustmentsGetParams defines parameters for ListStockAdjustmentsGet.
type ListStockAdjustmentsGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                               `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListStockAdjustmentsGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | product_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListStockAdjustmentsGetParamsOrder defines parameters for ListStockAdjustmentsGet.
type ListStockAdjustmentsGetParamsOrder string

// CreateStockAdjustmentPostJSONBody defines parameters for CreateStockAdjustmentPost.
type CreateStockAdjustmentPostJSONBody struct {
	// AdjustmentType The reason for modifying the stock level.
	//
	// **Increase types**: `Stock Purchase`, `Returned`, `Other`
	//
	// **Decrease types**: `Damaged`, `Out of Date`, `Item Sold`, `Other`
	AdjustmentType *CreateStockAdjustmentPostJSONBodyAdjustmentType `json:"adjustment_type,omitempty"`
	Comment        *string                                          `json:"comment"`

	// ProductId The existing product you want to adjust the stock level of.
	ProductId *string `json:"product_id,omitempty"`

	// Quantity A negative value is only allowed when a decreasing adjustment type has been selected and vice versa.
	Quantity *int `json:"quantity"`
}

// CreateStockAdjustmentPostJSONBodyAdjustmentType defines parameters for CreateStockAdjustmentPost.
type CreateStockAdjustmentPostJSONBodyAdjustmentType string

// ListTaxesGetParams defines parameters for ListTaxesGet.
type ListTaxesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                    `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListTaxesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListTaxesGetParamsOrder defines parameters for ListTaxesGet.
type ListTaxesGetParamsOrder string

// CreateTaxPostJSONBody defines parameters for CreateTaxPost.
type CreateTaxPostJSONBody struct {
	Amount *float32 `json:"amount,omitempty"`
	Name   *string  `json:"name,omitempty"`
	Rate   *float32 `json:"rate,omitempty"`
}

// UpdateTaxPatchJSONBody defines parameters for UpdateTaxPatch.
type UpdateTaxPatchJSONBody struct {
	Amount *float32 `json:"amount,omitempty"`
	Name   *string  `json:"name,omitempty"`
	Rate   *float32 `json:"rate,omitempty"`
}

// ListTreatmentNoteTemplatesGetParams defines parameters for ListTreatmentNoteTemplatesGet.
type ListTreatmentNoteTemplatesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                     `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListTreatmentNoteTemplatesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListTreatmentNoteTemplatesGetParamsOrder defines parameters for ListTreatmentNoteTemplatesGet.
type ListTreatmentNoteTemplatesGetParamsOrder string

// CreateTreatmentNoteTemplatePostJSONBody defines parameters for CreateTreatmentNoteTemplatePost.
type CreateTreatmentNoteTemplatePostJSONBody struct {
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Type *CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content,omitempty"`
	Name          *string `json:"name,omitempty"`
	PrintSettings *struct {
		IncludePatientAddress         *bool   `json:"include_patient_address,omitempty"`
		IncludePatientDob             *bool   `json:"include_patient_dob,omitempty"`
		IncludePatientMedicare        *bool   `json:"include_patient_medicare,omitempty"`
		IncludePatientOccupation      *bool   `json:"include_patient_occupation,omitempty"`
		IncludePatientReferenceNumber *bool   `json:"include_patient_reference_number,omitempty"`
		Title                         *string `json:"title,omitempty"`
	} `json:"print_settings,omitempty"`
}

// CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType defines parameters for CreateTreatmentNoteTemplatePost.
type CreateTreatmentNoteTemplatePostJSONBodyContentSectionsQuestionsType string

// GetTreatmentNoteTemplateGetParams defines parameters for GetTreatmentNoteTemplateGet.
type GetTreatmentNoteTemplateGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateTreatmentNoteTemplatePatchJSONBody defines parameters for UpdateTreatmentNoteTemplatePatch.
type UpdateTreatmentNoteTemplatePatchJSONBody struct {
	Content *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Value *string `json:"value"`
				} `json:"answers,omitempty"`
				Name  string `json:"name"`
				Other *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"other,omitempty"`
				Type *UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content,omitempty"`
	Name          *string `json:"name,omitempty"`
	PrintSettings *struct {
		IncludePatientAddress         *bool   `json:"include_patient_address,omitempty"`
		IncludePatientDob             *bool   `json:"include_patient_dob,omitempty"`
		IncludePatientMedicare        *bool   `json:"include_patient_medicare,omitempty"`
		IncludePatientOccupation      *bool   `json:"include_patient_occupation,omitempty"`
		IncludePatientReferenceNumber *bool   `json:"include_patient_reference_number,omitempty"`
		Title                         *string `json:"title,omitempty"`
	} `json:"print_settings,omitempty"`
}

// UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType defines parameters for UpdateTreatmentNoteTemplatePatch.
type UpdateTreatmentNoteTemplatePatchJSONBodyContentSectionsQuestionsType string

// ListTreatmentNotesGetParams defines parameters for ListTreatmentNotesGet.
type ListTreatmentNotesGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                             `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListTreatmentNotesGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | attendee_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | booking_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | draft | [boolean](/developer-portal/#boolean-filter-operators) |
	// | patient_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | treatment_note_template_id | [int64](/developer-portal/#numeric-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListTreatmentNotesGetParamsOrder defines parameters for ListTreatmentNotesGet.
type ListTreatmentNotesGetParamsOrder string

type CreateTreatmentNotePostJSONBodyContentSectionAnswerOther struct {
	Enabled  *bool   `json:"enabled,omitempty"`
	Selected *bool   `json:"selected,omitempty"`
	Value    *string `json:"value,omitempty"`
}

type CreateTreatmentNotePostJSONBodyContentSectionAnswerAnswer struct {
	Selected *bool   `json:"selected"`
	Value    *string `json:"value"`
}

type CreateTreatmentNotePostJSONBodyContentSectionAnswer struct {
	Answer  *string `json:"answer,omitempty"`
	Answers *[]CreateTreatmentNotePostJSONBodyContentSectionAnswerAnswer `json:"answers,omitempty"`
	BodyChartIds *[]string `json:"body_chart_ids,omitempty"`
	Name         string    `json:"name"`
	Other        *CreateTreatmentNotePostJSONBodyContentSectionAnswerOther `json:"other,omitempty"`
	Type *CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType `json:"type"`
}

type CreateTreatmentNotePostJSONBodyContentSection struct {
	Description *string `json:"description"`
	Name        *string `json:"name"`
	Questions *[]CreateTreatmentNotePostJSONBodyContentSectionAnswer `json:"questions,omitempty"`
}

type CreateTreatmentNotePostJSONBodyContent struct {
	Sections *[]CreateTreatmentNotePostJSONBodyContentSection `json:"sections,omitempty"`
}

// CreateTreatmentNotePostJSONBody defines parameters for CreateTreatmentNotePost.
type CreateTreatmentNotePostJSONBody struct {
	// AttendeeId attendee id
	AttendeeId *string `json:"attendee_id,omitempty"`

	// BookingId booking id
	BookingId *string `json:"booking_id,omitempty"`
	Content   *CreateTreatmentNotePostJSONBodyContent
	Draft *bool `json:"draft"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
	Title     *string `json:"title,omitempty"`

	// TreatmentNoteTemplateId treatment note template id
	TreatmentNoteTemplateId *string `json:"treatment_note_template_id,omitempty"`
}

// CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType defines parameters for CreateTreatmentNotePost.
type CreateTreatmentNotePostJSONBodyContentSectionsQuestionsType string

// GetTreatmentNoteGetParams defines parameters for GetTreatmentNoteGet.
type GetTreatmentNoteGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateTreatmentNotePatchJSONBody defines parameters for UpdateTreatmentNotePatch.
type UpdateTreatmentNotePatchJSONBody struct {
	// AttendeeId attendee id
	AttendeeId *string `json:"attendee_id,omitempty"`

	// BookingId booking id
	BookingId *string `json:"booking_id,omitempty"`
	Content   *struct {
		Sections *[]struct {
			Description *string `json:"description"`
			Name        *string `json:"name"`
			Questions   *[]struct {
				Answer  *string `json:"answer,omitempty"`
				Answers *[]struct {
					Selected *bool   `json:"selected"`
					Value    *string `json:"value"`
				} `json:"answers,omitempty"`
				BodyChartIds *[]string `json:"body_chart_ids,omitempty"`
				Name         string    `json:"name"`
				Other        *struct {
					Enabled  *bool   `json:"enabled,omitempty"`
					Selected *bool   `json:"selected,omitempty"`
					Value    *string `json:"value,omitempty"`
				} `json:"other,omitempty"`
				Type *UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType `json:"type"`
			} `json:"questions,omitempty"`
		} `json:"sections,omitempty"`
	} `json:"content"`
	Draft *bool `json:"draft"`

	// PatientId patient id
	PatientId *string `json:"patient_id,omitempty"`
	Title     *string `json:"title,omitempty"`

	// TreatmentNoteTemplateId treatment note template id
	TreatmentNoteTemplateId *string `json:"treatment_note_template_id,omitempty"`
}

// UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType defines parameters for UpdateTreatmentNotePatch.
type UpdateTreatmentNotePatchJSONBodyContentSectionsQuestionsType string

// ListUnavailableBlocksGetParams defines parameters for ListUnavailableBlocksGet.
type ListUnavailableBlocksGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                                `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListUnavailableBlocksGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | business_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | ends_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | practitioner_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | repeated_from_id | [int64](/developer-portal/#numeric-filter-operators) |
	// | starts_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListUnavailableBlocksGetParamsOrder defines parameters for ListUnavailableBlocksGet.
type ListUnavailableBlocksGetParamsOrder string

// CreateUnavailableBlockPostJSONBody defines parameters for CreateUnavailableBlockPost.
type CreateUnavailableBlockPostJSONBody struct {
	// BusinessId business id
	BusinessId *string    `json:"business_id,omitempty"`
	EndsAt     *time.Time `json:"ends_at,omitempty"`
	Notes      *string    `json:"notes"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                    `json:"number_of_repeats"`
		RepeatType        *CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                    `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType defines parameters for CreateUnavailableBlockPost.
type CreateUnavailableBlockPostJSONBodyRepeatRuleRepeatType string

// GetUnavailableBlockGetParams defines parameters for GetUnavailableBlockGet.
type GetUnavailableBlockGetParams struct {
	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | archived_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// UpdateUnavailableBlockPatchJSONBody defines parameters for UpdateUnavailableBlockPatch.
type UpdateUnavailableBlockPatchJSONBody struct {
	// BusinessId business id
	BusinessId *string    `json:"business_id,omitempty"`
	EndsAt     *time.Time `json:"ends_at,omitempty"`
	Notes      *string    `json:"notes"`

	// PractitionerId practitioner id
	PractitionerId *string `json:"practitioner_id,omitempty"`
	RepeatRule     *struct {
		NumberOfRepeats   *int                                                     `json:"number_of_repeats"`
		RepeatType        *UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType `json:"repeat_type"`
		RepeatingInterval *int                                                     `json:"repeating_interval"`
	} `json:"repeat_rule"`
	StartsAt *time.Time `json:"starts_at,omitempty"`
}

// UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType defines parameters for UpdateUnavailableBlockPatch.
type UpdateUnavailableBlockPatchJSONBodyRepeatRuleRepeatType string

// ListUsersGetParams defines parameters for ListUsersGet.
type ListUsersGetParams struct {
	Page    *Page    `form:"page,omitempty" json:"page,omitempty"`
	PerPage *PerPage `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Sort Comma separated search fields. See: [Ordering](/developer-portal#ordering)
	Sort  *Sort                    `form:"sort,omitempty" json:"sort,omitempty"`
	Order *ListUsersGetParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Q Filter result by one or more fields.
	//
	// See [Filtering Results](/developer-portal#filtering-results)
	//
	// Available filters:
	//
	// | Value | Format |
	// |---|---|
	// | id | [int64](/developer-portal/#numeric-filter-operators) |
	// | created_at | [date-time](/developer-portal/#datetime-filter-operators) |
	// | updated_at | [date-time](/developer-portal/#datetime-filter-operators) |
	Q *[]string `form:"q[],omitempty" json:"q[],omitempty"`
}

// ListUsersGetParamsOrder defines parameters for ListUsersGet.
type ListUsersGetParamsOrder string

// CreateAppointmentTypePostJSONRequestBody defines body for CreateAppointmentTypePost for application/json ContentType.
type CreateAppointmentTypePostJSONRequestBody CreateAppointmentTypePostJSONBody

// UpdateAppointmentTypePatchJSONRequestBody defines body for UpdateAppointmentTypePatch for application/json ContentType.
type UpdateAppointmentTypePatchJSONRequestBody UpdateAppointmentTypePatchJSONBody

// CreateAttendeePostJSONRequestBody defines body for CreateAttendeePost for application/json ContentType.
type CreateAttendeePostJSONRequestBody CreateAttendeePostJSONBody

// UpdateAttendeePatchJSONRequestBody defines body for UpdateAttendeePatch for application/json ContentType.
type UpdateAttendeePatchJSONRequestBody UpdateAttendeePatchJSONBody

// CancelAttendeePatchJSONRequestBody defines body for CancelAttendeePatch for application/json ContentType.
type CancelAttendeePatchJSONRequestBody CancelAttendeePatchJSONBody

// CreateAvailabilityBlockPostJSONRequestBody defines body for CreateAvailabilityBlockPost for application/json ContentType.
type CreateAvailabilityBlockPostJSONRequestBody CreateAvailabilityBlockPostJSONBody

// CreateBillableItemPostJSONRequestBody defines body for CreateBillableItemPost for application/json ContentType.
type CreateBillableItemPostJSONRequestBody CreateBillableItemPostJSONBody

// UpdateBillableItemPatchJSONRequestBody defines body for UpdateBillableItemPatch for application/json ContentType.
type UpdateBillableItemPatchJSONRequestBody UpdateBillableItemPatchJSONBody

// CreateBusinessPostJSONRequestBody defines body for CreateBusinessPost for application/json ContentType.
type CreateBusinessPostJSONRequestBody CreateBusinessPostJSONBody

// UpdateBusinessPatchJSONRequestBody defines body for UpdateBusinessPatch for application/json ContentType.
type UpdateBusinessPatchJSONRequestBody UpdateBusinessPatchJSONBody

// CreateMemoCommunicationPostJSONRequestBody defines body for CreateMemoCommunicationPost for application/json ContentType.
type CreateMemoCommunicationPostJSONRequestBody = MemoCommunicationBody

// UpdateMemoCommunicationPatchJSONRequestBody defines body for UpdateMemoCommunicationPatch for application/json ContentType.
type UpdateMemoCommunicationPatchJSONRequestBody = MemoCommunicationBody

// CreateConcessionTypePostJSONRequestBody defines body for CreateConcessionTypePost for application/json ContentType.
type CreateConcessionTypePostJSONRequestBody CreateConcessionTypePostJSONBody

// UpdateConcessionTypePatchJSONRequestBody defines body for UpdateConcessionTypePatch for application/json ContentType.
type UpdateConcessionTypePatchJSONRequestBody UpdateConcessionTypePatchJSONBody

// CreateContactPostJSONRequestBody defines body for CreateContactPost for application/json ContentType.
type CreateContactPostJSONRequestBody CreateContactPostJSONBody

// UpdateContactPatchJSONRequestBody defines body for UpdateContactPatch for application/json ContentType.
type UpdateContactPatchJSONRequestBody UpdateContactPatchJSONBody

// CreateGroupAppointmentPostJSONRequestBody defines body for CreateGroupAppointmentPost for application/json ContentType.
type CreateGroupAppointmentPostJSONRequestBody CreateGroupAppointmentPostJSONBody

// UpdateGroupAppointmentPatchJSONRequestBody defines body for UpdateGroupAppointmentPatch for application/json ContentType.
type UpdateGroupAppointmentPatchJSONRequestBody UpdateGroupAppointmentPatchJSONBody

// CreateIndividualAppointmentPostJSONRequestBody defines body for CreateIndividualAppointmentPost for application/json ContentType.
type CreateIndividualAppointmentPostJSONRequestBody CreateIndividualAppointmentPostJSONBody

// UpdateIndividualAppointmentPatchJSONRequestBody defines body for UpdateIndividualAppointmentPatch for application/json ContentType.
type UpdateIndividualAppointmentPatchJSONRequestBody UpdateIndividualAppointmentPatchJSONBody

// CancelIndividualAppointmentPatchJSONRequestBody defines body for CancelIndividualAppointmentPatch for application/json ContentType.
type CancelIndividualAppointmentPatchJSONRequestBody CancelIndividualAppointmentPatchJSONBody

// CreateMedicalAlertPostJSONRequestBody defines body for CreateMedicalAlertPost for application/json ContentType.
type CreateMedicalAlertPostJSONRequestBody CreateMedicalAlertPostJSONBody

// UpdateMedicalAlertPatchJSONRequestBody defines body for UpdateMedicalAlertPatch for application/json ContentType.
type UpdateMedicalAlertPatchJSONRequestBody UpdateMedicalAlertPatchJSONBody

// CreateUploadedPatientAttachmentPostJSONRequestBody defines body for CreateUploadedPatientAttachmentPost for application/json ContentType.
type CreateUploadedPatientAttachmentPostJSONRequestBody CreateUploadedPatientAttachmentPostJSONBody

// CreatePatientCasePostJSONRequestBody defines body for CreatePatientCasePost for application/json ContentType.
type CreatePatientCasePostJSONRequestBody CreatePatientCasePostJSONBody

// UpdatePatientCasePatchJSONRequestBody defines body for UpdatePatientCasePatch for application/json ContentType.
type UpdatePatientCasePatchJSONRequestBody UpdatePatientCasePatchJSONBody

// CreatePatientFormTemplatePostJSONRequestBody defines body for CreatePatientFormTemplatePost for application/json ContentType.
type CreatePatientFormTemplatePostJSONRequestBody CreatePatientFormTemplatePostJSONBody

// UpdatePatientFormTemplatePatchJSONRequestBody defines body for UpdatePatientFormTemplatePatch for application/json ContentType.
type UpdatePatientFormTemplatePatchJSONRequestBody UpdatePatientFormTemplatePatchJSONBody

// CreatePatientFormPostJSONRequestBody defines body for CreatePatientFormPost for application/json ContentType.
type CreatePatientFormPostJSONRequestBody CreatePatientFormPostJSONBody

// UpdatePatientFormPatchJSONRequestBody defines body for UpdatePatientFormPatch for application/json ContentType.
type UpdatePatientFormPatchJSONRequestBody UpdatePatientFormPatchJSONBody

// CreatePatientPostJSONRequestBody defines body for CreatePatientPost for application/json ContentType.
type CreatePatientPostJSONRequestBody CreatePatientPostJSONBody

// UpdatePatientPatchJSONRequestBody defines body for UpdatePatientPatch for application/json ContentType.
type UpdatePatientPatchJSONRequestBody UpdatePatientPatchJSONBody

// UpdateReferralSourcePatchJSONRequestBody defines body for UpdateReferralSourcePatch for application/json ContentType.
type UpdateReferralSourcePatchJSONRequestBody UpdateReferralSourcePatchJSONBody

// CreatePractitionerReferenceNumberPostJSONRequestBody defines body for CreatePractitionerReferenceNumberPost for application/json ContentType.
type CreatePractitionerReferenceNumberPostJSONRequestBody CreatePractitionerReferenceNumberPostJSONBody

// UpdatePractitionerReferenceNumberPatchJSONRequestBody defines body for UpdatePractitionerReferenceNumberPatch for application/json ContentType.
type UpdatePractitionerReferenceNumberPatchJSONRequestBody UpdatePractitionerReferenceNumberPatchJSONBody

// CreateProductSupplierPostJSONRequestBody defines body for CreateProductSupplierPost for application/json ContentType.
type CreateProductSupplierPostJSONRequestBody CreateProductSupplierPostJSONBody

// UpdateProductSupplierPatchJSONRequestBody defines body for UpdateProductSupplierPatch for application/json ContentType.
type UpdateProductSupplierPatchJSONRequestBody UpdateProductSupplierPatchJSONBody

// CreateProductPostJSONRequestBody defines body for CreateProductPost for application/json ContentType.
type CreateProductPostJSONRequestBody CreateProductPostJSONBody

// UpdateProductPatchJSONRequestBody defines body for UpdateProductPatch for application/json ContentType.
type UpdateProductPatchJSONRequestBody UpdateProductPatchJSONBody

// CreateStockAdjustmentPostJSONRequestBody defines body for CreateStockAdjustmentPost for application/json ContentType.
type CreateStockAdjustmentPostJSONRequestBody CreateStockAdjustmentPostJSONBody

// CreateTaxPostJSONRequestBody defines body for CreateTaxPost for application/json ContentType.
type CreateTaxPostJSONRequestBody CreateTaxPostJSONBody

// UpdateTaxPatchJSONRequestBody defines body for UpdateTaxPatch for application/json ContentType.
type UpdateTaxPatchJSONRequestBody UpdateTaxPatchJSONBody

// CreateTreatmentNoteTemplatePostJSONRequestBody defines body for CreateTreatmentNoteTemplatePost for application/json ContentType.
type CreateTreatmentNoteTemplatePostJSONRequestBody CreateTreatmentNoteTemplatePostJSONBody

// UpdateTreatmentNoteTemplatePatchJSONRequestBody defines body for UpdateTreatmentNoteTemplatePatch for application/json ContentType.
type UpdateTreatmentNoteTemplatePatchJSONRequestBody UpdateTreatmentNoteTemplatePatchJSONBody

// CreateTreatmentNotePostJSONRequestBody defines body for CreateTreatmentNotePost for application/json ContentType.
type CreateTreatmentNotePostJSONRequestBody CreateTreatmentNotePostJSONBody

// UpdateTreatmentNotePatchJSONRequestBody defines body for UpdateTreatmentNotePatch for application/json ContentType.
type UpdateTreatmentNotePatchJSONRequestBody UpdateTreatmentNotePatchJSONBody

// CreateUnavailableBlockPostJSONRequestBody defines body for CreateUnavailableBlockPost for application/json ContentType.
type CreateUnavailableBlockPostJSONRequestBody CreateUnavailableBlockPostJSONBody

// UpdateUnavailableBlockPatchJSONRequestBody defines body for UpdateUnavailableBlockPatch for application/json ContentType.
type UpdateUnavailableBlockPatchJSONRequestBody UpdateUnavailableBlockPatchJSONBody

// AsGroupAppointment returns the union data inside the Booking as a GroupAppointment
func (t Booking) AsGroupAppointment() (GroupAppointment, error) {
	var body GroupAppointment
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGroupAppointment overwrites any union data inside the Booking as the provided GroupAppointment
func (t *Booking) FromGroupAppointment(v GroupAppointment) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGroupAppointment performs a merge with any union data inside the Booking, using the provided GroupAppointment
func (t *Booking) MergeGroupAppointment(v GroupAppointment) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsIndividualAppointment returns the union data inside the Booking as a IndividualAppointment
func (t Booking) AsIndividualAppointment() (IndividualAppointment, error) {
	var body IndividualAppointment
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromIndividualAppointment overwrites any union data inside the Booking as the provided IndividualAppointment
func (t *Booking) FromIndividualAppointment(v IndividualAppointment) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeIndividualAppointment performs a merge with any union data inside the Booking, using the provided IndividualAppointment
func (t *Booking) MergeIndividualAppointment(v IndividualAppointment) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsUnavailableBlock returns the union data inside the Booking as a UnavailableBlock
func (t Booking) AsUnavailableBlock() (UnavailableBlock, error) {
	var body UnavailableBlock
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUnavailableBlock overwrites any union data inside the Booking as the provided UnavailableBlock
func (t *Booking) FromUnavailableBlock(v UnavailableBlock) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUnavailableBlock performs a merge with any union data inside the Booking, using the provided UnavailableBlock
func (t *Booking) MergeUnavailableBlock(v UnavailableBlock) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t Booking) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Booking) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsMemoCommunication returns the union data inside the Communication as a MemoCommunication
func (t Communication) AsMemoCommunication() (MemoCommunication, error) {
	var body MemoCommunication
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMemoCommunication overwrites any union data inside the Communication as the provided MemoCommunication
func (t *Communication) FromMemoCommunication(v MemoCommunication) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMemoCommunication performs a merge with any union data inside the Communication, using the provided MemoCommunication
func (t *Communication) MergeMemoCommunication(v MemoCommunication) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsEmailCommunication returns the union data inside the Communication as a EmailCommunication
func (t Communication) AsEmailCommunication() (EmailCommunication, error) {
	var body EmailCommunication
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEmailCommunication overwrites any union data inside the Communication as the provided EmailCommunication
func (t *Communication) FromEmailCommunication(v EmailCommunication) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEmailCommunication performs a merge with any union data inside the Communication, using the provided EmailCommunication
func (t *Communication) MergeEmailCommunication(v EmailCommunication) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSmsCommunication returns the union data inside the Communication as a SmsCommunication
func (t Communication) AsSmsCommunication() (SmsCommunication, error) {
	var body SmsCommunication
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSmsCommunication overwrites any union data inside the Communication as the provided SmsCommunication
func (t *Communication) FromSmsCommunication(v SmsCommunication) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSmsCommunication performs a merge with any union data inside the Communication, using the provided SmsCommunication
func (t *Communication) MergeSmsCommunication(v SmsCommunication) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t Communication) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Communication) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsFullPatientExport returns the union data inside the PatientAttachment as a FullPatientExport
func (t PatientAttachment) AsFullPatientExport() (FullPatientExport, error) {
	var body FullPatientExport
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFullPatientExport overwrites any union data inside the PatientAttachment as the provided FullPatientExport
func (t *PatientAttachment) FromFullPatientExport(v FullPatientExport) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFullPatientExport performs a merge with any union data inside the PatientAttachment, using the provided FullPatientExport
func (t *PatientAttachment) MergeFullPatientExport(v FullPatientExport) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsUploadedPatientAttachment returns the union data inside the PatientAttachment as a UploadedPatientAttachment
func (t PatientAttachment) AsUploadedPatientAttachment() (UploadedPatientAttachment, error) {
	var body UploadedPatientAttachment
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUploadedPatientAttachment overwrites any union data inside the PatientAttachment as the provided UploadedPatientAttachment
func (t *PatientAttachment) FromUploadedPatientAttachment(v UploadedPatientAttachment) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUploadedPatientAttachment performs a merge with any union data inside the PatientAttachment, using the provided UploadedPatientAttachment
func (t *PatientAttachment) MergeUploadedPatientAttachment(v UploadedPatientAttachment) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t PatientAttachment) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *PatientAttachment) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
